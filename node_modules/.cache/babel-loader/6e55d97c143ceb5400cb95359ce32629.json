{"remainingRequest":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js!D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ideaworkspace\\jxc-front-end\\src\\components\\jeecg\\JGraphicCode.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ideaworkspace\\jxc-front-end\\src\\components\\jeecg\\JGraphicCode.vue","mtime":1648374777534},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1648365068269},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":1648364957239}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\nimport { getAction } from '@/api/manage';\nexport default {\n  name: 'JGraphicCode',\n  props: {\n    length: {\n      type: Number,\n      default: 4\n    },\n    fontSizeMin: {\n      type: Number,\n      default: 20\n    },\n    fontSizeMax: {\n      type: Number,\n      default: 45\n    },\n    backgroundColorMin: {\n      type: Number,\n      default: 180\n    },\n    backgroundColorMax: {\n      type: Number,\n      default: 240\n    },\n    colorMin: {\n      type: Number,\n      default: 50\n    },\n    colorMax: {\n      type: Number,\n      default: 160\n    },\n    lineColorMin: {\n      type: Number,\n      default: 40\n    },\n    lineColorMax: {\n      type: Number,\n      default: 180\n    },\n    dotColorMin: {\n      type: Number,\n      default: 0\n    },\n    dotColorMax: {\n      type: Number,\n      default: 255\n    },\n    contentWidth: {\n      type: Number,\n      default: 136\n    },\n    contentHeight: {\n      type: Number,\n      default: 38\n    },\n    remote: {\n      type: Boolean,\n      default: false,\n      required: false\n    }\n  },\n  methods: {\n    // 生成一个随机数\n    randomNum: function randomNum(min, max) {\n      return Math.floor(Math.random() * (max - min) + min);\n    },\n    // 生成一个随机的颜色\n    randomColor: function randomColor(min, max) {\n      var r = this.randomNum(min, max);\n      var g = this.randomNum(min, max);\n      var b = this.randomNum(min, max);\n      return 'rgb(' + r + ',' + g + ',' + b + ')';\n    },\n    drawPic: function drawPic() {\n      var _this = this;\n\n      this.randomCode().then(function () {\n        var canvas = document.getElementById('gc-canvas');\n        var ctx = canvas.getContext('2d');\n        ctx.textBaseline = 'bottom'; // 绘制背景\n\n        ctx.fillStyle = _this.randomColor(_this.backgroundColorMin, _this.backgroundColorMax);\n        ctx.fillRect(0, 0, _this.contentWidth, _this.contentHeight); // 绘制文字\n\n        for (var i = 0; i < _this.code.length; i++) {\n          _this.drawText(ctx, _this.code[i], i);\n        }\n\n        _this.drawLine(ctx);\n\n        _this.drawDot(ctx);\n\n        _this.$emit(\"success\", _this.code);\n      });\n    },\n    drawText: function drawText(ctx, txt, i) {\n      ctx.fillStyle = this.randomColor(this.colorMin, this.colorMax);\n      var fontSize = this.randomNum(this.fontSizeMin, this.fontSizeMax);\n      ctx.font = fontSize + 'px SimHei';\n      var padding = 10;\n      var offset = (this.contentWidth - 40) / (this.code.length - 1);\n      var x = padding;\n\n      if (i > 0) {\n        x = padding + i * offset;\n      } //let x = (i + 1) * (this.contentWidth / (this.code.length + 1))\n\n\n      var y = this.randomNum(this.fontSizeMax, this.contentHeight - 5);\n\n      if (fontSize > 40) {\n        y = 40;\n      }\n\n      var deg = this.randomNum(-10, 10); // 修改坐标原点和旋转角度\n\n      ctx.translate(x, y);\n      ctx.rotate(deg * Math.PI / 180);\n      ctx.fillText(txt, 0, 0); // 恢复坐标原点和旋转角度\n\n      ctx.rotate(-deg * Math.PI / 180);\n      ctx.translate(-x, -y);\n    },\n    drawLine: function drawLine(ctx) {\n      // 绘制干扰线\n      for (var i = 0; i < 1; i++) {\n        ctx.strokeStyle = this.randomColor(this.lineColorMin, this.lineColorMax);\n        ctx.beginPath();\n        ctx.moveTo(this.randomNum(0, this.contentWidth), this.randomNum(0, this.contentHeight));\n        ctx.lineTo(this.randomNum(0, this.contentWidth), this.randomNum(0, this.contentHeight));\n        ctx.stroke();\n      }\n    },\n    drawDot: function drawDot(ctx) {\n      // 绘制干扰点\n      for (var i = 0; i < 100; i++) {\n        ctx.fillStyle = this.randomColor(0, 255);\n        ctx.beginPath();\n        ctx.arc(this.randomNum(0, this.contentWidth), this.randomNum(0, this.contentHeight), 1, 0, 2 * Math.PI);\n        ctx.fill();\n      }\n    },\n    reloadPic: function reloadPic() {\n      this.drawPic();\n    },\n    randomCode: function randomCode() {\n      var _this2 = this;\n\n      return new Promise(function (resolve) {\n        if (_this2.remote == true) {\n          getAction(\"/sys/getCheckCode\").then(function (res) {\n            if (res.success) {\n              _this2.checkKey = res.result.key;\n              _this2.code = window.atob(res.result.code);\n              resolve();\n            } else {\n              _this2.$message.error(\"生成验证码错误,请联系系统管理员\");\n\n              _this2.code = 'BUG';\n              resolve();\n            }\n          }).catch(function () {\n            console.log(\"生成验证码连接服务器异常\");\n            _this2.code = 'BUG';\n            resolve();\n          });\n        } else {\n          _this2.randomLocalCode();\n\n          resolve();\n        }\n      });\n    },\n    randomLocalCode: function randomLocalCode() {\n      var random = ''; //去掉了I l i o O\n\n      var str = \"QWERTYUPLKJHGFDSAZXCVBNMqwertyupkjhgfdsazxcvbnm1234567890\";\n\n      for (var i = 0; i < this.length; i++) {\n        var index = Math.floor(Math.random() * 57);\n        random += str[index];\n      }\n\n      this.code = random;\n    },\n    getLoginParam: function getLoginParam() {\n      return {\n        checkCode: this.code,\n        checkKey: this.checkKey\n      };\n    }\n  },\n  mounted: function mounted() {\n    this.drawPic();\n  },\n  data: function data() {\n    return {\n      code: \"\",\n      checkKey: \"\"\n    };\n  }\n};",{"version":3,"sources":["JGraphicCode.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"gc-canvas\" @click=\"reloadPic\">\r\n    <canvas id=\"gc-canvas\" :width=\"contentWidth\" :height=\"contentHeight\"></canvas>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import { getAction } from '@/api/manage'\r\n\r\n  export default {\r\n    name: 'JGraphicCode',\r\n    props: {\r\n      length:{\r\n        type: Number,\r\n        default: 4\r\n      },\r\n      fontSizeMin: {\r\n        type: Number,\r\n        default: 20\r\n      },\r\n      fontSizeMax: {\r\n        type: Number,\r\n        default: 45\r\n      },\r\n      backgroundColorMin: {\r\n        type: Number,\r\n        default: 180\r\n      },\r\n      backgroundColorMax: {\r\n        type: Number,\r\n        default: 240\r\n      },\r\n      colorMin: {\r\n        type: Number,\r\n        default: 50\r\n      },\r\n      colorMax: {\r\n        type: Number,\r\n        default: 160\r\n      },\r\n      lineColorMin: {\r\n        type: Number,\r\n        default: 40\r\n      },\r\n      lineColorMax: {\r\n        type: Number,\r\n        default: 180\r\n      },\r\n      dotColorMin: {\r\n        type: Number,\r\n        default: 0\r\n      },\r\n      dotColorMax: {\r\n        type: Number,\r\n        default: 255\r\n      },\r\n      contentWidth: {\r\n        type: Number,\r\n        default:136\r\n      },\r\n      contentHeight: {\r\n        type: Number,\r\n        default: 38\r\n      },\r\n      remote:{\r\n        type:Boolean,\r\n        default:false,\r\n        required:false\r\n      }\r\n    },\r\n    methods: {\r\n      // 生成一个随机数\r\n      randomNum (min, max) {\r\n        return Math.floor(Math.random() * (max - min) + min)\r\n      },\r\n      // 生成一个随机的颜色\r\n      randomColor (min, max) {\r\n        let r = this.randomNum(min, max)\r\n        let g = this.randomNum(min, max)\r\n        let b = this.randomNum(min, max)\r\n        return 'rgb(' + r + ',' + g + ',' + b + ')'\r\n      },\r\n      drawPic () {\r\n        this.randomCode().then(()=>{\r\n          let canvas = document.getElementById('gc-canvas')\r\n          let ctx = canvas.getContext('2d')\r\n          ctx.textBaseline = 'bottom'\r\n          // 绘制背景\r\n          ctx.fillStyle = this.randomColor(this.backgroundColorMin, this.backgroundColorMax)\r\n          ctx.fillRect(0, 0, this.contentWidth, this.contentHeight)\r\n          // 绘制文字\r\n          for (let i = 0; i < this.code.length; i++) {\r\n            this.drawText(ctx, this.code[i], i)\r\n          }\r\n          this.drawLine(ctx)\r\n          this.drawDot(ctx)\r\n          this.$emit(\"success\",this.code)\r\n        })\r\n      },\r\n      drawText (ctx, txt, i) {\r\n        ctx.fillStyle = this.randomColor(this.colorMin, this.colorMax)\r\n        let fontSize = this.randomNum(this.fontSizeMin, this.fontSizeMax)\r\n        ctx.font = fontSize + 'px SimHei'\r\n        let padding = 10;\r\n        let offset = (this.contentWidth-40)/(this.code.length-1)\r\n        let x=padding;\r\n        if(i>0){\r\n          x = padding+(i*offset)\r\n        }\r\n        //let x = (i + 1) * (this.contentWidth / (this.code.length + 1))\r\n        let y = this.randomNum(this.fontSizeMax, this.contentHeight - 5)\r\n        if(fontSize>40){\r\n          y=40\r\n        }\r\n        var deg = this.randomNum(-10,10)\r\n        // 修改坐标原点和旋转角度\r\n        ctx.translate(x, y)\r\n        ctx.rotate(deg * Math.PI / 180)\r\n        ctx.fillText(txt, 0, 0)\r\n        // 恢复坐标原点和旋转角度\r\n        ctx.rotate(-deg * Math.PI / 180)\r\n        ctx.translate(-x, -y)\r\n      },\r\n      drawLine (ctx) {\r\n        // 绘制干扰线\r\n        for (let i = 0; i <1; i++) {\r\n          ctx.strokeStyle = this.randomColor(this.lineColorMin, this.lineColorMax)\r\n          ctx.beginPath()\r\n          ctx.moveTo(this.randomNum(0, this.contentWidth), this.randomNum(0, this.contentHeight))\r\n          ctx.lineTo(this.randomNum(0, this.contentWidth), this.randomNum(0, this.contentHeight))\r\n          ctx.stroke()\r\n        }\r\n      },\r\n      drawDot (ctx) {\r\n        // 绘制干扰点\r\n        for (let i = 0; i < 100; i++) {\r\n          ctx.fillStyle = this.randomColor(0, 255)\r\n          ctx.beginPath()\r\n          ctx.arc(this.randomNum(0, this.contentWidth), this.randomNum(0, this.contentHeight), 1, 0, 2 * Math.PI)\r\n          ctx.fill()\r\n        }\r\n      },\r\n      reloadPic(){\r\n        this.drawPic()\r\n      },\r\n      randomCode(){\r\n        return new Promise((resolve)=>{\r\n          if(this.remote==true){\r\n            getAction(\"/sys/getCheckCode\").then(res=>{\r\n              if(res.success){\r\n                this.checkKey = res.result.key\r\n                this.code = window.atob(res.result.code)\r\n                resolve();\r\n              }else{\r\n                this.$message.error(\"生成验证码错误,请联系系统管理员\")\r\n                this.code = 'BUG'\r\n                resolve();\r\n              }\r\n            }).catch(()=>{\r\n              console.log(\"生成验证码连接服务器异常\")\r\n              this.code = 'BUG'\r\n              resolve();\r\n            })\r\n          }else{\r\n            this.randomLocalCode();\r\n            resolve();\r\n          }\r\n        })\r\n      },\r\n      randomLocalCode(){\r\n        let random = ''\r\n        //去掉了I l i o O\r\n        let str = \"QWERTYUPLKJHGFDSAZXCVBNMqwertyupkjhgfdsazxcvbnm1234567890\"\r\n        for(let i = 0; i < this.length; i++) {\r\n          let index = Math.floor(Math.random()*57);\r\n          random += str[index];\r\n        }\r\n        this.code = random\r\n      },\r\n      getLoginParam(){\r\n        return {\r\n          checkCode:this.code,\r\n          checkKey:this.checkKey\r\n        }\r\n      }\r\n    },\r\n    mounted () {\r\n      this.drawPic()\r\n    },\r\n    data(){\r\n      return {\r\n        code:\"\",\r\n        checkKey:\"\"\r\n      }\r\n    }\r\n\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"sourceRoot":"src/components/jeecg"}]}