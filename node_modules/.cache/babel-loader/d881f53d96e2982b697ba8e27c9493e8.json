{"remainingRequest":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\thread-loader\\dist\\cjs.js!D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js!D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ideaworkspace\\jxc-front-end\\src\\views\\system\\DepartList.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ideaworkspace\\jxc-front-end\\src\\views\\system\\DepartList.vue","mtime":1648374778136},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1648365139913},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1648365068269},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":1648364957239}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport DepartModal from './modules/DepartModal';\nimport pick from 'lodash.pick';\nimport { queryDepartTreeList, searchByKeywords, deleteByDepartId } from '@/api/api';\nimport { httpAction, deleteAction } from '@/api/manage';\nimport { JeecgListMixin } from '@/mixins/JeecgListMixin';\nimport DepartAuthModal from './modules/DepartAuthModal'; // 表头\n\nvar columns = [{\n  title: '机构名称',\n  dataIndex: 'departName'\n}, {\n  title: '机构类型',\n  align: 'center',\n  dataIndex: 'orgType'\n}, {\n  title: '机构编码',\n  dataIndex: 'orgCode'\n}, {\n  title: '手机号',\n  dataIndex: 'mobile'\n}, {\n  title: '传真',\n  dataIndex: 'fax'\n}, {\n  title: '地址',\n  dataIndex: 'address'\n}, {\n  title: '排序',\n  align: 'center',\n  dataIndex: 'departOrder'\n}, {\n  title: '操作',\n  align: 'center',\n  dataIndex: 'action',\n  scopedSlots: {\n    customRender: 'action'\n  }\n}];\nexport default {\n  name: 'DepartList',\n  mixins: [JeecgListMixin],\n  components: {\n    DepartAuthModal: DepartAuthModal,\n    DepartModal: DepartModal\n  },\n  data: function data() {\n    return {\n      iExpandedKeys: [],\n      loading: false,\n      autoExpandParent: true,\n      currFlowId: '',\n      currFlowName: '',\n      disable: true,\n      treeData: [],\n      visible: false,\n      departTree: [],\n      rightClickSelectedKey: '',\n      rightClickSelectedOrgCode: '',\n      hiding: true,\n      model: {},\n      dropTrigger: '',\n      depart: {},\n      columns: columns,\n      disableSubmit: false,\n      checkedKeys: [],\n      selectedKeys: [],\n      autoIncr: 1,\n      currSelected: {},\n      allTreeKeys: [],\n      checkStrictly: true,\n      form: this.$form.createForm(this),\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 5\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      },\n      graphDatasource: {\n        nodes: [],\n        edges: []\n      },\n      validatorRules: {\n        departName: {\n          rules: [{\n            required: true,\n            message: '请输入机构/部门名称!'\n          }]\n        },\n        orgCode: {\n          rules: [{\n            required: true,\n            message: '请输入机构编码!'\n          }]\n        },\n        orgCategory: {\n          rules: [{\n            required: true,\n            message: '请输入机构类型!'\n          }]\n        },\n        mobile: {\n          rules: [{\n            validator: this.validateMobile\n          }]\n        }\n      },\n      url: {\n        delete: '/sys/sysDepart/delete',\n        edit: '/sys/sysDepart/edit',\n        deleteBatch: '/sys/sysDepart/deleteBatch',\n        exportXlsUrl: \"sys/sysDepart/exportXls\",\n        importExcelUrl: \"sys/sysDepart/importExcel\"\n      },\n      orgCategoryDisabled: false\n    };\n  },\n  computed: {\n    importExcelUrl: function importExcelUrl() {\n      return \"\".concat(window._CONFIG['domianURL'], \"/\").concat(this.url.importExcelUrl);\n    }\n  },\n  methods: {\n    loadData: function loadData() {\n      this.refresh();\n    },\n    loadTree: function loadTree() {\n      var _this = this;\n\n      var that = this;\n      that.treeData = [];\n      that.departTree = [];\n      queryDepartTreeList().then(function (res) {\n        if (res.success) {\n          //部门全选后，再添加部门，选中数量增多\n          _this.allTreeKeys = [];\n\n          for (var i = 0; i < res.result.length; i++) {\n            var temp = res.result[i];\n            that.treeData.push(temp);\n            that.departTree.push(temp);\n            that.setThisExpandedKeys(temp);\n            that.getAllKeys(temp); // console.log(temp.id)\n          }\n\n          _this.loading = false;\n        }\n      });\n    },\n    setThisExpandedKeys: function setThisExpandedKeys(node) {\n      if (node.children && node.children.length > 0) {\n        this.iExpandedKeys.push(node.key);\n\n        for (var a = 0; a < node.children.length; a++) {\n          this.setThisExpandedKeys(node.children[a]);\n        }\n      }\n    },\n    refresh: function refresh() {\n      this.loading = true;\n      this.loadTree();\n    },\n    // 右键操作方法\n    rightHandle: function rightHandle(node) {\n      this.dropTrigger = 'contextmenu';\n      console.log(node.node.eventKey);\n      this.rightClickSelectedKey = node.node.eventKey;\n      this.rightClickSelectedOrgCode = node.node.dataRef.orgCode;\n    },\n    onExpand: function onExpand(expandedKeys) {\n      console.log('onExpand', expandedKeys); // if not set autoExpandParent to false, if children expanded, parent can not collapse.\n      // or, you can remove all expanded children keys.\n\n      this.iExpandedKeys = expandedKeys;\n      this.autoExpandParent = false;\n    },\n    backFlowList: function backFlowList() {\n      this.$router.back(-1);\n    },\n    // 右键点击下拉框改变事件\n    dropStatus: function dropStatus(visible) {\n      if (visible == false) {\n        this.dropTrigger = '';\n      }\n    },\n    // 右键店家下拉关闭下拉框\n    closeDrop: function closeDrop() {\n      this.dropTrigger = '';\n    },\n    addRootNode: function addRootNode() {\n      this.$refs.nodeModal.add(this.currFlowId, '');\n    },\n    batchDel: function batchDel() {\n      console.log(this.checkedKeys);\n\n      if (this.checkedKeys.length <= 0) {\n        this.$message.warning('请选择一条记录！');\n      } else {\n        var ids = '';\n\n        for (var a = 0; a < this.checkedKeys.length; a++) {\n          ids += this.checkedKeys[a] + ',';\n        }\n\n        var that = this;\n        this.$confirm({\n          title: '确认删除',\n          content: '确定要删除所选中的 ' + this.checkedKeys.length + ' 条数据，以及子节点数据吗?',\n          onOk: function onOk() {\n            deleteAction(that.url.deleteBatch, {\n              ids: ids\n            }).then(function (res) {\n              if (res.success) {\n                that.$message.success(res.message);\n                that.loadTree();\n                that.onClearSelected();\n              } else {\n                that.$message.warning(res.message);\n              }\n            });\n          }\n        });\n      }\n    },\n    onSearch: function onSearch(value) {\n      var that = this;\n\n      if (value) {\n        searchByKeywords({\n          keyWord: value\n        }).then(function (res) {\n          if (res.success) {\n            that.departTree = [];\n\n            for (var i = 0; i < res.result.length; i++) {\n              var temp = res.result[i];\n              that.departTree.push(temp);\n            }\n          } else {\n            that.$message.warning(res.message);\n          }\n        });\n      } else {\n        that.loadTree();\n      }\n    },\n    nodeModalOk: function nodeModalOk() {\n      this.loadTree();\n    },\n    nodeModalClose: function nodeModalClose() {},\n    hide: function hide() {\n      console.log(111);\n      this.visible = false;\n    },\n    onCheck: function onCheck(checkedKeys, info) {\n      console.log('onCheck', checkedKeys, info);\n      this.hiding = false; //this.checkedKeys = checkedKeys.checked\n      // <!---- author:os_chengtgen -- date:20190827 --  for:切换父子勾选模式 =======------>\n\n      if (this.checkStrictly) {\n        this.checkedKeys = checkedKeys.checked;\n      } else {\n        this.checkedKeys = checkedKeys;\n      } // <!---- author:os_chengtgen -- date:20190827 --  for:切换父子勾选模式 =======------>\n\n    },\n    onSelect: function onSelect(selectedKeys, e) {\n      console.log('selected', selectedKeys, e);\n      this.hiding = false;\n      var record = e.node.dataRef;\n      console.log('onSelect-record', record);\n      this.currSelected = Object.assign({}, record);\n      this.model = this.currSelected;\n      this.selectedKeys = [record.key];\n      this.model.parentId = record.parentId;\n      this.setValuesToForm(record);\n      this.$refs.departAuth.show(record.id);\n    },\n    // 触发onSelect事件时,为部门树右侧的form表单赋值\n    setValuesToForm: function setValuesToForm(record) {\n      var _this2 = this;\n\n      if (record.orgCategory == '1') {\n        this.orgCategoryDisabled = true;\n      } else {\n        this.orgCategoryDisabled = false;\n      }\n\n      this.$nextTick(function () {\n        _this2.form.getFieldDecorator('fax', {\n          initialValue: ''\n        });\n\n        _this2.form.setFieldsValue(pick(record, 'departName', 'orgCategory', 'orgCode', 'departOrder', 'mobile', 'fax', 'address', 'memo'));\n      });\n    },\n    getCurrSelectedTitle: function getCurrSelectedTitle() {\n      return !this.currSelected.title ? '' : this.currSelected.title;\n    },\n    onClearSelected: function onClearSelected() {\n      this.hiding = true;\n      this.checkedKeys = [];\n      this.currSelected = {};\n      this.form.resetFields();\n      this.selectedKeys = [];\n      this.$refs.departAuth.departId = '';\n    },\n    handleNodeTypeChange: function handleNodeTypeChange(val) {\n      this.currSelected.nodeType = val;\n    },\n    notifyTriggerTypeChange: function notifyTriggerTypeChange(value) {\n      this.currSelected.notifyTriggerType = value;\n    },\n    receiptTriggerTypeChange: function receiptTriggerTypeChange(value) {\n      this.currSelected.receiptTriggerType = value;\n    },\n    submitCurrForm: function submitCurrForm() {\n      var _this3 = this;\n\n      this.form.validateFields(function (err, values) {\n        if (!err) {\n          if (!_this3.currSelected.id) {\n            _this3.$message.warning('请点击选择要修改部门!');\n\n            return;\n          }\n\n          var formData = Object.assign(_this3.currSelected, values);\n          console.log('Received values of form: ', formData);\n          httpAction(_this3.url.edit, formData, 'put').then(function (res) {\n            if (res.success) {\n              _this3.$message.success('保存成功!');\n\n              _this3.loadTree();\n            } else {\n              _this3.$message.error(res.message);\n            }\n          });\n        }\n      });\n    },\n    emptyCurrForm: function emptyCurrForm() {\n      this.form.resetFields();\n    },\n    nodeSettingFormSubmit: function nodeSettingFormSubmit() {\n      this.form.validateFields(function (err, values) {\n        if (!err) {\n          console.log('Received values of form: ', values);\n        }\n      });\n    },\n    openSelect: function openSelect() {\n      this.$refs.sysDirectiveModal.show();\n    },\n    handleAdd: function handleAdd(num) {\n      if (num == 1) {\n        this.$refs.departModal.add();\n        this.$refs.departModal.title = '新增';\n      } else if (num == 2) {\n        var key = this.currSelected.key;\n\n        if (!key) {\n          this.$message.warning('请先点击选中上级部门！');\n          return false;\n        }\n\n        this.$refs.departModal.add(this.selectedKeys);\n        this.$refs.departModal.title = '新增';\n      } else {\n        this.$refs.departModal.add(this.rightClickSelectedKey);\n        this.$refs.departModal.title = '新增';\n      }\n    },\n    handleDelete: function handleDelete() {\n      var that = this;\n      this.$confirm({\n        title: '确认删除',\n        content: '确定要删除此部门以及子节点数据吗?',\n        onOk: function onOk() {\n          deleteByDepartId({\n            id: that.rightClickSelectedKey\n          }).then(function (resp) {\n            if (resp.success) {\n              //删除成功后，去除已选中中的数据\n              that.checkedKeys.splice(that.checkedKeys.findIndex(function (key) {\n                return key === that.rightClickSelectedKey;\n              }), 1);\n              that.$message.success('删除成功!');\n              that.loadTree(); //删除后同步清空右侧基本信息内容\n\n              var orgCode = that.form.getFieldValue(\"orgCode\");\n\n              if (orgCode && orgCode === that.rightClickSelectedOrgCode) {\n                that.onClearSelected();\n              }\n            } else {\n              that.$message.warning('删除失败!');\n            }\n          });\n        }\n      });\n    },\n    selectDirectiveOk: function selectDirectiveOk(record) {\n      console.log('选中指令数据', record);\n      this.nodeSettingForm.setFieldsValue({\n        directiveCode: record.directiveCode\n      });\n      this.currSelected.sysCode = record.sysCode;\n    },\n    getFlowGraphData: function getFlowGraphData(node) {\n      this.graphDatasource.nodes.push({\n        id: node.id,\n        text: node.flowNodeName\n      });\n\n      if (node.children.length > 0) {\n        for (var a = 0; a < node.children.length; a++) {\n          var temp = node.children[a];\n          this.graphDatasource.edges.push({\n            source: node.id,\n            target: temp.id\n          });\n          this.getFlowGraphData(temp);\n        }\n      }\n    },\n    // <!---- author:os_chengtgen -- date:20190827 --  for:切换父子勾选模式 =======------>\n    expandAll: function expandAll() {\n      this.iExpandedKeys = this.allTreeKeys;\n    },\n    closeAll: function closeAll() {\n      this.iExpandedKeys = [];\n    },\n    checkALL: function checkALL() {\n      this.checkStriccheckStrictlytly = false;\n      this.checkedKeys = this.allTreeKeys;\n    },\n    cancelCheckALL: function cancelCheckALL() {\n      //this.checkedKeys = this.defaultCheckedKeys\n      this.checkedKeys = [];\n    },\n    switchCheckStrictly: function switchCheckStrictly(v) {\n      if (v == 1) {\n        this.checkStrictly = false;\n      } else if (v == 2) {\n        this.checkStrictly = true;\n      }\n    },\n    getAllKeys: function getAllKeys(node) {\n      // console.log('node',node);\n      this.allTreeKeys.push(node.key);\n\n      if (node.children && node.children.length > 0) {\n        for (var a = 0; a < node.children.length; a++) {\n          this.getAllKeys(node.children[a]);\n        }\n      }\n    } // <!---- author:os_chengtgen -- date:20190827 --  for:切换父子勾选模式 =======------>\n\n  },\n  created: function created() {\n    this.currFlowId = this.$route.params.id;\n    this.currFlowName = this.$route.params.name; // this.loadTree()\n  }\n};",null]}