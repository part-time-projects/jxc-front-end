{"remainingRequest":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\thread-loader\\dist\\cjs.js!D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js!D:\\ideaworkspace\\jxc-front-end\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\ideaworkspace\\jxc-front-end\\src\\mixins\\OnlAutoListMixin.js","dependencies":[{"path":"D:\\ideaworkspace\\jxc-front-end\\src\\mixins\\OnlAutoListMixin.js","mtime":1648374777575},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1648365139913},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1648365068269},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1648365119872}],"contextDependencies":[],"result":["export var HrefJump = {\n  data: function data() {\n    var _this = this;\n\n    return {\n      fieldHrefSlots: [],\n      hrefComponent: {\n        model: {\n          title: '',\n          width: '100%',\n          visible: false,\n          destroyOnClose: true,\n          style: {\n            top: 0,\n            left: 0,\n            height: '100%',\n            margin: 0,\n            padding: 0\n          },\n          bodyStyle: {\n            padding: '8px',\n            height: 'calc(100vh - 108px)',\n            overflow: 'auto',\n            overflowX: 'hidden'\n          },\n          // 隐藏掉取消按钮\n          cancelButtonProps: {\n            style: {\n              display: 'none'\n            }\n          },\n          afterClose: function afterClose() {\n            // 恢复body的滚动\n            document.body.style.overflow = null;\n          }\n        },\n        on: {\n          ok: function ok() {\n            return _this.hrefComponent.model.visible = false;\n          },\n          cancel: function cancel() {\n            return _this.hrefComponent.model.visible = false;\n          }\n        },\n        is: null,\n        params: {}\n      }\n    };\n  },\n  methods: {\n    //支持链接href跳转\n    handleClickFieldHref: function handleClickFieldHref(field, record) {\n      var href = field.href;\n      var urlPattern = /(ht|f)tp(s?)\\:\\/\\/[0-9a-zA-Z]([-.\\w]*[0-9a-zA-Z])*(:(0-9)*)*(\\/?)([a-zA-Z0-9\\-\\.\\?\\,\\'\\/\\\\\\+&amp;%\\$#_]*)?/;\n      var compPattern = /\\.vue(\\?.*)?$/;\n\n      if (typeof href === 'string') {\n        href = href.trim().replace(/\\${([^}]+)?}/g, function (s1, s2) {\n          return record[s2];\n        });\n\n        if (urlPattern.test(href)) {\n          window.open(href, '_blank');\n        } else if (compPattern.test(href)) {\n          this.openHrefCompModal(href);\n        } else {\n          this.$router.push(href);\n        }\n      }\n    },\n    openHrefCompModal: function openHrefCompModal(href) {\n      // 解析 href 参数\n      var index = href.indexOf('?');\n      var path = href;\n\n      if (index !== -1) {\n        path = href.substring(0, index);\n        var paramString = href.substring(index + 1, href.length);\n        var paramArray = paramString.split('&');\n        var params = {};\n        paramArray.forEach(function (paramObject) {\n          var paramItem = paramObject.split('=');\n          params[paramItem[0]] = paramItem[1];\n        });\n        this.hrefComponent.params = params;\n      } else {\n        this.hrefComponent.params = {};\n      }\n\n      this.hrefComponent.model.visible = true;\n      this.hrefComponent.model.title = '@/views/' + path;\n\n      this.hrefComponent.is = function () {\n        return import('@/views/' + (path.startsWith('/') ? path.slice(1) : path));\n      }; // 禁止body滚动，防止滚动穿透\n\n\n      setTimeout(function () {\n        document.body.style.overflow = 'hidden';\n      }, 300);\n    }\n  }\n};",null]}