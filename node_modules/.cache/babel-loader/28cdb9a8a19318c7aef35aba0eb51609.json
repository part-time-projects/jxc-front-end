{"remainingRequest":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\thread-loader\\dist\\cjs.js!D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js!D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ideaworkspace\\jxc-front-end\\src\\views\\erp\\components\\EditableTableColumnsSetter.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ideaworkspace\\jxc-front-end\\src\\views\\erp\\components\\EditableTableColumnsSetter.vue","mtime":1648374777613},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1648365139913},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1648365068269},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":1648364957239}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Vue from \"vue\";\nimport { FormTypes } from \"@/utils/JEditableTableUtil\";\nexport default {\n  name: \"EditableTableColumnsSetter\",\n  props: {\n    columns: {\n      type: Array,\n      required: true\n    },\n    ignoreColumns: {\n      type: Array,\n      default: function _default() {\n        return ['rowIndex', 'action', 'flag'];\n      }\n    },\n    tableName: {\n      type: String,\n      default: ''\n    }\n  },\n  data: function data() {\n    return {\n      settingColumns: []\n    };\n  },\n  computed: {\n    ls_key: function ls_key() {\n      return this.$route.name + '/' + this.tableName + ':colsettings';\n    }\n  },\n  created: function created() {\n    this.initColumns();\n  },\n  methods: {\n    initColumns: function initColumns() {\n      //权限过滤（列权限控制时打开，修改第二个参数为授权码前缀）\n      //this.defColumns = colAuthFilter(this.defColumns,'testdemo:');\n      var that = this;\n      var colSettings = Vue.ls.get(this.ls_key);\n\n      if (colSettings == null) {\n        that.columns.forEach(function (item, i, array) {\n          that.settingColumns.push(item.key);\n        });\n      } else {\n        that.settingColumns = colSettings;\n        that.columns.forEach(function (item, i, array) {\n          if (that.ignoreColumns.includes(item.key)) return;\n\n          if (colSettings.includes(item.key)) {\n            if (item.typeDef !== undefined && item.typeDef !== null && item.typeDef !== \"\" && item.typeDef !== FormTypes.hidden) {\n              item.type = item.typeDef;\n            }\n          } else {\n            item.typeDef = item.type;\n            item.type = FormTypes.hidden;\n          }\n        });\n      }\n    },\n    //列设置更改事件\n    onColSettingsChange: function onColSettingsChange(checkedValues) {\n      var that = this;\n      Vue.ls.set(this.ls_key, checkedValues, 7 * 24 * 60 * 60 * 1000);\n      that.settingColumns = checkedValues;\n      that.columns.forEach(function (item, i, array) {\n        if (that.ignoreColumns.includes(item.key)) return;\n\n        if (checkedValues.includes(item.key)) {\n          if (item.typeDef !== undefined && item.typeDef !== null && item.typeDef !== \"\" && item.typeDef !== FormTypes.hidden) {\n            item.type = item.typeDef;\n          }\n        } else if (item.type !== FormTypes.hidden) {\n          item.typeDef = item.type;\n          item.type = FormTypes.hidden;\n        }\n      });\n    }\n  }\n};",null]}