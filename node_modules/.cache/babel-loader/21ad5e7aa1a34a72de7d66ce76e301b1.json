{"remainingRequest":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\thread-loader\\dist\\cjs.js!D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js!D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ideaworkspace\\jxc-front-end\\src\\views\\system\\modules\\SysFillRuleModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ideaworkspace\\jxc-front-end\\src\\views\\system\\modules\\SysFillRuleModal.vue","mtime":1648374778161},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1648365139913},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1648365068269},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":1648364957239}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport pick from 'lodash.pick';\nimport { httpAction } from '@/api/manage';\nimport { validateDuplicateValue } from '@/utils/util';\nexport default {\n  name: 'SysFillRuleModal',\n  components: {},\n  data: function data() {\n    var _this = this;\n\n    return {\n      title: '操作',\n      visible: false,\n      model: {},\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 5\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      },\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      validatorRules: {\n        ruleName: {\n          rules: [{\n            required: true,\n            message: '规则名称不能为空'\n          }]\n        },\n        ruleCode: {\n          rules: [{\n            required: true,\n            message: '规则Code不能为空'\n          }, {\n            validator: function validator(rule, value, callback) {\n              return validateDuplicateValue('sys_fill_rule', 'rule_code', value, _this.model.id, callback);\n            }\n          }]\n        },\n        ruleClass: {\n          rules: [{\n            required: true,\n            message: '规则实现类不能为空'\n          }]\n        },\n        ruleParams: {\n          rules: [{\n            validator: function validator(rule, value, callback) {\n              try {\n                var json = JSON.parse(value);\n\n                if (json instanceof Array) {\n                  callback('只能传递JSON对象，不能传递JSON数组');\n                } else if (json instanceof Object) {\n                  callback();\n                } else {\n                  callback('请输入JSON字符串');\n                }\n              } catch (_unused) {\n                callback('请输入JSON字符串');\n              }\n            }\n          }]\n        }\n      },\n      url: {\n        add: '/sys/fillRule/add',\n        edit: '/sys/fillRule/edit'\n      }\n    };\n  },\n  computed: {\n    disabledCode: function disabledCode() {\n      return !!this.model.id;\n    }\n  },\n  created: function created() {},\n  methods: {\n    add: function add() {\n      this.edit({});\n    },\n    edit: function edit(record) {\n      var _this2 = this;\n\n      this.form.resetFields();\n      this.model = Object.assign({}, record);\n      this.visible = true;\n      this.$nextTick(function () {\n        _this2.form.setFieldsValue(pick(_this2.model, 'ruleName', 'ruleCode', 'ruleClass', 'ruleParams'));\n      });\n    },\n    close: function close() {\n      this.$emit('close');\n      this.visible = false;\n    },\n    handleOk: function handleOk() {\n      var _this3 = this;\n\n      var that = this; // 触发表单验证\n\n      this.form.validateFields(function (err, values) {\n        if (!err) {\n          that.confirmLoading = true;\n          var httpUrl = _this3.url.add,\n              method = 'post';\n\n          if (_this3.model.id) {\n            httpUrl = _this3.url.edit;\n            method = 'put';\n          }\n\n          var formData = Object.assign(_this3.model, values);\n          httpAction(httpUrl, formData, method).then(function (res) {\n            if (res.success) {\n              that.$message.success(res.message);\n              that.$emit('ok');\n            } else {\n              that.$message.warning(res.message);\n            }\n          }).finally(function () {\n            that.confirmLoading = false;\n            that.close();\n          });\n        }\n      });\n    },\n    handleCancel: function handleCancel() {\n      this.close();\n    }\n  }\n};",null]}