{"remainingRequest":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\thread-loader\\dist\\cjs.js!D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js!D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ideaworkspace\\jxc-front-end\\src\\views\\system\\modules\\AddressListLeft.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ideaworkspace\\jxc-front-end\\src\\views\\system\\modules\\AddressListLeft.vue","mtime":1648374778146},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1648365139913},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1648365068269},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":1648364957239}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { queryDepartTreeList, searchByKeywords } from '@/api/api';\nexport default {\n  name: 'AddressListLeft',\n  props: ['value'],\n  data: function data() {\n    return {\n      cardLoading: true,\n      loading: false,\n      treeDataSource: [],\n      selectedKeys: [],\n      expandedKeys: []\n    };\n  },\n  created: function created() {\n    this.queryTreeData();\n  },\n  methods: {\n    queryTreeData: function queryTreeData(keyword) {\n      this.commonRequestThen(queryDepartTreeList({\n        departName: keyword ? keyword : undefined\n      }));\n    },\n    handleSearch: function handleSearch(value) {\n      if (value) {\n        this.commonRequestThen(searchByKeywords({\n          keyWord: value\n        }));\n      } else {\n        this.queryTreeData();\n      }\n    },\n    handleTreeSelect: function handleTreeSelect(selectedKeys, event) {\n      if (selectedKeys.length > 0 && this.selectedKeys[0] !== selectedKeys[0]) {\n        this.selectedKeys = [selectedKeys[0]];\n        var orgCode = event.node.dataRef.orgCode;\n        this.emitInput(orgCode);\n      }\n    },\n    emitInput: function emitInput(orgCode) {\n      this.$emit('input', orgCode);\n    },\n    commonRequestThen: function commonRequestThen(promise) {\n      var _this = this;\n\n      this.loading = true;\n      promise.then(function (res) {\n        if (res.success) {\n          _this.treeDataSource = res.result; // update-begin- --- author:wangshuai ------ date:20200102 ---- for:去除默认选中第一条数据、默认展开所有第一级\n          // 默认选中第一条数据、默认展开所有第一级\n          // if (res.result.length > 0) {\n          //   this.expandedKeys = []\n          //   res.result.forEach((item, index) => {\n          //     if (index === 0) {\n          //       this.selectedKeys = [item.id]\n          //       this.emitInput(item.orgCode)\n          //     }\n          //     this.expandedKeys.push(item.id)\n          //   })\n          // }\n          // update-end- --- author:wangshuai ------ date:20200102 ---- for:去除默认选中第一条数据、默认展开所有第一级\n        } else {\n          _this.$message.warn(res.message);\n\n          console.error('组织机构查询失败:', res);\n        }\n      }).finally(function () {\n        _this.loading = false;\n        _this.cardLoading = false;\n      });\n    }\n  }\n};",null]}