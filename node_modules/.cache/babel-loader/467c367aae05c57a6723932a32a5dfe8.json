{"remainingRequest":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js!D:\\ideaworkspace\\jxc-front-end\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\ideaworkspace\\jxc-front-end\\src\\views\\erp\\utils\\editableTableValidate.js","dependencies":[{"path":"D:\\ideaworkspace\\jxc-front-end\\src\\views\\erp\\utils\\editableTableValidate.js","mtime":1648374777650},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1648365068269},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1648365119872}],"contextDependencies":[],"result":["export function validateEntryNo(type, value, row, column, callback, target) {\n  if (type !== 'blur') {\n    callback(); //无参或者null：不做操作\n\n    return;\n  }\n\n  var _target$getValuesSync = target.getValuesSync({\n    validate: false\n  }),\n      values = _target$getValuesSync.values;\n\n  var count = 0;\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = values[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var val = _step.value;\n\n      if (Number(val['entryNo']) === Number(value)) {\n        if (++count >= 2) {\n          callback(false, '${title}不能重复');\n          return;\n        }\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  callback(true); //true：通过验证\n}\nexport function validateByIsRubric(type, value, row, column, callback, target) {\n  if (type !== 'blur') {\n    callback(); //无参或者null：不做操作\n\n    return;\n  }\n\n  var v = Number(value);\n\n  if (isNaN(v)) {\n    callback();\n    return;\n  }\n\n  var isRubric = Number(this.form.getFieldValue(\"isRubric\"));\n\n  if (isRubric === 0 && v < 0) {\n    callback(false, '蓝字单${title}不能为负数');\n    return;\n  } else if (isRubric === 1 && v > 0) {\n    callback(false, '红字单${title}不能为正数');\n    return;\n  }\n\n  callback(true); //true：通过验证\n}",{"version":3,"sources":["D:/ideaworkspace/jxc-front-end/src/views/erp/utils/editableTableValidate.js"],"names":["validateEntryNo","type","value","row","column","callback","target","getValuesSync","validate","values","count","val","Number","validateByIsRubric","v","isNaN","isRubric","form","getFieldValue"],"mappings":"AAAA,OAAO,SAASA,eAAT,CAAyBC,IAAzB,EAA+BC,KAA/B,EAAsCC,GAAtC,EAA2CC,MAA3C,EAAmDC,QAAnD,EAA6DC,MAA7D,EAAqE;AAC1E,MAAIL,IAAI,KAAK,MAAb,EAAqB;AACnBI,IAAAA,QAAQ,GADW,CACR;;AACX;AACD;;AAJyE,8BAMzDC,MAAM,CAACC,aAAP,CAAqB;AAAEC,IAAAA,QAAQ,EAAE;AAAZ,GAArB,CANyD;AAAA,MAMpEC,MANoE,yBAMpEA,MANoE;;AAO1E,MAAIC,KAAK,GAAG,CAAZ;AAP0E;AAAA;AAAA;;AAAA;AAQ1E,yBAAgBD,MAAhB,8HAAwB;AAAA,UAAfE,GAAe;;AACtB,UAAIC,MAAM,CAACD,GAAG,CAAC,SAAD,CAAJ,CAAN,KAA2BC,MAAM,CAACV,KAAD,CAArC,EAA8C;AAC5C,YAAI,EAAEQ,KAAF,IAAW,CAAf,EAAkB;AAChBL,UAAAA,QAAQ,CAAC,KAAD,EAAQ,cAAR,CAAR;AACA;AACD;AACF;AACF;AAfyE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgB1EA,EAAAA,QAAQ,CAAC,IAAD,CAAR,CAhB0E,CAgB1D;AACjB;AAED,OAAO,SAASQ,kBAAT,CAA4BZ,IAA5B,EAAkCC,KAAlC,EAAyCC,GAAzC,EAA8CC,MAA9C,EAAsDC,QAAtD,EAAgEC,MAAhE,EAAwE;AAC7E,MAAIL,IAAI,KAAK,MAAb,EAAqB;AACnBI,IAAAA,QAAQ,GADW,CACR;;AACX;AACD;;AAED,MAAMS,CAAC,GAAGF,MAAM,CAACV,KAAD,CAAhB;;AACA,MAAIa,KAAK,CAACD,CAAD,CAAT,EAAc;AACZT,IAAAA,QAAQ;AACR;AACD;;AAED,MAAMW,QAAQ,GAAGJ,MAAM,CAAC,KAAKK,IAAL,CAAUC,aAAV,CAAwB,UAAxB,CAAD,CAAvB;;AACA,MAAIF,QAAQ,KAAK,CAAb,IAAkBF,CAAC,GAAG,CAA1B,EAA6B;AAC3BT,IAAAA,QAAQ,CAAC,KAAD,EAAQ,kBAAR,CAAR;AACA;AACD,GAHD,MAGO,IAAIW,QAAQ,KAAK,CAAb,IAAkBF,CAAC,GAAG,CAA1B,EAA6B;AAClCT,IAAAA,QAAQ,CAAC,KAAD,EAAQ,kBAAR,CAAR;AACA;AACD;;AACDA,EAAAA,QAAQ,CAAC,IAAD,CAAR,CApB6E,CAoB7D;AACjB","sourcesContent":["export function validateEntryNo(type, value, row, column, callback, target) {\r\n  if (type !== 'blur') {\r\n    callback();//无参或者null：不做操作\r\n    return;\r\n  }\r\n\r\n  let { values } = target.getValuesSync({ validate: false });\r\n  let count = 0;\r\n  for (let val of values) {\r\n    if (Number(val['entryNo']) === Number(value)) {\r\n      if (++count >= 2) {\r\n        callback(false, '${title}不能重复');\r\n        return;\r\n      }\r\n    }\r\n  }\r\n  callback(true); //true：通过验证\r\n}\r\n\r\nexport function validateByIsRubric(type, value, row, column, callback, target) {\r\n  if (type !== 'blur') {\r\n    callback();//无参或者null：不做操作\r\n    return;\r\n  }\r\n\r\n  const v = Number(value);\r\n  if (isNaN(v)) {\r\n    callback();\r\n    return;\r\n  }\r\n\r\n  const isRubric = Number(this.form.getFieldValue(\"isRubric\"))\r\n  if (isRubric === 0 && v < 0) {\r\n    callback(false, '蓝字单${title}不能为负数');\r\n    return;\r\n  } else if (isRubric === 1 && v > 0) {\r\n    callback(false, '红字单${title}不能为正数');\r\n    return;\r\n  }\r\n  callback(true); //true：通过验证\r\n}\r\n"]}]}