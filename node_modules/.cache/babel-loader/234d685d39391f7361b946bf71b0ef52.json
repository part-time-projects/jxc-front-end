{"remainingRequest":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\thread-loader\\dist\\cjs.js!D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js!D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ideaworkspace\\jxc-front-end\\src\\views\\system\\modules\\SelectUserListModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ideaworkspace\\jxc-front-end\\src\\views\\system\\modules\\SelectUserListModal.vue","mtime":1648374778157},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1648365139913},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1648365068269},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":1648364957239}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { filterObj } from '@/utils/util';\nimport { getUserList } from '@/api/api';\nexport default {\n  name: \"SelectUserListModal\",\n  components: {},\n  data: function data() {\n    return {\n      title: \"选择用户\",\n      queryParam: {},\n      columns: [{\n        title: '用户账号',\n        align: \"center\",\n        dataIndex: 'username',\n        fixed: 'left',\n        width: 200\n      }, {\n        title: '用户名称',\n        align: \"center\",\n        dataIndex: 'realname'\n      }, {\n        title: '性别',\n        align: \"center\",\n        dataIndex: 'sex',\n        customRender: function customRender(text) {\n          if (text == 1) {\n            return \"男\";\n          } else if (text == 2) {\n            return \"女\";\n          } else {\n            return text;\n          }\n        }\n      }, {\n        title: '手机号码',\n        align: \"center\",\n        dataIndex: 'phone'\n      }, {\n        title: '邮箱',\n        align: \"center\",\n        dataIndex: 'email'\n      }, {\n        title: '状态',\n        align: \"center\",\n        dataIndex: 'status',\n        customRender: function customRender(text) {\n          if (text == 1) {\n            return \"正常\";\n          } else if (text == 2) {\n            return \"冻结\";\n          } else {\n            return text;\n          }\n        }\n      }],\n      dataSource: [],\n      ipagination: {\n        current: 1,\n        pageSize: 5,\n        pageSizeOptions: ['5', '10', '20'],\n        showTotal: function showTotal(total, range) {\n          return range[0] + \"-\" + range[1] + \" 共\" + total + \"条\";\n        },\n        showQuickJumper: true,\n        showSizeChanger: true,\n        total: 0\n      },\n      isorter: {\n        column: 'createTime',\n        order: 'desc'\n      },\n      selectedRowKeys: [],\n      selectionRows: [],\n      visible: false,\n      toggleSearchStatus: false\n    };\n  },\n  created: function created() {\n    this.loadData();\n  },\n  methods: {\n    add: function add(selectUser, userIds) {\n      this.visible = true;\n      this.edit(selectUser, userIds);\n    },\n    edit: function edit(selectUser, userIds) {\n      //控制台报错\n      if (userIds && userIds.length > 0) {\n        this.selectedRowKeys = userIds.split(',');\n      } else {\n        this.selectedRowKeys = [];\n      }\n\n      if (!selectUser) {\n        this.selectionRows = [];\n      } else {\n        var that = this;\n        that.selectionRows = [];\n        selectUser.forEach(function (record, index) {\n          console.log(record);\n          that.selectionRows.push({\n            id: that.selectedRowKeys[index],\n            realname: record\n          });\n        }); // this.selectionRows = selectUser;\n      }\n    },\n    loadData: function loadData(arg) {\n      var _this = this;\n\n      if (arg === 1) {\n        this.ipagination.current = 1;\n      }\n\n      var params = this.getQueryParams(); //查询条件\n\n      getUserList(params).then(function (res) {\n        if (res.success) {\n          _this.dataSource = res.result.records;\n          _this.ipagination.total = res.result.total;\n        }\n      });\n    },\n    getQueryParams: function getQueryParams() {\n      var param = Object.assign({}, this.queryParam, this.isorter);\n      param.field = this.getQueryField(); //--update-begin----author:scott---date:20190818------for:新建公告时指定特定用户翻页错误SelectUserListModal #379----\n      // param.current = this.ipagination.current;\n      // param.pageSize = this.ipagination.pageSize;\n\n      param.pageNo = this.ipagination.current;\n      param.pageSize = this.ipagination.pageSize; //--update-end----author:scott---date:20190818------for:新建公告时指定特定用户翻页错误SelectUserListModal #379---\n\n      return filterObj(param);\n    },\n    getQueryField: function getQueryField() {\n      var str = \"id,\";\n\n      for (var a = 0; a < this.columns.length; a++) {\n        str += \",\" + this.columns[a].dataIndex;\n      }\n\n      return str;\n    },\n    //--update-begin----author:kangxiaolin---date:20190921------for:系统发送通知 用户多选失败 #513----\n    onSelectChange: function onSelectChange(selectedRowKeys) {\n      this.selectedRowKeys = selectedRowKeys;\n    },\n    onSelect: function onSelect(record, selected) {\n      if (selected == true) {\n        this.selectionRows.push(record);\n      } else {\n        this.selectionRows.forEach(function (item, index, arr) {\n          if (item.id == record.id) {\n            arr.splice(index, 1);\n          }\n        });\n      } //--update-end----author:kangxiaolin---date:20190921------for:系统发送通知 用户多选失败 #513----\n\n    },\n    searchReset: function searchReset() {\n      var that = this;\n      Object.keys(that.queryParam).forEach(function (key) {\n        that.queryParam[key] = '';\n      });\n      that.loadData(1);\n    },\n    handleTableChange: function handleTableChange(pagination, filters, sorter) {\n      //TODO 筛选\n      if (Object.keys(sorter).length > 0) {\n        this.isorter.column = sorter.field;\n        this.isorter.order = \"ascend\" == sorter.order ? \"asc\" : \"desc\";\n      }\n\n      this.ipagination = pagination;\n      this.loadData();\n    },\n    handleCancel: function handleCancel() {\n      this.selectionRows = [];\n      this.selectedRowKeys = [];\n      this.visible = false;\n    },\n    handleOk: function handleOk() {\n      this.$emit(\"choseUser\", this.selectionRows);\n      this.handleCancel();\n    },\n    searchByquery: function searchByquery() {\n      this.loadData(1);\n    },\n    handleToggleSearch: function handleToggleSearch() {\n      this.toggleSearchStatus = !this.toggleSearchStatus;\n    }\n  }\n};",null]}