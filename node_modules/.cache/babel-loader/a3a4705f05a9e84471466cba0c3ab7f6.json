{"remainingRequest":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\thread-loader\\dist\\cjs.js!D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js!D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ideaworkspace\\jxc-front-end\\src\\components\\chart\\MiniBar.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ideaworkspace\\jxc-front-end\\src\\components\\chart\\MiniBar.vue","mtime":1648374777519},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1648365139913},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1648365068269},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":1648364957239}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\nimport moment from 'dayjs';\nvar sourceData = [];\nvar beginDay = new Date().getTime();\n\nfor (var i = 0; i < 10; i++) {\n  sourceData.push({\n    x: moment(new Date(beginDay + 1000 * 60 * 60 * 24 * i)).format('YYYY-MM-DD'),\n    y: Math.round(Math.random() * 10)\n  });\n}\n\nvar tooltip = ['x*y', function (x, y) {\n  return {\n    name: x,\n    value: y\n  };\n}];\nvar scale = [{\n  dataKey: 'x',\n  min: 2\n}, {\n  dataKey: 'y',\n  title: '时间',\n  min: 1,\n  max: 30\n}];\nexport default {\n  name: 'MiniBar',\n  props: {\n    dataSource: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    width: {\n      type: Number,\n      default: null\n    },\n    height: {\n      type: Number,\n      default: 200\n    }\n  },\n  created: function created() {\n    if (this.dataSource.length === 0) {\n      this.data = sourceData;\n    } else {\n      this.data = this.dataSource;\n    }\n  },\n  data: function data() {\n    return {\n      tooltip: tooltip,\n      data: [],\n      scale: scale\n    };\n  }\n};",null]}