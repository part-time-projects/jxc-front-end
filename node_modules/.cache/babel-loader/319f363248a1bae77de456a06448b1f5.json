{"remainingRequest":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\thread-loader\\dist\\cjs.js!D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js!D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ideaworkspace\\jxc-front-end\\src\\views\\erp\\bas\\modules\\BasCustomerModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ideaworkspace\\jxc-front-end\\src\\views\\erp\\bas\\modules\\BasCustomerModal.vue","mtime":1648375012187},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1648365139913},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1648365068269},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":1648364957239}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { httpAction } from '@/api/manage';\nimport pick from 'lodash.pick';\nimport { validateDuplicateValue } from '@/utils/util';\nimport JDate from '@/components/jeecg/JDate';\nimport JUpload from '@/components/jeecg/JUpload';\nimport JDictSelectTag from \"@/components/dict/JDictSelectTag\";\nexport default {\n  name: \"BasCustomerModal\",\n  components: {\n    JDate: JDate,\n    JUpload: JUpload,\n    JDictSelectTag: JDictSelectTag\n  },\n  data: function data() {\n    return {\n      action: '',\n      form: this.$form.createForm(this),\n      title: \"操作\",\n      width: 1100,\n      visible: false,\n      model: {},\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 7\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      },\n      confirmLoading: false,\n      validatorRules: {\n        code: {\n          rules: [{\n            required: true,\n            message: '请输入编码!'\n          }]\n        },\n        name: {\n          rules: []\n        },\n        shortName: {\n          rules: []\n        },\n        customerLevelId: {\n          rules: []\n        },\n        taxScale: {\n          rules: []\n        },\n        arrearsLimit: {\n          rules: []\n        },\n        headquarters: {\n          rules: []\n        },\n        area: {\n          rules: []\n        },\n        bizArea: {\n          rules: []\n        },\n        website: {\n          rules: []\n        },\n        corporate: {\n          rules: []\n        },\n        corporatePhone: {\n          rules: []\n        },\n        address: {\n          rules: []\n        },\n        contactsFinancial: {\n          rules: []\n        },\n        phoneFinancial: {\n          rules: []\n        },\n        unitInvoice: {\n          rules: []\n        },\n        bankInvoice: {\n          rules: []\n        },\n        bankidInvoice: {\n          rules: []\n        },\n        taxInvoice: {\n          rules: []\n        },\n        phoneInvoice: {\n          rules: []\n        },\n        accountInvoice: {\n          rules: []\n        },\n        addressInvoice: {\n          rules: []\n        },\n        unitPayment: {\n          rules: []\n        },\n        bankPayment: {\n          rules: []\n        },\n        bankidPayment: {\n          rules: []\n        },\n        accountPayment: {\n          rules: []\n        },\n        accountReceipt: {\n          rules: []\n        },\n        postcodeReceipt: {\n          rules: []\n        },\n        addressReceipt: {\n          rules: []\n        },\n        phoneReceipt: {\n          rules: []\n        },\n        faxReceipt: {\n          rules: []\n        },\n        attachment: {\n          rules: []\n        },\n        remark: {\n          rules: []\n        },\n        isEnabled: {\n          rules: []\n        },\n        createBy: {\n          rules: []\n        },\n        createTime: {\n          rules: []\n        },\n        updateBy: {\n          rules: []\n        },\n        updateTime: {\n          rules: []\n        }\n      },\n      url: {\n        add: \"/bas/basCustomer/add\",\n        edit: \"/bas/basCustomer/edit\"\n      }\n    };\n  },\n  computed: {\n    readOnly: function readOnly() {\n      return this.action !== \"add\" && this.action !== \"edit\";\n    }\n  },\n  created: function created() {},\n  methods: {\n    add: function add() {\n      this.edit({});\n    },\n    edit: function edit(record) {\n      var _this = this;\n\n      this.form.resetFields();\n      this.model = Object.assign({}, record);\n      this.visible = true;\n      this.$nextTick(function () {\n        _this.form.setFieldsValue(pick(_this.model, 'code', 'name', 'shortName', 'customerLevelId', 'taxScale', 'arrearsLimit', 'headquarters', 'area', 'bizArea', 'website', 'corporate', 'corporatePhone', 'address', 'contactsFinancial', 'phoneFinancial', 'unitInvoice', 'bankInvoice', 'bankidInvoice', 'taxInvoice', 'phoneInvoice', 'accountInvoice', 'addressInvoice', 'unitPayment', 'bankPayment', 'bankidPayment', 'accountPayment', 'accountReceipt', 'postcodeReceipt', 'addressReceipt', 'phoneReceipt', 'faxReceipt', 'attachment', 'remark', 'isEnabled', 'createBy', 'createTime', 'updateBy', 'updateTime'));\n      });\n    },\n    close: function close() {\n      this.$emit('close');\n      this.visible = false;\n    },\n    handleOk: function handleOk() {\n      var _this2 = this;\n\n      var that = this; // 触发表单验证\n\n      this.form.validateFields(function (err, values) {\n        if (!err) {\n          that.confirmLoading = true;\n          var httpurl = '';\n          var method = '';\n\n          if (!_this2.model.id) {\n            httpurl += _this2.url.add;\n            method = 'post';\n          } else {\n            httpurl += _this2.url.edit;\n            method = 'put';\n          }\n\n          var formData = Object.assign(_this2.model, values);\n          console.log(\"表单提交数据\", formData);\n          httpAction(httpurl, formData, method).then(function (res) {\n            if (res.success) {\n              that.$message.success(res.message);\n              that.$emit('ok');\n            } else {\n              that.$message.warning(res.message);\n            }\n          }).finally(function () {\n            that.confirmLoading = false;\n            that.close();\n          });\n        }\n      });\n    },\n    handleCancel: function handleCancel() {\n      this.close();\n    },\n    popupCallback: function popupCallback(row) {\n      this.form.setFieldsValue(pick(row, 'code', 'name', 'shortName', 'customerLevelId', 'taxScale', 'arrearsLimit', 'headquarters', 'area', 'bizArea', 'website', 'corporate', 'corporatePhone', 'address', 'contactsFinancial', 'phoneFinancial', 'unitInvoice', 'bankInvoice', 'bankidInvoice', 'taxInvoice', 'phoneInvoice', 'accountInvoice', 'addressInvoice', 'unitPayment', 'bankPayment', 'bankidPayment', 'accountPayment', 'accountReceipt', 'postcodeReceipt', 'addressReceipt', 'phoneReceipt', 'faxReceipt', 'attachment', 'remark', 'isEnabled', 'createBy', 'createTime', 'updateBy', 'updateTime'));\n    }\n  }\n};",null]}