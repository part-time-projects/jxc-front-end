{"remainingRequest":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\thread-loader\\dist\\cjs.js!D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js!D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ideaworkspace\\jxc-front-end\\src\\components\\jeecg\\JUpload.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ideaworkspace\\jxc-front-end\\src\\components\\jeecg\\JUpload.vue","mtime":1648374777541},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1648365139913},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1648365068269},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":1648364957239}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Vue from 'vue';\nimport { ACCESS_TOKEN } from \"@/store/mutation-types\";\nimport { getFileAccessHttpUrl } from '@/api/manage';\nvar FILE_TYPE_ALL = \"all\";\nvar FILE_TYPE_IMG = \"image\";\nvar FILE_TYPE_TXT = \"file\";\n\nvar uidGenerator = function uidGenerator() {\n  return '-' + parseInt(Math.random() * 10000 + 1, 10);\n};\n\nvar getFileName = function getFileName(path) {\n  if (path.lastIndexOf(\"\\\\\") >= 0) {\n    var reg = new RegExp(\"\\\\\\\\\", \"g\");\n    path = path.replace(reg, \"/\");\n  }\n\n  return path.substring(path.lastIndexOf(\"/\") + 1);\n};\n\nexport default {\n  name: 'JUpload',\n  data: function data() {\n    return {\n      uploadAction: window._CONFIG['domianURL'] + \"/sys/common/upload\",\n      headers: {},\n      fileList: [],\n      newFileList: [],\n      uploadGoOn: true,\n      previewVisible: false,\n      //---------------------------- begin 图片左右换位置 -------------------------------------\n      previewImage: '',\n      containerId: '',\n      top: '',\n      left: '',\n      moveDisplay: 'none',\n      showMoverTask: false,\n      moverHold: false,\n      currentImg: '' //---------------------------- end 图片左右换位置 -------------------------------------\n\n    };\n  },\n  props: {\n    text: {\n      type: String,\n      required: false,\n      default: \"点击上传\"\n    },\n    fileType: {\n      type: String,\n      required: false,\n      default: FILE_TYPE_ALL\n    },\n\n    /*这个属性用于控制文件上传的业务路径*/\n    bizPath: {\n      type: String,\n      required: false,\n      default: \"temp\"\n    },\n    value: {\n      type: [String, Array],\n      required: false\n    },\n    // update-begin- --- author:wangshuai ------ date:20190929 ---- for:Jupload组件增加是否能够点击\n    disabled: {\n      type: Boolean,\n      required: false,\n      default: false\n    },\n    // update-end- --- author:wangshuai ------ date:20190929 ---- for:Jupload组件增加是否能够点击\n    //此属性被废弃了\n    triggerChange: {\n      type: Boolean,\n      required: false,\n      default: false\n    },\n\n    /**\n     * update -- author:lvdandan -- date:20190219 -- for:Jupload组件增加是否返回url，\n     * true：仅返回url\n     * false：返回fileName filePath fileSize\n     */\n    returnUrl: {\n      type: Boolean,\n      required: false,\n      default: true\n    },\n    number: {\n      type: Number,\n      required: false,\n      default: 0\n    },\n    buttonVisible: {\n      type: Boolean,\n      required: false,\n      default: true\n    }\n  },\n  watch: {\n    value: {\n      immediate: true,\n      handler: function handler() {\n        var val = this.value;\n\n        if (val instanceof Array) {\n          if (this.returnUrl) {\n            this.initFileList(val.join(','));\n          } else {\n            this.initFileListArr(val);\n          }\n        } else {\n          this.initFileList(val);\n        }\n      }\n    }\n  },\n  computed: {\n    isImageComp: function isImageComp() {\n      return this.fileType === FILE_TYPE_IMG;\n    },\n    complistType: function complistType() {\n      return this.fileType === FILE_TYPE_IMG ? 'picture-card' : 'text';\n    }\n  },\n  created: function created() {\n    var token = Vue.ls.get(ACCESS_TOKEN); //---------------------------- begin 图片左右换位置 -------------------------------------\n\n    this.headers = {\n      \"X-Access-Token\": token\n    };\n    this.containerId = 'container-ty-' + new Date().getTime(); //---------------------------- end 图片左右换位置 -------------------------------------\n  },\n  methods: {\n    initFileListArr: function initFileListArr(val) {\n      if (!val || val.length == 0) {\n        this.fileList = [];\n        return;\n      }\n\n      var fileList = [];\n\n      for (var a = 0; a < val.length; a++) {\n        var url = getFileAccessHttpUrl(val[a].filePath);\n        fileList.push({\n          uid: uidGenerator(),\n          name: val[a].fileName,\n          status: 'done',\n          url: url,\n          response: {\n            status: \"history\",\n            message: val[a].filePath\n          }\n        });\n      }\n\n      this.fileList = fileList;\n    },\n    initFileList: function initFileList(paths) {\n      if (!paths || paths.length == 0) {\n        //return [];\n        // update-begin- --- author:os_chengtgen ------ date:20190729 ---- for:issues:326,Jupload组件初始化bug\n        this.fileList = [];\n        return; // update-end- --- author:os_chengtgen ------ date:20190729 ---- for:issues:326,Jupload组件初始化bug\n      }\n\n      var fileList = [];\n      var arr = paths.split(\",\");\n\n      for (var a = 0; a < arr.length; a++) {\n        var url = getFileAccessHttpUrl(arr[a]);\n        fileList.push({\n          uid: uidGenerator(),\n          name: getFileName(arr[a]),\n          status: 'done',\n          url: url,\n          response: {\n            status: \"history\",\n            message: arr[a]\n          }\n        });\n      }\n\n      this.fileList = fileList;\n    },\n    handlePathChange: function handlePathChange() {\n      var uploadFiles = this.fileList;\n      var path = '';\n\n      if (!uploadFiles || uploadFiles.length == 0) {\n        path = '';\n      }\n\n      var arr = [];\n\n      for (var a = 0; a < uploadFiles.length; a++) {\n        arr.push(uploadFiles[a].response.message);\n      }\n\n      if (arr.length > 0) {\n        path = arr.join(\",\");\n      }\n\n      this.$emit('change', path);\n    },\n    beforeUpload: function beforeUpload(file) {\n      this.uploadGoOn = true;\n      var fileType = file.type;\n\n      if (this.fileType === FILE_TYPE_IMG) {\n        if (fileType.indexOf('image') < 0) {\n          this.$message.warning('请上传图片');\n          this.uploadGoOn = false;\n          return false;\n        }\n      } //TODO 扩展功能验证文件大小\n\n\n      return true;\n    },\n    handleChange: function handleChange(info) {\n      console.log(\"--文件列表改变--\");\n\n      if (!info.file.status && this.uploadGoOn === false) {\n        info.fileList.pop();\n      }\n\n      var fileList = info.fileList;\n\n      if (info.file.status === 'done') {\n        if (this.number > 0) {\n          fileList = fileList.slice(-this.number);\n        }\n\n        if (info.file.response.success) {\n          fileList = fileList.map(function (file) {\n            if (file.response) {\n              var reUrl = file.response.message;\n              file.url = getFileAccessHttpUrl(reUrl);\n            }\n\n            return file;\n          });\n        } //this.$message.success(`${info.file.name} 上传成功!`);\n\n      } else if (info.file.status === 'error') {\n        this.$message.error(\"\".concat(info.file.name, \" \\u4E0A\\u4F20\\u5931\\u8D25.\"));\n      } else if (info.file.status === 'removed') {\n        this.handleDelete(info.file);\n      }\n\n      this.fileList = fileList;\n\n      if (info.file.status === 'done' || info.file.status === 'removed') {\n        //returnUrl为true时仅返回文件路径\n        if (this.returnUrl) {\n          this.handlePathChange();\n        } else {\n          //returnUrl为false时返回文件名称、文件路径及文件大小\n          this.newFileList = [];\n\n          for (var a = 0; a < fileList.length; a++) {\n            var fileJson = {\n              fileName: fileList[a].name,\n              filePath: fileList[a].response.message,\n              fileSize: fileList[a].size\n            };\n            this.newFileList.push(fileJson);\n          }\n\n          this.$emit('change', this.newFileList);\n        }\n      }\n    },\n    handleDelete: function handleDelete(file) {\n      //如有需要新增 删除逻辑\n      console.log(file);\n    },\n    handlePreview: function handlePreview(file) {\n      if (this.fileType === FILE_TYPE_IMG) {\n        this.previewImage = file.url || file.thumbUrl;\n        this.previewVisible = true;\n      } else {\n        location.href = file.url;\n      }\n    },\n    handleCancel: function handleCancel() {\n      this.previewVisible = false;\n    },\n    //---------------------------- begin 图片左右换位置 -------------------------------------\n    moveLast: function moveLast() {\n      //console.log(ev)\n      //console.log(this.fileList)\n      //console.log(this.currentImg)\n      var index = this.getIndexByUrl();\n\n      if (index == 0) {\n        this.$message.warn('未知的操作');\n      } else {\n        var curr = this.fileList[index].url;\n        var last = this.fileList[index - 1].url;\n        var arr = [];\n\n        for (var i = 0; i < this.fileList.length; i++) {\n          if (i == index - 1) {\n            arr.push(curr);\n          } else if (i == index) {\n            arr.push(last);\n          } else {\n            arr.push(this.fileList[i].url);\n          }\n        }\n\n        this.currentImg = last;\n        this.$emit('change', arr.join(','));\n      }\n    },\n    moveNext: function moveNext() {\n      var index = this.getIndexByUrl();\n\n      if (index == this.fileList.length - 1) {\n        this.$message.warn('已到最后~');\n      } else {\n        var curr = this.fileList[index].url;\n        var next = this.fileList[index + 1].url;\n        var arr = [];\n\n        for (var i = 0; i < this.fileList.length; i++) {\n          if (i == index + 1) {\n            arr.push(curr);\n          } else if (i == index) {\n            arr.push(next);\n          } else {\n            arr.push(this.fileList[i].url);\n          }\n        }\n\n        this.currentImg = next;\n        this.$emit('change', arr.join(','));\n      }\n    },\n    getIndexByUrl: function getIndexByUrl() {\n      for (var i = 0; i < this.fileList.length; i++) {\n        if (this.fileList[i].url === this.currentImg || encodeURI(this.fileList[i].url) === this.currentImg) {\n          return i;\n        }\n      }\n\n      return -1;\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    var moverObj = document.getElementById(this.containerId + '-mover');\n    moverObj.addEventListener('mouseover', function () {\n      _this.moverHold = true;\n      _this.moveDisplay = 'block';\n    });\n    moverObj.addEventListener('mouseout', function () {\n      _this.moverHold = false;\n      _this.moveDisplay = 'none';\n    });\n    var picList = document.getElementById(this.containerId) ? document.getElementById(this.containerId).getElementsByClassName('ant-upload-list-picture-card') : [];\n\n    if (picList && picList.length > 0) {\n      picList[0].addEventListener('mouseover', function (ev) {\n        ev = ev || window.event;\n        var target = ev.target || ev.srcElement;\n\n        if ('ant-upload-list-item-info' == target.className) {\n          _this.showMoverTask = false;\n          var item = target.parentElement;\n          _this.left = item.offsetLeft;\n          _this.top = item.offsetTop + item.offsetHeight - 50;\n          _this.moveDisplay = 'block';\n          _this.currentImg = target.getElementsByTagName('img')[0].src;\n        }\n      });\n      picList[0].addEventListener('mouseout', function (ev) {\n        ev = ev || window.event;\n        var target = ev.target || ev.srcElement; //console.log('移除',target)\n\n        if ('ant-upload-list-item-info' == target.className) {\n          _this.showMoverTask = true;\n          setTimeout(function () {\n            if (_this.moverHold === false) _this.moveDisplay = 'none';\n          }, 100);\n        }\n\n        if ('ant-upload-list-item ant-upload-list-item-done' == target.className || 'ant-upload-list ant-upload-list-picture-card' == target.className) {\n          _this.moveDisplay = 'none';\n        }\n      }); //---------------------------- end 图片左右换位置 -------------------------------------\n    }\n  },\n  model: {\n    prop: 'value',\n    event: 'change'\n  }\n};",null]}