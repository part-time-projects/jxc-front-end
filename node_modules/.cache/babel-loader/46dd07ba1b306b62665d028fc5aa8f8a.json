{"remainingRequest":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\thread-loader\\dist\\cjs.js!D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js!D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ideaworkspace\\jxc-front-end\\src\\components\\jeecg\\minipop\\JInputPop.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ideaworkspace\\jxc-front-end\\src\\components\\jeecg\\minipop\\JInputPop.vue","mtime":1648374777544},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1648365139913},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1648365068269},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":1648364957239}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'JInputPop',\n  props: {\n    title: {\n      type: String,\n      default: '',\n      required: false\n    },\n    position: {\n      type: String,\n      default: 'right',\n      required: false\n    },\n    height: {\n      type: Number,\n      default: 200,\n      required: false\n    },\n    width: {\n      type: Number,\n      default: 150,\n      required: false\n    },\n    value: {\n      type: String,\n      required: false\n    },\n    popContainer: {\n      type: String,\n      default: '',\n      required: false\n    }\n  },\n  data: function data() {\n    return {\n      visible: false,\n      inputContent: ''\n    };\n  },\n  watch: {\n    value: {\n      immediate: true,\n      handler: function handler() {\n        if (this.value && this.value.length > 0) {\n          this.inputContent = this.value;\n        }\n      }\n    }\n  },\n  model: {\n    prop: 'value',\n    event: 'change'\n  },\n  methods: {\n    handleInputChange: function handleInputChange(event) {\n      this.inputContent = event.target.value;\n      this.$emit('change', this.inputContent);\n    },\n    pop: function pop() {\n      this.visible = true;\n    },\n    getPopupContainer: function getPopupContainer(node) {\n      if (!this.popContainer) {\n        return node.parentNode;\n      } else {\n        return document.getElementById(this.popContainer);\n      }\n    }\n  }\n};",null]}