{"remainingRequest":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\thread-loader\\dist\\cjs.js!D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js!D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ideaworkspace\\jxc-front-end\\src\\views\\system\\modules\\SysPositionModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ideaworkspace\\jxc-front-end\\src\\views\\system\\modules\\SysPositionModal.vue","mtime":1648374778162},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1648365139913},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1648365068269},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":1648364957239}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport pick from 'lodash.pick';\nimport { httpAction } from '@/api/manage';\nimport { duplicateCheck } from '@/api/api';\nimport JDictSelectTag from '@/components/dict/JDictSelectTag';\nvar validatorCodeTimer = null;\nexport default {\n  name: 'SysPositionModal',\n  components: {\n    JDictSelectTag: JDictSelectTag\n  },\n  data: function data() {\n    var _this = this;\n\n    return {\n      title: '操作',\n      visible: false,\n      model: {},\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 5\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      },\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      validatorRules: {\n        code: {\n          rules: [{\n            required: true,\n            message: '请输入职务编码'\n          }, {\n            validator: function validator(rule, value, callback) {\n              // 函数消抖的简单实现，防止一段时间内发送多次请求\n              if (validatorCodeTimer) {\n                // 停止上次开启的定时器\n                clearTimeout(validatorCodeTimer);\n              }\n\n              validatorCodeTimer = setTimeout(function () {\n                duplicateCheck({\n                  tableName: 'sys_position',\n                  fieldName: 'code',\n                  fieldVal: value,\n                  dataId: _this.model.id\n                }).then(function (res) {\n                  if (res.success) {\n                    callback();\n                  } else {\n                    callback(res.message);\n                  }\n                }).catch(console.error);\n              }, 300);\n            }\n          }]\n        },\n        name: {\n          rules: [{\n            required: true,\n            message: '请输入职务名称'\n          }]\n        },\n        postRank: {\n          rules: [{\n            required: true,\n            message: '请选择职级'\n          }]\n        }\n      },\n      url: {\n        add: '/sys/position/add',\n        edit: '/sys/position/edit'\n      }\n    };\n  },\n  created: function created() {},\n  methods: {\n    add: function add() {\n      this.edit({});\n    },\n    edit: function edit(record) {\n      var _this2 = this;\n\n      this.form.resetFields();\n      this.model = Object.assign({}, record);\n      this.visible = true;\n      this.$nextTick(function () {\n        _this2.form.setFieldsValue(pick(_this2.model, 'code', 'name', 'postRank' // 'companyId'\n        ));\n      });\n    },\n    close: function close() {\n      this.$emit('close');\n      this.visible = false;\n    },\n    handleOk: function handleOk() {\n      var _this3 = this;\n\n      var that = this; // 触发表单验证\n\n      this.form.validateFields(function (err, values) {\n        if (!err) {\n          that.confirmLoading = true;\n          var httpurl = '';\n          var method = '';\n\n          if (!_this3.model.id) {\n            httpurl += _this3.url.add;\n            method = 'post';\n          } else {\n            httpurl += _this3.url.edit;\n            method = 'put';\n          }\n\n          var formData = Object.assign(_this3.model, values);\n          httpAction(httpurl, formData, method).then(function (res) {\n            if (res.success) {\n              that.$message.success(res.message);\n              that.$emit('ok');\n            } else {\n              that.$message.warning(res.message);\n            }\n          }).finally(function () {\n            that.confirmLoading = false;\n            that.close();\n          });\n        }\n      });\n    },\n    handleCancel: function handleCancel() {\n      this.close();\n    }\n  }\n};",null]}