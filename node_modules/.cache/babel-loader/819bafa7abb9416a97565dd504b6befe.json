{"remainingRequest":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js!D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ideaworkspace\\jxc-front-end\\src\\views\\system\\modules\\DepartAuthModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ideaworkspace\\jxc-front-end\\src\\views\\system\\modules\\DepartAuthModal.vue","mtime":1648374778148},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1648365068269},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":1648364957239}],"contextDependencies":[],"result":["function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { queryTreeListForRole, queryDepartPermission, saveDepartPermission } from '@/api/api';\nimport DepartDataruleModal from './DepartDataruleModal';\nexport default {\n  name: 'DepartAuthModal',\n  components: {\n    DepartDataruleModal: DepartDataruleModal\n  },\n  data: function data() {\n    return {\n      departId: \"\",\n      treeData: [],\n      defaultCheckedKeys: [],\n      checkedKeys: [],\n      halfCheckedKeys: [],\n      expandedKeysss: [],\n      allTreeKeys: [],\n      autoExpandParent: true,\n      checkStrictly: false,\n      title: \"部门权限配置\",\n      visible: false,\n      loading: false,\n      selectedKeys: []\n    };\n  },\n  methods: {\n    onTreeNodeSelect: function onTreeNodeSelect(id) {\n      if (id && id.length > 0) {\n        this.selectedKeys = id;\n      }\n\n      this.$refs.datarule.show(this.selectedKeys[0], this.departId);\n    },\n    onCheck: function onCheck(checkedKeys, _ref) {\n      var halfCheckedKeys = _ref.halfCheckedKeys;\n      // 保存选中的和半选中的，后面保存的时候合并提交\n      this.checkedKeys = checkedKeys;\n      this.halfCheckedKeys = halfCheckedKeys;\n    },\n    show: function show(departId) {\n      this.departId = departId;\n      this.loadData();\n    },\n    close: function close() {\n      this.reset();\n      this.$emit('close');\n      this.visible = false;\n    },\n    onExpand: function onExpand(expandedKeys) {\n      this.expandedKeysss = expandedKeys;\n      this.autoExpandParent = false;\n    },\n    reset: function reset() {\n      this.expandedKeysss = [];\n      this.checkedKeys = [];\n      this.defaultCheckedKeys = [];\n      this.loading = false;\n    },\n    expandAll: function expandAll() {\n      this.expandedKeysss = this.allTreeKeys;\n    },\n    closeAll: function closeAll() {\n      this.expandedKeysss = [];\n    },\n    checkALL: function checkALL() {\n      this.checkedKeys = this.allTreeKeys;\n    },\n    cancelCheckALL: function cancelCheckALL() {\n      this.checkedKeys = [];\n    },\n    handleCancel: function handleCancel() {\n      this.close();\n    },\n    handleSubmit: function handleSubmit() {\n      var that = this;\n\n      if (!that.departId) {\n        this.$message.warning('请点击选择一个部门!');\n      }\n\n      var checkedKeys = [].concat(_toConsumableArray(that.checkedKeys), _toConsumableArray(that.halfCheckedKeys));\n      var permissionIds = checkedKeys.join(\",\");\n      var params = {\n        departId: that.departId,\n        permissionIds: permissionIds,\n        lastpermissionIds: that.defaultCheckedKeys.join(\",\")\n      };\n      that.loading = true;\n      saveDepartPermission(params).then(function (res) {\n        if (res.success) {\n          that.$message.success(res.message);\n          that.loading = false;\n          that.loadData();\n        } else {\n          that.$message.error(res.message);\n          that.loading = false;\n        }\n      });\n    },\n    convertTreeListToKeyLeafPairs: function convertTreeListToKeyLeafPairs(treeList) {\n      var keyLeafPair = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = treeList[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var _step$value = _step.value,\n              key = _step$value.key,\n              isLeaf = _step$value.isLeaf,\n              children = _step$value.children;\n          keyLeafPair.push({\n            key: key,\n            isLeaf: isLeaf\n          });\n\n          if (children && children.length > 0) {\n            this.convertTreeListToKeyLeafPairs(children, keyLeafPair);\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return keyLeafPair;\n    },\n    emptyCurrForm: function emptyCurrForm() {\n      this.form.resetFields();\n    },\n    loadData: function loadData() {\n      var _this = this;\n\n      queryTreeListForRole().then(function (res) {\n        _this.treeData = res.result.treeList;\n        _this.allTreeKeys = res.result.ids;\n\n        var keyLeafPairs = _this.convertTreeListToKeyLeafPairs(_this.treeData);\n\n        queryDepartPermission({\n          departId: _this.departId\n        }).then(function (res) {\n          // 过滤出 leaf node 即可，即选中的\n          // Tree组件中checkStrictly默认为false的时候，选中子节点，父节点会自动设置选中或半选中\n          // 保存 checkedKeys 以及 halfCheckedKeys 以便于未做任何操作时提交表单数据\n          var checkedKeys = _toConsumableArray(res.result).filter(function (key) {\n            var keyLeafPair = keyLeafPairs.filter(function (item) {\n              return item.key === key;\n            })[0];\n            return keyLeafPair && keyLeafPair.isLeaf;\n          });\n\n          var halfCheckedKeys = _toConsumableArray(res.result).filter(function (key) {\n            var keyLeafPair = keyLeafPairs.filter(function (item) {\n              return item.key === key;\n            })[0];\n            return keyLeafPair && !keyLeafPair.isLeaf;\n          });\n\n          _this.checkedKeys = _toConsumableArray(checkedKeys);\n          _this.halfCheckedKeys = _toConsumableArray(halfCheckedKeys);\n          _this.defaultCheckedKeys = [].concat(_toConsumableArray(halfCheckedKeys), _toConsumableArray(checkedKeys));\n          _this.expandedKeysss = _this.allTreeKeys;\n        });\n      });\n    }\n  }\n};",{"version":3,"sources":["DepartAuthModal.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <a-card :bordered=\"false\">\r\n    <template v-if=\"this.departId\">\r\n      <a-form>\r\n        <a-form-item label='所拥有的权限'>\r\n          <a-tree\r\n            checkable\r\n            @check=\"onCheck\"\r\n            :checkedKeys=\"checkedKeys\"\r\n            :treeData=\"treeData\"\r\n            @expand=\"onExpand\"\r\n            @select=\"onTreeNodeSelect\"\r\n            :selectedKeys=\"selectedKeys\"\r\n            :expandedKeys=\"expandedKeysss\"\r\n            :checkStrictly=\"checkStrictly\"\r\n            style=\"height:500px;overflow: auto;\">\r\n            <span slot=\"hasDatarule\" slot-scope=\"{slotTitle,ruleFlag}\">\r\n              {{ slotTitle }}\r\n              <a-icon v-if=\"ruleFlag\" type=\"align-left\" style=\"margin-left:5px;color: red;\"></a-icon>\r\n            </span>\r\n          </a-tree>\r\n        </a-form-item>\r\n      </a-form>\r\n      <div class=\"anty-form-btn\">\r\n        <a-dropdown style=\"float: left\" :trigger=\"['click']\" placement=\"topCenter\">\r\n          <a-menu slot=\"overlay\">\r\n            <!-- 简化Tree逻辑，使用默认checkStrictly为false的行为，即默认父子关联\r\n            <a-menu-item key=\"1\" @click=\"switchCheckStrictly(1)\">父子关联</a-menu-item>\r\n            <a-menu-item key=\"2\" @click=\"switchCheckStrictly(2)\">取消关联</a-menu-item>\r\n            -->\r\n            <a-menu-item key=\"3\" @click=\"checkALL\">全部勾选</a-menu-item>\r\n            <a-menu-item key=\"4\" @click=\"cancelCheckALL\">取消全选</a-menu-item>\r\n            <a-menu-item key=\"5\" @click=\"expandAll\">展开所有</a-menu-item>\r\n            <a-menu-item key=\"6\" @click=\"closeAll\">合并所有</a-menu-item>\r\n          </a-menu>\r\n          <a-button>\r\n            树操作 <a-icon type=\"up\" />\r\n          </a-button>\r\n        </a-dropdown>\r\n        <a-button style=\"float: right\" @click=\"handleSubmit\" type=\"primary\" htmlType=\"button\" icon=\"form\">保存</a-button>\r\n      </div>\r\n    </template>\r\n    <a-card v-else :bordered=\"false\" style=\"height:200px\">\r\n      <a-empty>\r\n        <span slot=\"description\"> 请先选择一个部门! </span>\r\n      </a-empty>\r\n    </a-card>\r\n    <depart-datarule-modal ref=\"datarule\"/>\r\n  </a-card>\r\n</template>\r\n\r\n<script>\r\n  import {queryTreeListForRole,queryDepartPermission,saveDepartPermission} from '@/api/api'\r\n  import DepartDataruleModal from './DepartDataruleModal'\r\n\r\n  export default {\r\n    name: 'DepartAuthModal',\r\n    components: { DepartDataruleModal },\r\n    data(){\r\n      return {\r\n        departId:\"\",\r\n        treeData: [],\r\n        defaultCheckedKeys:[],\r\n        checkedKeys:[],\r\n        halfCheckedKeys:[],\r\n        expandedKeysss:[],\r\n        allTreeKeys:[],\r\n        autoExpandParent: true,\r\n        checkStrictly: false,\r\n        title:\"部门权限配置\",\r\n        visible: false,\r\n        loading: false,\r\n        selectedKeys:[]\r\n      }\r\n    },\r\n    methods: {\r\n      onTreeNodeSelect(id){\r\n        if(id && id.length>0){\r\n          this.selectedKeys = id\r\n        }\r\n        this.$refs.datarule.show(this.selectedKeys[0],this.departId)\r\n      },\r\n      onCheck (checkedKeys, { halfCheckedKeys }) {\r\n        // 保存选中的和半选中的，后面保存的时候合并提交\r\n        this.checkedKeys = checkedKeys\r\n        this.halfCheckedKeys = halfCheckedKeys\r\n      },\r\n      show(departId){\r\n        this.departId=departId\r\n        this.loadData();\r\n      },\r\n      close () {\r\n        this.reset()\r\n        this.$emit('close');\r\n        this.visible = false;\r\n      },\r\n      onExpand(expandedKeys){\r\n        this.expandedKeysss = expandedKeys;\r\n        this.autoExpandParent = false\r\n      },\r\n      reset () {\r\n        this.expandedKeysss = []\r\n        this.checkedKeys = []\r\n        this.defaultCheckedKeys = []\r\n        this.loading = false\r\n      },\r\n      expandAll () {\r\n        this.expandedKeysss = this.allTreeKeys\r\n      },\r\n      closeAll () {\r\n        this.expandedKeysss = []\r\n      },\r\n      checkALL () {\r\n        this.checkedKeys = this.allTreeKeys\r\n      },\r\n      cancelCheckALL () {\r\n        this.checkedKeys = []\r\n      },\r\n      handleCancel () {\r\n        this.close()\r\n      },\r\n      handleSubmit() {\r\n        let that = this;\r\n        if(!that.departId){\r\n          this.$message.warning('请点击选择一个部门!')\r\n        }\r\n        let checkedKeys = [...that.checkedKeys, ...that.halfCheckedKeys]\r\n        const permissionIds = checkedKeys.join(\",\")\r\n        let params =  {\r\n          departId:that.departId,\r\n          permissionIds,\r\n          lastpermissionIds:that.defaultCheckedKeys.join(\",\"),\r\n        };\r\n        that.loading = true;\r\n        saveDepartPermission(params).then((res)=>{\r\n          if(res.success){\r\n            that.$message.success(res.message);\r\n            that.loading = false;\r\n            that.loadData();\r\n          }else {\r\n            that.$message.error(res.message);\r\n            that.loading = false;\r\n          }\r\n        })\r\n      },\r\n      convertTreeListToKeyLeafPairs(treeList, keyLeafPair = []) {\r\n        for(const {key, isLeaf, children} of treeList) {\r\n          keyLeafPair.push({key, isLeaf})\r\n          if(children && children.length > 0) {\r\n            this.convertTreeListToKeyLeafPairs(children, keyLeafPair)\r\n          }\r\n        }\r\n        return keyLeafPair;\r\n      },\r\n      emptyCurrForm() {\r\n        this.form.resetFields()\r\n      },\r\n      loadData(){\r\n        queryTreeListForRole().then((res) => {\r\n          this.treeData = res.result.treeList\r\n          this.allTreeKeys = res.result.ids\r\n          const keyLeafPairs = this.convertTreeListToKeyLeafPairs(this.treeData)\r\n          queryDepartPermission({departId:this.departId}).then((res)=>{\r\n            // 过滤出 leaf node 即可，即选中的\r\n            // Tree组件中checkStrictly默认为false的时候，选中子节点，父节点会自动设置选中或半选中\r\n            // 保存 checkedKeys 以及 halfCheckedKeys 以便于未做任何操作时提交表单数据\r\n            const checkedKeys = [...res.result].filter(key => {\r\n              const keyLeafPair = keyLeafPairs.filter(item => item.key === key)[0]\r\n              return keyLeafPair && keyLeafPair.isLeaf\r\n            })\r\n            const halfCheckedKeys = [...res.result].filter(key => {\r\n              const keyLeafPair = keyLeafPairs.filter(item => item.key === key)[0]\r\n              return keyLeafPair && !keyLeafPair.isLeaf\r\n            })\r\n            this.checkedKeys = [...checkedKeys];\r\n            this.halfCheckedKeys = [...halfCheckedKeys]\r\n            this.defaultCheckedKeys = [...halfCheckedKeys, ...checkedKeys];\r\n            this.expandedKeysss = this.allTreeKeys;\r\n          })\r\n        })\r\n      }\r\n    },\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"sourceRoot":"src/views/system/modules"}]}