{"remainingRequest":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js!D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ideaworkspace\\jxc-front-end\\src\\components\\jeecg\\JSwitch.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ideaworkspace\\jxc-front-end\\src\\components\\jeecg\\JSwitch.vue","mtime":1648374777539},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1648365068269},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":1648364957239}],"contextDependencies":[],"result":["//\n//\n//\nexport default {\n  name: 'JSwitch',\n  props: {\n    value: {\n      type: String,\n      required: false\n    },\n    disabled: {\n      type: Boolean,\n      required: false,\n      default: false\n    },\n    options: {\n      type: Array,\n      required: false,\n      default: function _default() {\n        return ['Y', 'N'];\n      }\n    }\n  },\n  data: function data() {\n    return {\n      checkStatus: false\n    };\n  },\n  watch: {\n    value: {\n      immediate: true,\n      handler: function handler(val) {\n        if (!val) {\n          this.checkStatus = false;\n          this.$emit('change', this.options[1]);\n        } else {\n          if (this.options[0] == val) {\n            this.checkStatus = true;\n          } else {\n            this.checkStatus = false;\n          }\n        }\n      }\n    }\n  },\n  methods: {\n    handleChange: function handleChange(checked) {\n      var flag = checked === false ? this.options[1] : this.options[0];\n      this.$emit('change', flag);\n    }\n  },\n  model: {\n    prop: 'value',\n    event: 'change'\n  }\n};",{"version":3,"sources":["JSwitch.vue"],"names":[],"mappings":";;;AAKA,eAAA;AACA,EAAA,IAAA,EAAA,SADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA,KADA;AAKA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,QAAA,EAAA,KAFA;AAGA,MAAA,OAAA,EAAA;AAHA,KALA;AAUA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,QAAA,EAAA,KAFA;AAGA,MAAA,OAAA,EAAA;AAAA,eAAA,CAAA,GAAA,EAAA,GAAA,CAAA;AAAA;AAHA;AAVA,GAFA;AAkBA,EAAA,IAlBA,kBAkBA;AACA,WAAA;AACA,MAAA,WAAA,EAAA;AADA,KAAA;AAGA,GAtBA;AAuBA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA;AACA,MAAA,SAAA,EAAA,IADA;AAEA,MAAA,OAFA,mBAEA,GAFA,EAEA;AACA,YAAA,CAAA,GAAA,EAAA;AACA,eAAA,WAAA,GAAA,KAAA;AACA,eAAA,KAAA,CAAA,QAAA,EAAA,KAAA,OAAA,CAAA,CAAA,CAAA;AACA,SAHA,MAGA;AACA,cAAA,KAAA,OAAA,CAAA,CAAA,KAAA,GAAA,EAAA;AACA,iBAAA,WAAA,GAAA,IAAA;AACA,WAFA,MAEA;AACA,iBAAA,WAAA,GAAA,KAAA;AACA;AACA;AACA;AAbA;AADA,GAvBA;AAwCA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,wBACA,OADA,EACA;AACA,UAAA,IAAA,GAAA,OAAA,KAAA,KAAA,GAAA,KAAA,OAAA,CAAA,CAAA,CAAA,GAAA,KAAA,OAAA,CAAA,CAAA,CAAA;AACA,WAAA,KAAA,CAAA,QAAA,EAAA,IAAA;AACA;AAJA,GAxCA;AA8CA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA,OADA;AAEA,IAAA,KAAA,EAAA;AAFA;AA9CA,CAAA","sourcesContent":["<template>\r\n  <a-switch v-model=\"checkStatus\" :disabled=\"disabled\" @change=\"handleChange\"/>\r\n</template>\r\n<script>\r\n\r\n  export default {\r\n    name: 'JSwitch',\r\n    props: {\r\n      value:{\r\n        type: String,\r\n        required: false\r\n      },\r\n      disabled:{\r\n        type: Boolean,\r\n        required: false,\r\n        default: false\r\n      },\r\n      options:{\r\n        type:Array,\r\n        required:false,\r\n        default:()=>['Y','N']\r\n      }\r\n    },\r\n    data () {\r\n      return {\r\n        checkStatus: false\r\n      }\r\n    },\r\n    watch: {\r\n      value:{\r\n        immediate: true,\r\n        handler(val){\r\n          if(!val){\r\n            this.checkStatus = false\r\n            this.$emit('change', this.options[1]);\r\n          }else{\r\n            if(this.options[0]==val){\r\n              this.checkStatus = true\r\n            }else{\r\n              this.checkStatus = false\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    methods: {\r\n      handleChange(checked){\r\n        let flag = checked===false?this.options[1]:this.options[0];\r\n        this.$emit('change', flag);\r\n      }\r\n    },\r\n    model: {\r\n      prop: 'value',\r\n      event: 'change'\r\n    }\r\n  }\r\n</script>\r\n"],"sourceRoot":"src/components/jeecg"}]}