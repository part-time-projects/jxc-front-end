{"remainingRequest":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js!D:\\ideaworkspace\\jxc-front-end\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\ideaworkspace\\jxc-front-end\\src\\views\\modules\\online\\cgform\\util\\TableUtils.js","dependencies":[{"path":"D:\\ideaworkspace\\jxc-front-end\\src\\views\\modules\\online\\cgform\\util\\TableUtils.js","mtime":1648374778128},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1648365068269},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1648365119872}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"D:\\\\ideaworkspace\\\\jxc-front-end\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n/**\r\n * 同步列表，可以同步新增、修改、删除\r\n * @author sunjianlei\r\n * */\nexport function syncAllTable(_x, _x2) {\n  return _syncAllTable.apply(this, arguments);\n}\n/**\r\n * 将数据分类并Set进dataSource\r\n * @author sunjianlei\r\n **/\n\nfunction _syncAllTable() {\n  _syncAllTable = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(vm, table1) {\n    var deleteIds, table1Value;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            vm.$refs.editableTable.resetScrollTop();\n            deleteIds = table1.$refs.editableTable.getDeleteIds();\n            _context.next = 4;\n            return table1.$refs.editableTable.getValuesPromise(false).then(function (values) {\n              table1Value = values;\n              return vm.$refs.editableTable.getValuesPromise(false);\n            }).then(function (values) {\n              table1Value.forEach(function (value) {\n                var flag = false;\n                values.forEach(function (thisValue) {\n                  if (value.id === thisValue.id) {\n                    // 判断是否修改了值\n                    var dbFieldName = thisValue['dbFieldName'];\n                    var dbFieldTxt = thisValue['dbFieldTxt']; // return\n\n                    if (value.dbFieldName !== dbFieldName || value.dbFieldTxt !== dbFieldTxt) {\n                      // 修改了\n                      vm.$refs.editableTable.setValues([{\n                        rowKey: thisValue.id,\n                        values: {\n                          dbFieldName: value.dbFieldName,\n                          dbFieldTxt: value.dbFieldTxt\n                        }\n                      }]);\n                    }\n\n                    flag = true;\n                  } else {\n                    // id不匹配则有可能是新增也有可能是删除了的\n                    // 遍历传进来的 deleteIds 进行对比\n                    deleteIds.forEach(function (delId) {\n                      // 对比成功，则删除该条数据\n                      if (delId === thisValue.id) {\n                        vm.$refs.editableTable.removeRows(vm.$refs.editableTable.caseId + delId);\n                        flag = true;\n                      }\n                    });\n                  }\n                }); // return\n                // 判断是否操作了该条数据，若没有操作则代表要执行新增操作\n\n                if (!flag) {\n                  var record = Object.assign({}, value);\n                  vm.columns.forEach(function (column) {\n                    if (column.dataIndex !== 'dbFieldName' && column.dataIndex !== 'dbFieldTxt') {\n                      record[column.dataIndex] = column.defaultValue;\n                    }\n                  });\n                  vm.$refs.editableTable.push(record);\n                }\n              });\n            });\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _syncAllTable.apply(this, arguments);\n}\n\nexport function setDataSource(vm, queryData) {\n  var dataSource = []; // 遍历查询出来的数据\n\n  queryData.forEach(function (value) {\n    var data = {\n      id: value['id']\n    };\n    vm.columns.forEach(function (column) {\n      var key = column.key;\n\n      if (key) {\n        data[key] = value[key]; // 由于多选下拉框返回的是一个数组，所以需要改成 [1,2,3] 数组的形式，否则组件不识别\n        // if (key === 'indexField') {\n        //   data[key] = value[key].split(',')\n        // }\n      }\n    });\n    dataSource.push(data);\n  });\n  vm.dataSource = dataSource;\n}\n/** 获取主表的初始化数据 */\n\nexport function getMasterTableInitialData() {\n  return [{\n    dbFieldName: 'id',\n    dbFieldTxt: '主键',\n    dbLength: 36,\n    dbPointLength: 0,\n    dbDefaultVal: '',\n    dbType: 'string',\n    dbIsKey: '1',\n    dbIsNull: '0',\n    // table2\n    isShowForm: '0',\n    isShowList: '0',\n    isReadOnly: '1',\n    fieldShowType: 'text',\n    fieldLength: '120',\n    queryMode: 'single',\n    orderNum: 1\n  }, {\n    dbFieldName: 'create_by',\n    dbFieldTxt: '创建人',\n    dbLength: 50,\n    dbPointLength: 0,\n    dbDefaultVal: '',\n    dbType: 'string',\n    dbIsKey: '0',\n    dbIsNull: '1',\n    // table2\n    isShowForm: '0',\n    isShowList: '0',\n    fieldShowType: 'text',\n    fieldLength: '120',\n    queryMode: 'single',\n    orderNum: 2\n  }, {\n    dbFieldName: 'create_time',\n    dbFieldTxt: '创建日期',\n    dbLength: 20,\n    dbPointLength: 0,\n    dbDefaultVal: '',\n    dbType: 'Date',\n    dbIsKey: '0',\n    dbIsNull: '1',\n    // table2\n    isShowForm: '0',\n    isShowList: '0',\n    fieldShowType: 'datetime',\n    fieldLength: '120',\n    queryMode: 'single',\n    orderNum: 3\n  }, {\n    dbFieldName: 'update_by',\n    dbFieldTxt: '更新人',\n    dbLength: 50,\n    dbPointLength: 0,\n    dbDefaultVal: '',\n    dbType: 'string',\n    dbIsKey: '0',\n    dbIsNull: '1',\n    // table2\n    isShowForm: '0',\n    isShowList: '0',\n    fieldShowType: 'text',\n    fieldLength: '120',\n    queryMode: 'single',\n    orderNum: 4\n  }, {\n    dbFieldName: 'update_time',\n    dbFieldTxt: '更新日期',\n    dbLength: 20,\n    dbPointLength: 0,\n    dbDefaultVal: '',\n    dbType: 'Date',\n    dbIsKey: '0',\n    dbIsNull: '1',\n    // table2\n    isShowForm: '0',\n    isShowList: '0',\n    fieldShowType: 'datetime',\n    fieldLength: '120',\n    queryMode: 'single',\n    orderNum: 5\n  }, {\n    dbFieldName: 'sys_org_code',\n    dbFieldTxt: '所属部门',\n    dbLength: 64,\n    dbPointLength: 0,\n    dbDefaultVal: '',\n    dbType: 'string',\n    dbIsKey: '0',\n    dbIsNull: '1',\n    // table2\n    isShowForm: '0',\n    isShowList: '0',\n    fieldShowType: 'text',\n    fieldLength: '120',\n    queryMode: 'single',\n    orderNum: 6\n  } // {\n  //   dbFieldName: 'sys_org_code',\n  //   dbFieldTxt: '所属部门',\n  //   dbLength: 50,\n  //   dbPointLength: 0,\n  //   dbDefaultVal: '',\n  //   dbType: 'string',\n  //   dbIsKey: false,\n  //   dbIsNull: true\n  // }, {\n  //   dbFieldName: 'sys_company_code',\n  //   dbFieldTxt: '所属公司',\n  //   dbLength: 50,\n  //   dbPointLength: 0,\n  //   dbDefaultVal: '',\n  //   dbType: 'string',\n  //   dbIsKey: false,\n  //   dbIsNull: true\n  // }, {\n  //   dbFieldName: 'bpm_status',\n  //   dbFieldTxt: '流程状态',\n  //   dbLength: 32,\n  //   dbPointLength: 0,\n  //   dbDefaultVal: '',\n  //   dbType: 'string',\n  //   dbIsKey: false,\n  //   dbIsNull: true\n  // }\n  ];\n}\n/** 获取树的初始化数据 */\n\nexport function getTreeNeedFields() {\n  return [{\n    dbFieldName: 'pid',\n    dbFieldTxt: '父级节点',\n    dbLength: 32,\n    dbPointLength: 0,\n    dbDefaultVal: '',\n    dbType: 'string',\n    dbIsKey: '0',\n    dbIsNull: '1',\n    // table2\n    isShowForm: '1',\n    isShowList: '0',\n    fieldShowType: 'text',\n    fieldLength: '120',\n    queryMode: 'single',\n    orderNum: 7\n  }, {\n    dbFieldName: 'has_child',\n    dbFieldTxt: '是否有子节点',\n    dbLength: 3,\n    dbPointLength: 0,\n    dbDefaultVal: '',\n    dbType: 'string',\n    dbIsKey: '0',\n    dbIsNull: '1',\n    // table2\n    isShowForm: '0',\n    isShowList: '0',\n    fieldShowType: 'list',\n    fieldLength: '120',\n    queryMode: 'single',\n    orderNum: 8,\n    // table3\n    dictField: \"yn\"\n  }];\n}",{"version":3,"sources":["D:/ideaworkspace/jxc-front-end/src/views/modules/online/cgform/util/TableUtils.js"],"names":["syncAllTable","vm","table1","$refs","editableTable","resetScrollTop","deleteIds","getDeleteIds","getValuesPromise","then","values","table1Value","forEach","value","flag","thisValue","id","dbFieldName","dbFieldTxt","setValues","rowKey","delId","removeRows","caseId","record","Object","assign","columns","column","dataIndex","defaultValue","push","setDataSource","queryData","dataSource","data","key","getMasterTableInitialData","dbLength","dbPointLength","dbDefaultVal","dbType","dbIsKey","dbIsNull","isShowForm","isShowList","isReadOnly","fieldShowType","fieldLength","queryMode","orderNum","getTreeNeedFields","dictField"],"mappings":"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","sourcesContent":["/**\r\n * 同步列表，可以同步新增、修改、删除\r\n * @author sunjianlei\r\n * */\r\nexport async function syncAllTable(vm, table1) {\r\n  vm.$refs.editableTable.resetScrollTop()\r\n  let deleteIds = table1.$refs.editableTable.getDeleteIds()\r\n  let table1Value\r\n  await table1.$refs.editableTable.getValuesPromise(false).then((values) => {\r\n    table1Value = values\r\n    return vm.$refs.editableTable.getValuesPromise(false)\r\n  }).then((values) => {\r\n\r\n    table1Value.forEach(value => {\r\n      let flag = false\r\n      values.forEach((thisValue) => {\r\n        if (value.id === thisValue.id) {\r\n\r\n          // 判断是否修改了值\r\n          let dbFieldName = thisValue['dbFieldName']\r\n          let dbFieldTxt = thisValue['dbFieldTxt']\r\n\r\n          // return\r\n\r\n          if (value.dbFieldName !== dbFieldName\r\n            || value.dbFieldTxt !== dbFieldTxt) {\r\n\r\n            // 修改了\r\n            vm.$refs.editableTable.setValues([{\r\n              rowKey: thisValue.id,\r\n              values: {\r\n                dbFieldName: value.dbFieldName,\r\n                dbFieldTxt: value.dbFieldTxt\r\n              }\r\n            }])\r\n\r\n          }\r\n          flag = true\r\n        } else {\r\n          // id不匹配则有可能是新增也有可能是删除了的\r\n          // 遍历传进来的 deleteIds 进行对比\r\n          deleteIds.forEach(delId => {\r\n            // 对比成功，则删除该条数据\r\n            if (delId === thisValue.id) {\r\n              vm.$refs.editableTable.removeRows(vm.$refs.editableTable.caseId + delId)\r\n              flag = true\r\n            }\r\n          })\r\n        }\r\n      })\r\n      // return\r\n      // 判断是否操作了该条数据，若没有操作则代表要执行新增操作\r\n      if (!flag) {\r\n        let record = Object.assign({}, value)\r\n        vm.columns.forEach(column => {\r\n          if (\r\n            column.dataIndex !== 'dbFieldName' &&\r\n            column.dataIndex !== 'dbFieldTxt'\r\n          ) {\r\n            record[column.dataIndex] = column.defaultValue\r\n          }\r\n        })\r\n        vm.$refs.editableTable.push(record)\r\n      }\r\n    })\r\n  })\r\n\r\n}\r\n\r\n/**\r\n * 将数据分类并Set进dataSource\r\n * @author sunjianlei\r\n **/\r\nexport function setDataSource(vm, queryData) {\r\n  let dataSource = []\r\n  // 遍历查询出来的数据\r\n  queryData.forEach(value => {\r\n\r\n    let data = { id: value['id'] }\r\n    vm.columns.forEach(column => {\r\n      let key = column.key\r\n      if (key) {\r\n        data[key] = value[key]\r\n\r\n        // 由于多选下拉框返回的是一个数组，所以需要改成 [1,2,3] 数组的形式，否则组件不识别\r\n        // if (key === 'indexField') {\r\n        //   data[key] = value[key].split(',')\r\n        // }\r\n\r\n      }\r\n    })\r\n    dataSource.push(data)\r\n  })\r\n  vm.dataSource = dataSource\r\n}\r\n\r\n/** 获取主表的初始化数据 */\r\nexport function getMasterTableInitialData() {\r\n  return [\r\n    {\r\n      dbFieldName: 'id',\r\n      dbFieldTxt: '主键',\r\n      dbLength: 36,\r\n      dbPointLength: 0,\r\n      dbDefaultVal: '',\r\n      dbType: 'string',\r\n      dbIsKey: '1',\r\n      dbIsNull: '0',\r\n      // table2\r\n      isShowForm: '0',\r\n      isShowList: '0',\r\n      isReadOnly: '1',\r\n      fieldShowType: 'text',\r\n      fieldLength: '120',\r\n      queryMode: 'single',\r\n      orderNum: 1\r\n    },\r\n    {\r\n      dbFieldName: 'create_by',\r\n      dbFieldTxt: '创建人',\r\n      dbLength: 50,\r\n      dbPointLength: 0,\r\n      dbDefaultVal: '',\r\n      dbType: 'string',\r\n      dbIsKey: '0',\r\n      dbIsNull: '1',\r\n      // table2\r\n      isShowForm: '0',\r\n      isShowList: '0',\r\n      fieldShowType: 'text',\r\n      fieldLength: '120',\r\n      queryMode: 'single',\r\n      orderNum: 2\r\n    },\r\n    {\r\n      dbFieldName: 'create_time',\r\n      dbFieldTxt: '创建日期',\r\n      dbLength: 20,\r\n      dbPointLength: 0,\r\n      dbDefaultVal: '',\r\n      dbType: 'Date',\r\n      dbIsKey: '0',\r\n      dbIsNull: '1',\r\n      // table2\r\n      isShowForm: '0',\r\n      isShowList: '0',\r\n      fieldShowType: 'datetime',\r\n      fieldLength: '120',\r\n      queryMode: 'single',\r\n      orderNum: 3\r\n    },\r\n    {\r\n      dbFieldName: 'update_by',\r\n      dbFieldTxt: '更新人',\r\n      dbLength: 50,\r\n      dbPointLength: 0,\r\n      dbDefaultVal: '',\r\n      dbType: 'string',\r\n      dbIsKey: '0',\r\n      dbIsNull: '1',\r\n      // table2\r\n      isShowForm: '0',\r\n      isShowList: '0',\r\n      fieldShowType: 'text',\r\n      fieldLength: '120',\r\n      queryMode: 'single',\r\n      orderNum: 4\r\n    },\r\n    {\r\n      dbFieldName: 'update_time',\r\n      dbFieldTxt: '更新日期',\r\n      dbLength: 20,\r\n      dbPointLength: 0,\r\n      dbDefaultVal: '',\r\n      dbType: 'Date',\r\n      dbIsKey: '0',\r\n      dbIsNull: '1',\r\n      // table2\r\n      isShowForm: '0',\r\n      isShowList: '0',\r\n      fieldShowType: 'datetime',\r\n      fieldLength: '120',\r\n      queryMode: 'single',\r\n      orderNum: 5\r\n    },{\r\n      dbFieldName: 'sys_org_code',\r\n      dbFieldTxt: '所属部门',\r\n      dbLength: 64,\r\n      dbPointLength: 0,\r\n      dbDefaultVal: '',\r\n      dbType: 'string',\r\n      dbIsKey: '0',\r\n      dbIsNull: '1',\r\n      // table2\r\n      isShowForm: '0',\r\n      isShowList: '0',\r\n      fieldShowType: 'text',\r\n      fieldLength: '120',\r\n      queryMode: 'single',\r\n      orderNum: 6\r\n    }\r\n    // {\r\n    //   dbFieldName: 'sys_org_code',\r\n    //   dbFieldTxt: '所属部门',\r\n    //   dbLength: 50,\r\n    //   dbPointLength: 0,\r\n    //   dbDefaultVal: '',\r\n    //   dbType: 'string',\r\n    //   dbIsKey: false,\r\n    //   dbIsNull: true\r\n    // }, {\r\n    //   dbFieldName: 'sys_company_code',\r\n    //   dbFieldTxt: '所属公司',\r\n    //   dbLength: 50,\r\n    //   dbPointLength: 0,\r\n    //   dbDefaultVal: '',\r\n    //   dbType: 'string',\r\n    //   dbIsKey: false,\r\n    //   dbIsNull: true\r\n    // }, {\r\n    //   dbFieldName: 'bpm_status',\r\n    //   dbFieldTxt: '流程状态',\r\n    //   dbLength: 32,\r\n    //   dbPointLength: 0,\r\n    //   dbDefaultVal: '',\r\n    //   dbType: 'string',\r\n    //   dbIsKey: false,\r\n    //   dbIsNull: true\r\n    // }\r\n  ]\r\n}\r\n/** 获取树的初始化数据 */\r\nexport function getTreeNeedFields() {\r\n  return [{\r\n    dbFieldName: 'pid',\r\n    dbFieldTxt: '父级节点',\r\n    dbLength: 32,\r\n    dbPointLength: 0,\r\n    dbDefaultVal: '',\r\n    dbType: 'string',\r\n    dbIsKey: '0',\r\n    dbIsNull: '1',\r\n    // table2\r\n    isShowForm: '1',\r\n    isShowList: '0',\r\n    fieldShowType: 'text',\r\n    fieldLength: '120',\r\n    queryMode: 'single',\r\n    orderNum: 7\r\n  },{\r\n    dbFieldName: 'has_child',\r\n    dbFieldTxt: '是否有子节点',\r\n    dbLength: 3,\r\n    dbPointLength: 0,\r\n    dbDefaultVal: '',\r\n    dbType: 'string',\r\n    dbIsKey: '0',\r\n    dbIsNull: '1',\r\n    // table2\r\n    isShowForm: '0',\r\n    isShowList: '0',\r\n    fieldShowType: 'list',\r\n    fieldLength: '120',\r\n    queryMode: 'single',\r\n    orderNum: 8,\r\n    // table3\r\n    dictField:\"yn\"\r\n  }]\r\n}"]}]}