{"remainingRequest":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js!D:\\ideaworkspace\\jxc-front-end\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\ideaworkspace\\jxc-front-end\\src\\utils\\request.js","dependencies":[{"path":"D:\\ideaworkspace\\jxc-front-end\\src\\utils\\request.js","mtime":1648374777589},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1648365068269},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1648365119872}],"contextDependencies":[],"result":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Vue from 'vue';\nimport axios from 'axios';\nimport store from '@/store';\nimport { VueAxios } from './axios';\nimport { Modal, notification } from 'ant-design-vue';\nimport { ACCESS_TOKEN } from \"@/store/mutation-types\";\n/**\r\n * 【指定 axios的 baseURL】\r\n * 如果手工指定 baseURL: '/jeecg-boot'\r\n * 则映射后端域名，通过 vue.config.js\r\n * @type {*|string}\r\n */\n\nvar apiBaseUrl = window._CONFIG['domianURL'] || \"/jeecg-boot\";\nconsole.log(\"apiBaseUrl= \", apiBaseUrl); // 创建 axios 实例\n\nvar service = axios.create({\n  //baseURL: '/jeecg-boot',\n  baseURL: apiBaseUrl,\n  // api base_url\n  timeout: 9000 // 请求超时时间\n\n});\n\nvar err = function err(error) {\n  if (error.response) {\n    var data = error.response.data;\n    var token = Vue.ls.get(ACCESS_TOKEN);\n    console.log(\"------异常响应------\", token);\n    console.log(\"------异常响应------\", error.response.status);\n\n    switch (error.response.status) {\n      case 403:\n        notification.error({\n          message: '系统提示',\n          description: '拒绝访问',\n          duration: 4\n        });\n        break;\n\n      case 500:\n        //notification.error({ message: '系统提示', description:'Token失效，请重新登录!',duration: 4})\n        if (token && data.message == \"Token失效，请重新登录\") {\n          // update-begin- --- author:scott ------ date:20190225 ---- for:Token失效采用弹框模式，不直接跳转----\n          // store.dispatch('Logout').then(() => {\n          //     window.location.reload()\n          // })\n          Modal.error({\n            title: '登录已过期',\n            content: '很抱歉，登录已过期，请重新登录',\n            okText: '重新登录',\n            mask: false,\n            onOk: function onOk() {\n              store.dispatch('Logout').then(function () {\n                Vue.ls.remove(ACCESS_TOKEN);\n                window.location.reload();\n              });\n            }\n          }); // update-end- --- author:scott ------ date:20190225 ---- for:Token失效采用弹框模式，不直接跳转----\n        }\n\n        break;\n\n      case 404:\n        notification.error({\n          message: '系统提示',\n          description: '很抱歉，资源未找到!',\n          duration: 4\n        });\n        break;\n\n      case 504:\n        notification.error({\n          message: '系统提示',\n          description: '网络超时'\n        });\n        break;\n\n      case 401:\n        notification.error({\n          message: '系统提示',\n          description: '未授权，请重新登录',\n          duration: 4\n        });\n\n        if (token) {\n          store.dispatch('Logout').then(function () {\n            setTimeout(function () {\n              window.location.reload();\n            }, 1500);\n          });\n        }\n\n        break;\n\n      default:\n        notification.error({\n          message: '系统提示',\n          description: data.message,\n          duration: 4\n        });\n        break;\n    }\n  }\n\n  return Promise.reject(error);\n}; // request interceptor\n\n\nservice.interceptors.request.use(function (config) {\n  var token = Vue.ls.get(ACCESS_TOKEN);\n\n  if (token) {\n    config.headers['X-Access-Token'] = token; // 让每个请求携带自定义 token 请根据实际情况自行修改\n  }\n\n  if (config.method == 'get') {\n    if (config.url.indexOf(\"sys/dict/getDictItems\") < 0) {\n      config.params = _objectSpread({\n        _t: Date.parse(new Date()) / 1000\n      }, config.params);\n    }\n  }\n\n  return config;\n}, function (error) {\n  return Promise.reject(error);\n}); // response interceptor\n\nservice.interceptors.response.use(function (response) {\n  return response.data;\n}, err);\nvar installer = {\n  vm: {},\n  install: function install(Vue) {\n    var router = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    Vue.use(VueAxios, router, service);\n  }\n};\nexport { installer as VueAxios, service as axios };",{"version":3,"sources":["D:/ideaworkspace/jxc-front-end/src/utils/request.js"],"names":["Vue","axios","store","VueAxios","Modal","notification","ACCESS_TOKEN","apiBaseUrl","window","_CONFIG","console","log","service","create","baseURL","timeout","err","error","response","data","token","ls","get","status","message","description","duration","title","content","okText","mask","onOk","dispatch","then","remove","location","reload","setTimeout","Promise","reject","interceptors","request","use","config","headers","method","url","indexOf","params","_t","Date","parse","installer","vm","install","router"],"mappings":"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","sourcesContent":["import Vue from 'vue'\r\nimport axios from 'axios'\r\nimport store from '@/store'\r\nimport { VueAxios } from './axios'\r\nimport {Modal, notification} from 'ant-design-vue'\r\nimport { ACCESS_TOKEN } from \"@/store/mutation-types\"\r\n\r\n/**\r\n * 【指定 axios的 baseURL】\r\n * 如果手工指定 baseURL: '/jeecg-boot'\r\n * 则映射后端域名，通过 vue.config.js\r\n * @type {*|string}\r\n */\r\nlet apiBaseUrl = window._CONFIG['domianURL'] || \"/jeecg-boot\";\r\nconsole.log(\"apiBaseUrl= \",apiBaseUrl)\r\n// 创建 axios 实例\r\nconst service = axios.create({\r\n  //baseURL: '/jeecg-boot',\r\n  baseURL: apiBaseUrl, // api base_url\r\n  timeout: 9000 // 请求超时时间\r\n})\r\n\r\nconst err = (error) => {\r\n  if (error.response) {\r\n    let data = error.response.data\r\n    const token = Vue.ls.get(ACCESS_TOKEN)\r\n    console.log(\"------异常响应------\",token)\r\n    console.log(\"------异常响应------\",error.response.status)\r\n    switch (error.response.status) {\r\n      case 403:\r\n        notification.error({ message: '系统提示', description: '拒绝访问',duration: 4})\r\n        break\r\n      case 500:\r\n        //notification.error({ message: '系统提示', description:'Token失效，请重新登录!',duration: 4})\r\n        if(token && data.message==\"Token失效，请重新登录\"){\r\n          // update-begin- --- author:scott ------ date:20190225 ---- for:Token失效采用弹框模式，不直接跳转----\r\n          // store.dispatch('Logout').then(() => {\r\n          //     window.location.reload()\r\n          // })\r\n          Modal.error({\r\n            title: '登录已过期',\r\n            content: '很抱歉，登录已过期，请重新登录',\r\n            okText: '重新登录',\r\n            mask: false,\r\n            onOk: () => {\r\n              store.dispatch('Logout').then(() => {\r\n                Vue.ls.remove(ACCESS_TOKEN)\r\n                window.location.reload()\r\n              })\r\n            }\r\n          })\r\n          // update-end- --- author:scott ------ date:20190225 ---- for:Token失效采用弹框模式，不直接跳转----\r\n        }\r\n        break\r\n      case 404:\r\n          notification.error({ message: '系统提示', description:'很抱歉，资源未找到!',duration: 4})\r\n        break\r\n      case 504:\r\n        notification.error({ message: '系统提示', description: '网络超时'})\r\n        break\r\n      case 401:\r\n        notification.error({ message: '系统提示', description:'未授权，请重新登录',duration: 4})\r\n        if (token) {\r\n          store.dispatch('Logout').then(() => {\r\n            setTimeout(() => {\r\n              window.location.reload()\r\n            }, 1500)\r\n          })\r\n        }\r\n        break\r\n      default:\r\n        notification.error({\r\n          message: '系统提示',\r\n          description: data.message,\r\n          duration: 4\r\n        })\r\n        break\r\n    }\r\n  }\r\n  return Promise.reject(error)\r\n};\r\n\r\n// request interceptor\r\nservice.interceptors.request.use(config => {\r\n  const token = Vue.ls.get(ACCESS_TOKEN)\r\n  if (token) {\r\n    config.headers[ 'X-Access-Token' ] = token // 让每个请求携带自定义 token 请根据实际情况自行修改\r\n  }\r\n  if(config.method=='get'){\r\n    if(config.url.indexOf(\"sys/dict/getDictItems\")<0){\r\n      config.params = {\r\n        _t: Date.parse(new Date())/1000,\r\n        ...config.params\r\n      }\r\n    }\r\n  }\r\n  return config\r\n},(error) => {\r\n  return Promise.reject(error)\r\n})\r\n\r\n// response interceptor\r\nservice.interceptors.response.use((response) => {\r\n    return response.data\r\n  }, err)\r\n\r\nconst installer = {\r\n  vm: {},\r\n  install (Vue, router = {}) {\r\n    Vue.use(VueAxios, router, service)\r\n  }\r\n}\r\n\r\nexport {\r\n  installer as VueAxios,\r\n  service as axios\r\n}"]}]}