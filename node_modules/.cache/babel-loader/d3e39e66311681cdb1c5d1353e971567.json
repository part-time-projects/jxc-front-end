{"remainingRequest":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js!D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ideaworkspace\\jxc-front-end\\src\\views\\erp\\finance\\modules\\RpCheck\\RpCheckEntryList.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ideaworkspace\\jxc-front-end\\src\\views\\erp\\finance\\modules\\RpCheck\\RpCheckEntryList.vue","mtime":1648374777629},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1648365068269},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":1648364957239}],"contextDependencies":[],"result":["function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { JeecgListMixin } from '@/mixins/JeecgListMixin';\nexport default {\n  name: \"RpCheckEntryList\",\n  mixins: [JeecgListMixin],\n  components: {},\n  props: {\n    // 核销类型:\n    checkType: {\n      type: String,\n      default: \"\"\n    },\n    // 核销方向: 1-应收应付， 2-收款付款\n    checkSide: {\n      type: String,\n      default: \"\"\n    },\n    readOnly: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data: function data() {\n    return {\n      disableMixinCreated: true,\n      // 表头\n      columns: [{\n        title: '分录号',\n        width: 90,\n        align: \"center\",\n        dataIndex: 'entryNo',\n        type: \"Number\",\n        sorter: function sorter(a, b) {\n          return a.entryNo - b.entryNo;\n        },\n        defaultSortOrder: 'ascend'\n      }, {\n        title: '单据号',\n        width: 180,\n        align: \"center\",\n        dataIndex: 'sourceNo'\n      }, {\n        title: '未核销金额',\n        width: 120,\n        align: \"center\",\n        dataIndex: 'uncheckedAmt'\n      }, {\n        title: '核销金额',\n        width: 120,\n        align: \"center\",\n        dataIndex: 'amt',\n        type: \"Number\",\n        scopedSlots: {\n          customRender: 'amt'\n        }\n      }, {\n        title: '备注',\n        align: \"center\",\n        dataIndex: 'remark',\n        scopedSlots: {\n          customRender: 'remark'\n        }\n      }],\n      dictOptions: {\n        billType: []\n      },\n      totalAmt: 0\n    };\n  },\n  computed: {\n    title: function title() {\n      if (this.checkType === \"201\") return this.checkSide === \"1\" ? \"应付\" : this.checkSide === \"2\" ? \"付款\" : \"\";\n    }\n  },\n  watch: {\n    dataSource: function dataSource() {\n      this.calcTotalAmt();\n      this.$emit(\"dataSourceChange\");\n    },\n    totalAmt: function totalAmt() {\n      this.$emit(\"totalAmtChange\", this.totalAmt);\n    }\n  },\n  methods: {\n    resetTable: function resetTable() {\n      this.dataSource = [];\n      this.selectedRowKeys = [];\n      this.selectionRows = [];\n    },\n    onMySelectChange: function onMySelectChange(selectedRowKeys, selectionRows) {\n      this.onSelectChange(selectedRowKeys, selectionRows);\n      this.$emit(\"selectChange\");\n    },\n    calcTotalAmt: function calcTotalAmt() {\n      var total = 0;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.dataSource[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var record = _step.value;\n          var amt = Number(record.amt);\n\n          if (!isNaN(amt)) {\n            total += amt;\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      this.totalAmt = total;\n    },\n    handleCellChange: function handleCellChange(value, record, column) {\n      record[column.dataIndex] = value; //触发dataSourceChange和刷新table\n\n      this.dataSource = _toConsumableArray(this.dataSource);\n    }\n  }\n};",{"version":3,"sources":["RpCheckEntryList.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <a-card :bordered=\"false\" :body-style=\"{ padding: 0}\">\r\n    <!--rowKey：使用应收应付单billNo（每个应收应付单在一个核销单只能一次，但两个核销单可能有相同的应收应付单sourceNo），\r\n               不能使用id（因为新增记录无id） -->\r\n    <a-table\r\n      ref=\"table\"\r\n      size=\"small\"\r\n      rowKey=\"sourceNo\"\r\n      :scroll=\"{ x:800}\"\r\n      :columns=\"columns\"\r\n      :dataSource=\"dataSource\"\r\n      :pagination=false\r\n      :loading=\"loading\"\r\n      :rowSelection=\"{\r\n        selectedRowKeys: selectedRowKeys,\r\n        columnWidth: 40,\r\n        onChange: onMySelectChange\r\n      }\"\r\n      @change=\"handleTableChange\">\r\n\r\n      <template slot=\"title\" slot-scope=\"currentPageData\">\r\n        <h3>核销明细-{{title}}</h3>\r\n      </template>\r\n\r\n      <template v-for=\"(col, index) in columns\"\r\n                v-if=\"col.scopedSlots\"\r\n                :slot=\"col.dataIndex\"\r\n                slot-scope=\"text, record, index\">\r\n        <div :key=\"index\">\r\n          <a-input-number\r\n            v-if=\"!readOnly && col.dataIndex==='amt'\"\r\n            style=\"margin: -5px 0\"\r\n            :value=\"text\"\r\n            :max=\"record.uncheckedAmt\"\r\n            @change=\"value => handleCellChange(value, record, col)\"\r\n          />\r\n          <a-input-number\r\n            v-else-if=\"!readOnly && col.type==='Number'\"\r\n            style=\"margin: -5px 0\"\r\n            :value=\"text\"\r\n            @change=\"value => handleCellChange(value, record, col)\"\r\n          />\r\n          <a-input\r\n            v-else-if=\"!readOnly\"\r\n            style=\"margin: -5px 0\"\r\n            :value=\"text\"\r\n            @change=\"e => handleCellChange(e.target.value, record, col)\"\r\n          />\r\n          <template v-else>{{ text }}</template>\r\n        </div>\r\n      </template>\r\n    </a-table>\r\n\r\n    <div style=\"margin:8px\">核销金额合计：{{totalAmt}}</div>\r\n   </a-card>\r\n</template>\r\n\r\n<script>\r\n  import { JeecgListMixin } from '@/mixins/JeecgListMixin'\r\n\r\n  export default {\r\n    name: \"RpCheckEntryList\",\r\n    mixins:[JeecgListMixin],\r\n    components: {  },\r\n    props: {\r\n      // 核销类型:\r\n      checkType: {\r\n        type: String,\r\n        default: \"\"\r\n      },\r\n      // 核销方向: 1-应收应付， 2-收款付款\r\n      checkSide: {\r\n        type: String,\r\n        default: \"\"\r\n      },\r\n      readOnly: {\r\n        type: Boolean,\r\n        default: true\r\n      }\r\n    },\r\n    data () {\r\n      return {\r\n        disableMixinCreated:true,\r\n        // 表头\r\n        columns: [\r\n          {\r\n            title:'分录号',\r\n            width:90,\r\n            align:\"center\",\r\n            dataIndex: 'entryNo',\r\n            type: \"Number\",\r\n            sorter: (a, b) => a.entryNo - b.entryNo,\r\n            defaultSortOrder:'ascend'\r\n          },\r\n          {\r\n            title:'单据号',\r\n            width:180,\r\n            align:\"center\",\r\n            dataIndex: 'sourceNo'\r\n          },\r\n          {\r\n            title:'未核销金额',\r\n            width:120,\r\n            align:\"center\",\r\n            dataIndex: 'uncheckedAmt',\r\n          },\r\n          {\r\n            title:'核销金额',\r\n            width:120,\r\n            align:\"center\",\r\n            dataIndex: 'amt',\r\n            type: \"Number\",\r\n            scopedSlots: { customRender: 'amt' },\r\n          },\r\n          {\r\n            title:'备注',\r\n            align:\"center\",\r\n            dataIndex: 'remark',\r\n            scopedSlots: { customRender: 'remark' },\r\n          },\r\n        ],\r\n        dictOptions:{\r\n         billType:[],\r\n        },\r\n        totalAmt: 0,\r\n      }\r\n    },\r\n    computed: {\r\n      title: function() {\r\n        if (this.checkType === \"201\")\r\n          return this.checkSide===\"1\" ? \"应付\" : (this.checkSide===\"2\" ? \"付款\":\"\");\r\n      }\r\n    },\r\n\r\n    watch:{\r\n      dataSource: function () {\r\n        this.calcTotalAmt();\r\n        this.$emit(\"dataSourceChange\");\r\n      },\r\n      totalAmt: function () {\r\n        this.$emit(\"totalAmtChange\", this.totalAmt);\r\n      },\r\n\r\n    },\r\n\r\n    methods: {\r\n      resetTable() {\r\n        this.dataSource = [];\r\n        this.selectedRowKeys = [];\r\n        this.selectionRows = [];\r\n      },\r\n\r\n      onMySelectChange(selectedRowKeys, selectionRows) {\r\n        this.onSelectChange(selectedRowKeys, selectionRows);\r\n        this.$emit(\"selectChange\");\r\n      },\r\n\r\n      calcTotalAmt() {\r\n        let total = 0;\r\n        for (let record of this.dataSource) {\r\n          let amt = Number(record.amt)\r\n          if (!isNaN(amt)) {\r\n            total += amt;\r\n          }\r\n        }\r\n        this.totalAmt = total;\r\n      },\r\n\r\n      handleCellChange(value, record, column) {\r\n        record[column.dataIndex] = value;\r\n        //触发dataSourceChange和刷新table\r\n        this.dataSource = [...this.dataSource];\r\n      },\r\n    }\r\n  }\r\n</script>\r\n<style lang=\"less\" scoped>\r\n  @import '~@assets/less/common.less';\r\n</style>\r\n"],"sourceRoot":"src/views/erp/finance/modules/RpCheck"}]}