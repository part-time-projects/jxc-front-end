{"remainingRequest":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\thread-loader\\dist\\cjs.js!D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js!D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ideaworkspace\\jxc-front-end\\src\\views\\system\\modules\\DeptRoleUserModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ideaworkspace\\jxc-front-end\\src\\views\\system\\modules\\DeptRoleUserModal.vue","mtime":1648374778152},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1648365139913},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1648365068269},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":1648364957239}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { httpAction, getAction } from '@/api/manage';\nimport JEllipsis from '@/components/jeecg/JEllipsis';\nimport { initDictOptions } from '@/components/dict/JDictSelectUtil';\nexport default {\n  name: 'DeptRoleUserModal',\n  components: {\n    JEllipsis: JEllipsis\n  },\n  data: function data() {\n    return {\n      currentDeptId: \"\",\n      title: \"部门角色分配\",\n      visible: false,\n      model: {},\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 5\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      },\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      validatorRules: {},\n      url: {\n        add: \"/sys/sysDepartRole/deptRoleUserAdd\",\n        getDeptRoleList: \"/sys/sysDepartRole/getDeptRoleList\",\n        getDeptRoleByUserId: \"/sys/sysDepartRole/getDeptRoleByUserId\"\n      },\n      designNameOption: [],\n      userId: \"\",\n      newRoleId: \"\",\n      oldRoleId: \"\",\n      designNameValue: [],\n      desformList: []\n    };\n  },\n  created: function created() {},\n  methods: {\n    add: function add(record, departId) {\n      this.userId = record.id;\n      this.currentDeptId = departId;\n      this.loadDesformList();\n      this.edit({});\n    },\n    edit: function edit(record) {\n      var _this = this;\n\n      this.form.resetFields();\n      this.model = Object.assign({}, record);\n      this.visible = true;\n      getAction(this.url.getDeptRoleByUserId, {\n        userId: this.userId\n      }).then(function (res) {\n        if (res.success) {\n          var designName = [];\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = res.result[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var value = _step.value;\n              designName.push(value.droleId);\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n\n          _this.oldRoleId = designName.join(\",\");\n          _this.designNameValue = designName;\n          _this.newRoleId = designName.join(\",\");\n        }\n      });\n    },\n    close: function close() {\n      this.$emit('close');\n      this.visible = false;\n    },\n    handleSubmit: function handleSubmit() {\n      var that = this; // 触发表单验证\n\n      that.confirmLoading = true;\n      var httpurl = this.url.add;\n      var method = 'post';\n      var formData = Object.assign(this.model, {}); //时间格式化\n\n      formData.userId = this.userId;\n      formData.newRoleId = this.newRoleId;\n      formData.oldRoleId = this.oldRoleId;\n      httpAction(httpurl, formData, method).then(function (res) {\n        if (res.success) {\n          that.$message.success(res.message);\n          that.$emit('reload');\n          that.$emit('ok');\n        } else {\n          that.$message.warning(res.message);\n        }\n      }).finally(function () {\n        that.confirmLoading = false;\n        that.close();\n      });\n    },\n    handleCancel: function handleCancel() {\n      this.designNameOption = [];\n      this.designNameValue = [];\n      this.close();\n    },\n    designNameChange: function designNameChange(selectedValue) {\n      this.newRoleId = selectedValue.join(\",\");\n    },\n    checkALL: function checkALL() {\n      var designName = [];\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = this.desformList[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var value = _step2.value;\n          designName.push(value.id);\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      this.designNameValue = designName;\n      this.newRoleId = designName.join(\",\");\n    },\n    cancelCheckALL: function cancelCheckALL() {\n      this.designNameValue = [];\n      this.newRoleId = \"\";\n    },\n\n    /** 加载desform */\n    loadDesformList: function loadDesformList() {\n      var _this2 = this;\n\n      getAction(this.url.getDeptRoleList, {\n        departId: this.currentDeptId,\n        userId: this.userId\n      }).then(function (res) {\n        if (res.success) {\n          _this2.desformList = res.result;\n          var designName = [];\n          var _iteratorNormalCompletion3 = true;\n          var _didIteratorError3 = false;\n          var _iteratorError3 = undefined;\n\n          try {\n            for (var _iterator3 = _this2.desformList[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n              var value = _step3.value;\n              designName.push({\n                value: value.id,\n                text: value.roleName\n              });\n            }\n          } catch (err) {\n            _didIteratorError3 = true;\n            _iteratorError3 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n                _iterator3.return();\n              }\n            } finally {\n              if (_didIteratorError3) {\n                throw _iteratorError3;\n              }\n            }\n          }\n\n          _this2.designNameOption = designName;\n        }\n      });\n    }\n  }\n};",null]}