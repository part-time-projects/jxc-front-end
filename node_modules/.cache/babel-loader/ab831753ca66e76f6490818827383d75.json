{"remainingRequest":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\thread-loader\\dist\\cjs.js!D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js!D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ideaworkspace\\jxc-front-end\\src\\views\\erp\\stock\\modules\\StkInventoryModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ideaworkspace\\jxc-front-end\\src\\views\\erp\\stock\\modules\\StkInventoryModal.vue","mtime":1648374777648},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1648365139913},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1648365068269},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":1648364957239}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getAction, httpAction } from '@/api/manage';\nimport pick from 'lodash.pick';\nimport { validateDuplicateValue } from '@/utils/util';\nimport JDate from '@/components/jeecg/JDate';\nimport JDictSelectTag from \"@/components/dict/JDictSelectTag\";\nexport default {\n  name: \"StkInventoryModal\",\n  components: {\n    JDate: JDate,\n    JDictSelectTag: JDictSelectTag\n  },\n  data: function data() {\n    return {\n      action: \"\",\n      isSingleSupplier: false,\n      form: this.$form.createForm(this),\n      title: \"操作\",\n      width: 600,\n      visible: false,\n      model: {},\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 6\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 17\n        }\n      },\n      confirmLoading: false,\n      validatorRules: {\n        batchNo: {\n          rules: [{\n            required: true,\n            message: '请输入批号!'\n          }]\n        },\n        materialId: {\n          rules: [{\n            required: true,\n            message: '请选择物料!'\n          }]\n        },\n        warehouseId: {\n          rules: [{\n            required: true,\n            message: '请选择仓库!'\n          }]\n        },\n        unitId: {\n          rules: [{\n            required: true,\n            message: '请选择计量单位!'\n          }]\n        },\n        qty: {\n          rules: [{\n            required: true,\n            message: '请输入数量!'\n          }]\n        },\n        cost: {\n          rules: [{\n            required: true,\n            message: '请输入成本!'\n          }]\n        },\n        isSingleSupplier: {\n          rules: [{\n            required: true,\n            message: '请选择是否单供应商!'\n          }]\n        },\n        supplierId: {\n          rules: []\n        },\n        isClosed: {\n          rules: [{\n            required: true,\n            message: '请输入是否关闭!'\n          }]\n        },\n        sysOrgCode: {\n          rules: []\n        },\n        createBy: {\n          rules: []\n        },\n        createTime: {\n          rules: []\n        },\n        updateBy: {\n          rules: []\n        },\n        updateTime: {\n          rules: []\n        }\n      },\n      url: {\n        add: \"/stock/stkInventory/add\",\n        edit: \"/stock/stkInventory/edit\",\n        getMaterial: \"/bas/basMaterial/queryById\"\n      }\n    };\n  },\n  computed: {\n    readOnly: function readOnly() {\n      return this.action !== \"add\" && this.action !== \"edit\";\n    }\n  },\n  methods: {\n    add: function add() {\n      this.edit({\n        qty: 0,\n        cost: 0,\n        isClosed: 0\n      });\n    },\n    edit: function edit(record) {\n      var _this = this;\n\n      this.form.resetFields();\n      this.model = Object.assign({}, record);\n      this.visible = true;\n      this.$nextTick(function () {\n        _this.form.setFieldsValue(pick(_this.model, 'batchNo', 'materialId', 'warehouseId', 'unitId', 'qty', 'cost', 'isSingleSupplier', 'supplierId', 'isClosed', 'sysOrgCode', 'createBy', 'createTime', 'updateBy', 'updateTime'));\n      });\n    },\n    close: function close() {\n      this.$emit('close');\n      this.visible = false;\n    },\n    handleOk: function handleOk() {\n      var _this2 = this;\n\n      var that = this;\n\n      if (this.form.getFieldValue(\"isSingleSupplier\") === \"1\" && (this.form.getFieldValue(\"supplierId\") === undefined || this.form.getFieldValue(\"supplierId\") === null || this.form.getFieldValue(\"supplierId\") === \"\")) {\n        this.$message.warning(\"需指定供应商！\");\n        return;\n      } // 触发表单验证\n\n\n      this.form.validateFields(function (err, values) {\n        if (!err) {\n          that.confirmLoading = true;\n          var httpurl = '';\n          var method = '';\n\n          if (!_this2.model.id) {\n            httpurl += _this2.url.add;\n            method = 'post';\n          } else {\n            httpurl += _this2.url.edit;\n            method = 'put';\n          }\n\n          var formData = Object.assign(_this2.model, values);\n          console.log(\"表单提交数据\", formData);\n          httpAction(httpurl, formData, method).then(function (res) {\n            if (res.success) {\n              that.$message.success(res.message);\n              that.$emit('ok');\n            } else {\n              that.$message.warning(res.message);\n            }\n          }).finally(function () {\n            that.confirmLoading = false;\n            that.close();\n          });\n        }\n      });\n    },\n    handleCancel: function handleCancel() {\n      this.close();\n    },\n    popupCallback: function popupCallback(row) {\n      this.form.setFieldsValue(pick(row, 'batchNo', 'materialId', 'warehouseId', 'unitId', 'qty', 'cost', 'isSingleSupplier', 'supplierId', 'isClosed', 'sysOrgCode', 'createBy', 'createTime', 'updateBy', 'updateTime'));\n    },\n    onMaterialIdChange: function onMaterialIdChange(v) {\n      var that = this;\n\n      if (v === undefined || v === null || v === \"\") {\n        that.form.setFieldsValue({\n          \"unitId\": \"\"\n        });\n      } else {\n        getAction(this.url.getMaterial, {\n          id: v\n        }).then(function (res) {\n          if (res.success) {\n            that.$nextTick(function () {\n              var record = res.result;\n              that.form.setFieldsValue({\n                'unitId': record.unitId\n              });\n            });\n          }\n        });\n      }\n    }\n  }\n};",null]}