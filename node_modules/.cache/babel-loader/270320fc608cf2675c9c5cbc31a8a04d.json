{"remainingRequest":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js!D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ideaworkspace\\jxc-front-end\\src\\views\\modules\\online\\cgreport\\auto\\OnlCgreportAutoList.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ideaworkspace\\jxc-front-end\\src\\views\\modules\\online\\cgreport\\auto\\OnlCgreportAutoList.vue","mtime":1648374778129},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1648365068269},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":1648364957239}],"contextDependencies":[],"result":["function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { HrefJump } from '@/mixins/OnlAutoListMixin';\nimport { getAction, downFile } from '@/api/manage';\nimport { filterMultiDictText } from '@/components/dict/JDictSelectUtil';\nimport { filterObj } from '@/utils/util';\nexport default {\n  name: 'OnlCgreportAutoList',\n  mixins: [HrefJump],\n  components: {},\n  data: function data() {\n    return {\n      // 查询参数\n      queryInfo: [],\n      // 查询参数，多个页面的查询参数用 code 作为键来区分\n      queryParamsMap: {},\n      selfParam: {},\n      sorter: {\n        column: '',\n        order: 'desc'\n      },\n      dictOptions: {},\n      toggleSearchStatus: false,\n      // 高级搜索 展开/关闭\n      reportCode: '',\n      description: '在线报表功能测试页面',\n      url: {\n        getColumnsAndData: '/online/cgreport/api/getColumnsAndData/',\n        getQueryInfo: '/online/cgreport/api/getQueryInfo/',\n        getParamsInfo: '/online/cgreport/api/getParamsInfo/'\n      },\n      table: {\n        loading: true,\n        // 表头\n        columns: [],\n        //数据集\n        dataSource: [],\n        // 选择器\n        selectedRowKeys: [],\n        selectionRows: [],\n        scroll: {\n          x: false\n        },\n        // 分页参数\n        pagination: {\n          current: 1,\n          pageSize: 10,\n          pageSizeOptions: ['10', '20', '30'],\n          showTotal: function showTotal(total, range) {\n            return range[0] + '-' + range[1] + ' 共' + total + '条';\n          },\n          showQuickJumper: true,\n          showSizeChanger: true,\n          total: 0\n        }\n      },\n      cgreportHeadName: \"\"\n    };\n  },\n  mounted: function mounted() {\n    this.initParamsInfo();\n    this.initQueryInfo();\n  },\n  watch: {\n    '$route': function $route() {\n      // 刷新参数放到这里去触发，就可以刷新相同界面了\n      this.initParamsInfo();\n      this.initQueryInfo();\n    }\n  },\n  computed: {\n    queryParam: {\n      get: function get() {\n        return this.queryParamsMap[this.reportCode];\n      },\n      set: function set(newVal) {\n        this.$set(this.queryParamsMap, this.reportCode, newVal);\n      }\n    }\n  },\n  methods: {\n    initParamsInfo: function initParamsInfo() {\n      var _this = this;\n\n      if (!this.$route.params.code) {\n        return false;\n      } //获取报表ID\n\n\n      this.reportCode = this.$route.params.code;\n\n      if (!this.queryParam) {\n        this.queryParam = {};\n      }\n\n      this.selfParam = {};\n      getAction(\"\".concat(this.url.getParamsInfo).concat(this.reportCode)).then(function (res) {\n        if (res.success) {\n          if (res.result && res.result.length > 0) {\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n              for (var _iterator = res.result[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                var i = _step.value;\n                _this.selfParam['self_' + i.paramName] = !_this.$route.query[i.paramName] ? \"\" : _this.$route.query[i.paramName];\n              }\n            } catch (err) {\n              _didIteratorError = true;\n              _iteratorError = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                  _iterator.return();\n                }\n              } finally {\n                if (_didIteratorError) {\n                  throw _iteratorError;\n                }\n              }\n            }\n          }\n        } else {\n          _this.$message.warning(res.message);\n        }\n\n        _this.loadData();\n      });\n    },\n    initQueryInfo: function initQueryInfo() {\n      var _this2 = this;\n\n      if (!this.reportCode) {\n        return false;\n      }\n\n      getAction(\"\".concat(this.url.getQueryInfo).concat(this.reportCode)).then(function (res) {\n        console.log(\"获取查询条件\", res);\n\n        if (res.success) {\n          _this2.queryInfo = res.result;\n        } else {\n          _this2.$message.warning(res.message);\n        }\n      });\n    },\n    loadData: function loadData(arg) {\n      var _this3 = this;\n\n      if (!this.reportCode) {\n        return false;\n      }\n\n      if (arg == 1) {\n        this.table.pagination.current = 1;\n      }\n\n      var params = this.getQueryParams(); //查询条件\n\n      console.log(params); //获取报表ID\n\n      console.log(' 动态报表 reportCode ： ' + this.reportCode);\n      this.table.loading = true;\n      getAction(\"\".concat(this.url.getColumnsAndData).concat(this.reportCode), params).then(function (res) {\n        if (res.success) {\n          var _res$result = res.result,\n              data = _res$result.data,\n              columns = _res$result.columns,\n              cgreportHeadName = _res$result.cgreportHeadName,\n              dictOptions = _res$result.dictOptions,\n              fieldHrefSlots = _res$result.fieldHrefSlots;\n          var columnWidth = 230;\n          _this3.dictOptions = dictOptions;\n\n          for (var a = 0; a < columns.length; a++) {\n            if (columns[a].customRender) {\n              (function () {\n                var field_name = columns[a].customRender;\n\n                columns[a].customRender = function (t) {\n                  return t ? filterMultiDictText(_this3.dictOptions[field_name], t + '') : t;\n                };\n              })();\n            }\n\n            columns.width = columnWidth;\n          }\n\n          _this3.table.scroll.x = columns.length * columnWidth;\n          _this3.table.columns = _toConsumableArray(columns);\n          _this3.cgreportHeadName = cgreportHeadName;\n          _this3.fieldHrefSlots = fieldHrefSlots;\n\n          if (data) {\n            _this3.table.pagination.total = Number(data.total);\n            _this3.table.dataSource = data.records;\n          } else {\n            _this3.table.pagination.total = 0;\n            _this3.table.dataSource = [];\n          }\n        } else {\n          _this3.$message.warn('查询失败：' + res.message);\n        }\n      }).catch(function (e) {\n        console.error(e);\n\n        _this3.$message.error('查询失败');\n      }).finally(function () {\n        _this3.table.loading = false;\n      });\n    },\n    getQueryParams: function getQueryParams() {\n      var param = Object.assign({}, this.queryParam, this.sorter, this.selfParam);\n      param.pageNo = this.table.pagination.current;\n      param.pageSize = this.table.pagination.pageSize;\n      return filterObj(param);\n    },\n    searchByQuery: function searchByQuery() {\n      this.loadData(1);\n    },\n    searchReset: function searchReset() {\n      this.queryParam = {};\n      this.loadData(1);\n    },\n    handleToggleSearch: function handleToggleSearch() {\n      this.toggleSearchStatus = !this.toggleSearchStatus;\n    },\n    exportExcel: function exportExcel() {\n      var _this4 = this;\n\n      var fileName = this.cgreportHeadName;\n      var selfParam = {};\n\n      for (var queryName in this.$route.query) {\n        if (this.$route.query.hasOwnProperty(queryName)) {\n          var value = this.$route.query[queryName];\n          selfParam['self_' + queryName] = value || '';\n        }\n      }\n\n      downFile(\"/online/cgreport/api/exportXls/\".concat(this.reportCode), Object.assign(selfParam, this.queryParam)).then(function (data) {\n        if (!data) {\n          _this4.$message.warning(\"文件下载失败\");\n\n          return;\n        }\n\n        if (typeof window.navigator.msSaveBlob !== 'undefined') {\n          window.navigator.msSaveBlob(new Blob([data]), fileName + '.xls');\n        } else {\n          var url = window.URL.createObjectURL(new Blob([data]));\n          var link = document.createElement('a');\n          link.style.display = 'none';\n          link.href = url;\n          link.setAttribute('download', fileName + '.xls');\n          document.body.appendChild(link);\n          link.click();\n          document.body.removeChild(link); //下载完成移除元素\n\n          window.URL.revokeObjectURL(url); //释放掉blob对象\n        }\n      });\n    },\n    handleChangeInTableSelect: function handleChangeInTableSelect(selectedRowKeys, selectionRows) {\n      this.table.selectedRowKeys = selectedRowKeys;\n      this.table.selectionRows = selectionRows;\n    },\n    handleChangeInTable: function handleChangeInTable(pagination, filters, sorter) {\n      //分页、排序、筛选变化时触发\n      if (Object.keys(sorter).length > 0) {\n        this.sorter.column = sorter.field;\n        this.sorter.order = 'ascend' == sorter.order ? 'asc' : 'desc';\n      } else {\n        this.sorter.column = null;\n        this.sorter.order = null;\n      }\n\n      this.table.pagination = pagination;\n      this.loadData();\n    }\n  }\n};",{"version":3,"sources":["OnlCgreportAutoList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgFA,SAAA,QAAA,QAAA,2BAAA;AACA,SAAA,SAAA,EAAA,QAAA,QAAA,cAAA;AACA,SAAA,mBAAA,QAAA,mCAAA;AACA,SAAA,SAAA,QAAA,cAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,qBADA;AAEA,EAAA,MAAA,EAAA,CAAA,QAAA,CAFA;AAGA,EAAA,UAAA,EAAA,EAHA;AAKA,EAAA,IALA,kBAKA;AACA,WAAA;AACA;AACA,MAAA,SAAA,EAAA,EAFA;AAGA;AACA,MAAA,cAAA,EAAA,EAJA;AAKA,MAAA,SAAA,EAAA,EALA;AAOA,MAAA,MAAA,EAAA;AACA,QAAA,MAAA,EAAA,EADA;AAEA,QAAA,KAAA,EAAA;AAFA,OAPA;AAWA,MAAA,WAAA,EAAA,EAXA;AAYA,MAAA,kBAAA,EAAA,KAZA;AAYA;AACA,MAAA,UAAA,EAAA,EAbA;AAcA,MAAA,WAAA,EAAA,YAdA;AAeA,MAAA,GAAA,EAAA;AACA,QAAA,iBAAA,EAAA,yCADA;AAEA,QAAA,YAAA,EAAA,oCAFA;AAGA,QAAA,aAAA,EAAA;AAHA,OAfA;AAoBA,MAAA,KAAA,EAAA;AACA,QAAA,OAAA,EAAA,IADA;AAEA;AACA,QAAA,OAAA,EAAA,EAHA;AAIA;AACA,QAAA,UAAA,EAAA,EALA;AAMA;AACA,QAAA,eAAA,EAAA,EAPA;AAQA,QAAA,aAAA,EAAA,EARA;AASA,QAAA,MAAA,EAAA;AAAA,UAAA,CAAA,EAAA;AAAA,SATA;AAUA;AACA,QAAA,UAAA,EAAA;AACA,UAAA,OAAA,EAAA,CADA;AAEA,UAAA,QAAA,EAAA,EAFA;AAGA,UAAA,eAAA,EAAA,CAAA,IAAA,EAAA,IAAA,EAAA,IAAA,CAHA;AAIA,UAAA,SAAA,EAAA,mBAAA,KAAA,EAAA,KAAA,EAAA;AACA,mBAAA,KAAA,CAAA,CAAA,CAAA,GAAA,GAAA,GAAA,KAAA,CAAA,CAAA,CAAA,GAAA,IAAA,GAAA,KAAA,GAAA,GAAA;AACA,WANA;AAOA,UAAA,eAAA,EAAA,IAPA;AAQA,UAAA,eAAA,EAAA,IARA;AASA,UAAA,KAAA,EAAA;AATA;AAXA,OApBA;AA2CA,MAAA,gBAAA,EAAA;AA3CA,KAAA;AA6CA,GAnDA;AAoDA,EAAA,OApDA,qBAoDA;AACA,SAAA,cAAA;AACA,SAAA,aAAA;AACA,GAvDA;AAwDA,EAAA,KAAA,EAAA;AACA,YADA,oBACA;AACA;AACA,WAAA,cAAA;AACA,WAAA,aAAA;AACA;AALA,GAxDA;AA+DA,EAAA,QAAA,EAAA;AACA,IAAA,UAAA,EAAA;AACA,MAAA,GADA,iBACA;AACA,eAAA,KAAA,cAAA,CAAA,KAAA,UAAA,CAAA;AACA,OAHA;AAIA,MAAA,GAJA,eAIA,MAJA,EAIA;AACA,aAAA,IAAA,CAAA,KAAA,cAAA,EAAA,KAAA,UAAA,EAAA,MAAA;AACA;AANA;AADA,GA/DA;AAyEA,EAAA,OAAA,EAAA;AACA,IAAA,cADA,4BACA;AAAA;;AACA,UAAA,CAAA,KAAA,MAAA,CAAA,MAAA,CAAA,IAAA,EAAA;AACA,eAAA,KAAA;AACA,OAHA,CAIA;;;AACA,WAAA,UAAA,GAAA,KAAA,MAAA,CAAA,MAAA,CAAA,IAAA;;AACA,UAAA,CAAA,KAAA,UAAA,EAAA;AACA,aAAA,UAAA,GAAA,EAAA;AACA;;AAEA,WAAA,SAAA,GAAA,EAAA;AACA,MAAA,SAAA,WAAA,KAAA,GAAA,CAAA,aAAA,SAAA,KAAA,UAAA,EAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,YAAA,GAAA,CAAA,OAAA,EAAA;AACA,cAAA,GAAA,CAAA,MAAA,IAAA,GAAA,CAAA,MAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AAAA;AAAA;AAAA;;AAAA;AACA,mCAAA,GAAA,CAAA,MAAA,8HAAA;AAAA,oBAAA,CAAA;AACA,gBAAA,KAAA,CAAA,SAAA,CAAA,UAAA,CAAA,CAAA,SAAA,IAAA,CAAA,KAAA,CAAA,MAAA,CAAA,KAAA,CAAA,CAAA,CAAA,SAAA,CAAA,GAAA,EAAA,GAAA,KAAA,CAAA,MAAA,CAAA,KAAA,CAAA,CAAA,CAAA,SAAA,CAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA,SANA,MAMA;AACA,UAAA,KAAA,CAAA,QAAA,CAAA,OAAA,CAAA,GAAA,CAAA,OAAA;AACA;;AACA,QAAA,KAAA,CAAA,QAAA;AACA,OAXA;AAYA,KAxBA;AA0BA,IAAA,aA1BA,2BA0BA;AAAA;;AACA,UAAA,CAAA,KAAA,UAAA,EAAA;AACA,eAAA,KAAA;AACA;;AACA,MAAA,SAAA,WAAA,KAAA,GAAA,CAAA,YAAA,SAAA,KAAA,UAAA,EAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,QAAA,EAAA,GAAA;;AACA,YAAA,GAAA,CAAA,OAAA,EAAA;AACA,UAAA,MAAA,CAAA,SAAA,GAAA,GAAA,CAAA,MAAA;AACA,SAFA,MAEA;AACA,UAAA,MAAA,CAAA,QAAA,CAAA,OAAA,CAAA,GAAA,CAAA,OAAA;AACA;AACA,OAPA;AAQA,KAtCA;AAuCA,IAAA,QAvCA,oBAuCA,GAvCA,EAuCA;AAAA;;AACA,UAAA,CAAA,KAAA,UAAA,EAAA;AACA,eAAA,KAAA;AACA;;AACA,UAAA,GAAA,IAAA,CAAA,EAAA;AACA,aAAA,KAAA,CAAA,UAAA,CAAA,OAAA,GAAA,CAAA;AACA;;AACA,UAAA,MAAA,GAAA,KAAA,cAAA,EAAA,CAPA,CAOA;;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,MAAA,EARA,CAUA;;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,wBAAA,KAAA,UAAA;AACA,WAAA,KAAA,CAAA,OAAA,GAAA,IAAA;AAEA,MAAA,SAAA,WAAA,KAAA,GAAA,CAAA,iBAAA,SAAA,KAAA,UAAA,GAAA,MAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,YAAA,GAAA,CAAA,OAAA,EAAA;AAAA,4BACA,GAAA,CAAA,MADA;AAAA,cACA,IADA,eACA,IADA;AAAA,cACA,OADA,eACA,OADA;AAAA,cACA,gBADA,eACA,gBADA;AAAA,cACA,WADA,eACA,WADA;AAAA,cACA,cADA,eACA,cADA;AAGA,cAAA,WAAA,GAAA,GAAA;AACA,UAAA,MAAA,CAAA,WAAA,GAAA,WAAA;;AACA,eAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,OAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,gBAAA,OAAA,CAAA,CAAA,CAAA,CAAA,YAAA,EAAA;AAAA;AACA,oBAAA,UAAA,GAAA,OAAA,CAAA,CAAA,CAAA,CAAA,YAAA;;AACA,gBAAA,OAAA,CAAA,CAAA,CAAA,CAAA,YAAA,GAAA,UAAA,CAAA;AAAA,yBAAA,CAAA,GAAA,mBAAA,CAAA,MAAA,CAAA,WAAA,CAAA,UAAA,CAAA,EAAA,CAAA,GAAA,EAAA,CAAA,GAAA,CAAA;AAAA,iBAAA;AAFA;AAGA;;AACA,YAAA,OAAA,CAAA,KAAA,GAAA,WAAA;AACA;;AACA,UAAA,MAAA,CAAA,KAAA,CAAA,MAAA,CAAA,CAAA,GAAA,OAAA,CAAA,MAAA,GAAA,WAAA;AACA,UAAA,MAAA,CAAA,KAAA,CAAA,OAAA,sBAAA,OAAA;AACA,UAAA,MAAA,CAAA,gBAAA,GAAA,gBAAA;AACA,UAAA,MAAA,CAAA,cAAA,GAAA,cAAA;;AACA,cAAA,IAAA,EAAA;AACA,YAAA,MAAA,CAAA,KAAA,CAAA,UAAA,CAAA,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,KAAA,CAAA;AACA,YAAA,MAAA,CAAA,KAAA,CAAA,UAAA,GAAA,IAAA,CAAA,OAAA;AACA,WAHA,MAGA;AACA,YAAA,MAAA,CAAA,KAAA,CAAA,UAAA,CAAA,KAAA,GAAA,CAAA;AACA,YAAA,MAAA,CAAA,KAAA,CAAA,UAAA,GAAA,EAAA;AACA;AAEA,SAxBA,MAwBA;AACA,UAAA,MAAA,CAAA,QAAA,CAAA,IAAA,CAAA,UAAA,GAAA,CAAA,OAAA;AACA;AAEA,OA7BA,EA6BA,KA7BA,CA6BA,UAAA,CAAA,EAAA;AACA,QAAA,OAAA,CAAA,KAAA,CAAA,CAAA;;AACA,QAAA,MAAA,CAAA,QAAA,CAAA,KAAA,CAAA,MAAA;AACA,OAhCA,EAgCA,OAhCA,CAgCA,YAAA;AACA,QAAA,MAAA,CAAA,KAAA,CAAA,OAAA,GAAA,KAAA;AACA,OAlCA;AAmCA,KAxFA;AAyFA,IAAA,cAzFA,4BAyFA;AACA,UAAA,KAAA,GAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,KAAA,UAAA,EAAA,KAAA,MAAA,EAAA,KAAA,SAAA,CAAA;AACA,MAAA,KAAA,CAAA,MAAA,GAAA,KAAA,KAAA,CAAA,UAAA,CAAA,OAAA;AACA,MAAA,KAAA,CAAA,QAAA,GAAA,KAAA,KAAA,CAAA,UAAA,CAAA,QAAA;AACA,aAAA,SAAA,CAAA,KAAA,CAAA;AACA,KA9FA;AA+FA,IAAA,aA/FA,2BA+FA;AACA,WAAA,QAAA,CAAA,CAAA;AACA,KAjGA;AAkGA,IAAA,WAlGA,yBAkGA;AACA,WAAA,UAAA,GAAA,EAAA;AACA,WAAA,QAAA,CAAA,CAAA;AACA,KArGA;AAsGA,IAAA,kBAtGA,gCAsGA;AACA,WAAA,kBAAA,GAAA,CAAA,KAAA,kBAAA;AACA,KAxGA;AAyGA,IAAA,WAzGA,yBAyGA;AAAA;;AACA,UAAA,QAAA,GAAA,KAAA,gBAAA;AACA,UAAA,SAAA,GAAA,EAAA;;AACA,WAAA,IAAA,SAAA,IAAA,KAAA,MAAA,CAAA,KAAA,EAAA;AACA,YAAA,KAAA,MAAA,CAAA,KAAA,CAAA,cAAA,CAAA,SAAA,CAAA,EAAA;AACA,cAAA,KAAA,GAAA,KAAA,MAAA,CAAA,KAAA,CAAA,SAAA,CAAA;AACA,UAAA,SAAA,CAAA,UAAA,SAAA,CAAA,GAAA,KAAA,IAAA,EAAA;AACA;AACA;;AACA,MAAA,QAAA,0CAAA,KAAA,UAAA,GAAA,MAAA,CAAA,MAAA,CAAA,SAAA,EAAA,KAAA,UAAA,CAAA,CAAA,CAAA,IAAA,CAAA,UAAA,IAAA,EAAA;AACA,YAAA,CAAA,IAAA,EAAA;AACA,UAAA,MAAA,CAAA,QAAA,CAAA,OAAA,CAAA,QAAA;;AACA;AACA;;AACA,YAAA,OAAA,MAAA,CAAA,SAAA,CAAA,UAAA,KAAA,WAAA,EAAA;AACA,UAAA,MAAA,CAAA,SAAA,CAAA,UAAA,CAAA,IAAA,IAAA,CAAA,CAAA,IAAA,CAAA,CAAA,EAAA,QAAA,GAAA,MAAA;AACA,SAFA,MAEA;AACA,cAAA,GAAA,GAAA,MAAA,CAAA,GAAA,CAAA,eAAA,CAAA,IAAA,IAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA;AACA,cAAA,IAAA,GAAA,QAAA,CAAA,aAAA,CAAA,GAAA,CAAA;AACA,UAAA,IAAA,CAAA,KAAA,CAAA,OAAA,GAAA,MAAA;AACA,UAAA,IAAA,CAAA,IAAA,GAAA,GAAA;AACA,UAAA,IAAA,CAAA,YAAA,CAAA,UAAA,EAAA,QAAA,GAAA,MAAA;AACA,UAAA,QAAA,CAAA,IAAA,CAAA,WAAA,CAAA,IAAA;AACA,UAAA,IAAA,CAAA,KAAA;AACA,UAAA,QAAA,CAAA,IAAA,CAAA,WAAA,CAAA,IAAA,EARA,CAQA;;AACA,UAAA,MAAA,CAAA,GAAA,CAAA,eAAA,CAAA,GAAA,EATA,CASA;AACA;AACA,OAlBA;AAmBA,KArIA;AAsIA,IAAA,yBAtIA,qCAsIA,eAtIA,EAsIA,aAtIA,EAsIA;AACA,WAAA,KAAA,CAAA,eAAA,GAAA,eAAA;AACA,WAAA,KAAA,CAAA,aAAA,GAAA,aAAA;AACA,KAzIA;AA0IA,IAAA,mBA1IA,+BA0IA,UA1IA,EA0IA,OA1IA,EA0IA,MA1IA,EA0IA;AACA;AACA,UAAA,MAAA,CAAA,IAAA,CAAA,MAAA,EAAA,MAAA,GAAA,CAAA,EAAA;AACA,aAAA,MAAA,CAAA,MAAA,GAAA,MAAA,CAAA,KAAA;AACA,aAAA,MAAA,CAAA,KAAA,GAAA,YAAA,MAAA,CAAA,KAAA,GAAA,KAAA,GAAA,MAAA;AACA,OAHA,MAGA;AACA,aAAA,MAAA,CAAA,MAAA,GAAA,IAAA;AACA,aAAA,MAAA,CAAA,KAAA,GAAA,IAAA;AACA;;AACA,WAAA,KAAA,CAAA,UAAA,GAAA,UAAA;AACA,WAAA,QAAA;AACA;AArJA;AAzEA,CAAA","sourcesContent":["<template>\r\n  <a-card :bordered=\"false\" style=\"height: 100%\">\r\n\r\n    <div class=\"table-page-search-wrapper\">\r\n      <a-form layout=\"inline\">\r\n        <a-row :gutter=\"24\" v-if=\"queryInfo && queryInfo.length>0\">\r\n          <template v-for=\"(item,index) in queryInfo\">\r\n            <template v-if=\" item.hidden==='1' \">\r\n              <a-col v-if=\"item.view.indexOf('Date')>=0\" :md=\"12\" :sm=\"16\" :key=\" 'query'+index \" v-show=\"toggleSearchStatus\">\r\n                <onl-cgreport-query-form-item :queryParam=\"queryParam\" :item=\"item\" :dictOptions=\"dictOptions\"></onl-cgreport-query-form-item>\r\n              </a-col>\r\n              <a-col v-else :md=\"6\" :sm=\"8\" :key=\" 'query'+index \" v-show=\"toggleSearchStatus\">\r\n                <onl-cgreport-query-form-item :queryParam=\"queryParam\" :item=\"item\" :dictOptions=\"dictOptions\"></onl-cgreport-query-form-item>\r\n              </a-col>\r\n            </template>\r\n            <template v-else>\r\n              <a-col v-if=\"item.view.indexOf('Date')>=0\" :md=\"12\" :sm=\"16\" :key=\" 'query'+index \">\r\n                <onl-cgreport-query-form-item :queryParam=\"queryParam\" :item=\"item\" :dictOptions=\"dictOptions\"></onl-cgreport-query-form-item>\r\n              </a-col>\r\n              <a-col v-else :md=\"6\" :sm=\"8\" :key=\" 'query'+index \">\r\n                <onl-cgreport-query-form-item :queryParam=\"queryParam\" :item=\"item\" :dictOptions=\"dictOptions\"></onl-cgreport-query-form-item>\r\n              </a-col>\r\n            </template>\r\n          </template>\r\n\r\n          <a-col :md=\"6\" :sm=\"8\">\r\n            <span style=\"float: left;overflow: hidden;\" class=\"table-page-search-submitButtons\">\r\n              <a-button type=\"primary\" @click=\"searchByQuery\" icon=\"search\">查询</a-button>\r\n              <a-button type=\"primary\" @click=\"searchReset\" icon=\"reload\" style=\"margin-left: 8px\">重置</a-button>\r\n              <a @click=\"handleToggleSearch\" style=\"margin-left: 8px\">\r\n                {{ toggleSearchStatus ? '收起' : '展开' }}\r\n                <a-icon :type=\"toggleSearchStatus ? 'up' : 'down'\"/>\r\n              </a>\r\n            </span>\r\n          </a-col>\r\n        </a-row>\r\n      </a-form>\r\n    </div>\r\n\r\n\r\n    <div class=\"table-operator\" style=\"margin-bottom: 10px\">\r\n      <!--      <a-button type=\"primary\" icon=\"plus\" @click=\"exportExcel\">导出</a-button>-->\r\n    </div>\r\n\r\n\r\n    <a-table\r\n      ref=\"table\"\r\n      size=\"middle\"\r\n      bordered\r\n      rowKey=\"id\"\r\n      :columns=\"table.columns\"\r\n      :dataSource=\"table.dataSource\"\r\n      :pagination=\"table.pagination\"\r\n      :loading=\"table.loading\"\r\n      :scroll=\"table.scroll\"\r\n      :rowSelection=\"{fixed:true, selectedRowKeys: table.selectedRowKeys, onChange: handleChangeInTableSelect}\"\r\n      @change=\"handleChangeInTable\"\r\n      style=\"min-height: 300px\"\r\n    >\r\n\r\n      <!-- 支持链接href跳转 -->\r\n      <template\r\n        v-for=\"field of fieldHrefSlots\"\r\n        :slot=\"field.slotName\"\r\n        slot-scope=\"text, record\"\r\n      >\r\n        <a @click=\"handleClickFieldHref(field,record)\">{{ text }}</a>\r\n      </template>\r\n\r\n    </a-table>\r\n\r\n    <!-- 跳转Href的动态组件方式 -->\r\n    <a-modal v-bind=\"hrefComponent.model\" v-on=\"hrefComponent.on\">\r\n      <component :is=\"hrefComponent.is\" v-bind=\"hrefComponent.params\"/>\r\n    </a-modal>\r\n\r\n  </a-card>\r\n</template>\r\n\r\n<script>\r\n  import { HrefJump } from '@/mixins/OnlAutoListMixin'\r\n  import { getAction,downFile } from '@/api/manage'\r\n  import { filterMultiDictText } from '@/components/dict/JDictSelectUtil'\r\n  import {filterObj} from '@/utils/util';\r\n\r\n  export default {\r\n    name: 'OnlCgreportAutoList',\r\n    mixins: [HrefJump],\r\n    components: {\r\n    },\r\n    data() {\r\n      return {\r\n        // 查询参数\r\n        queryInfo: [],\r\n        // 查询参数，多个页面的查询参数用 code 作为键来区分\r\n        queryParamsMap: {},\r\n        selfParam:{\r\n        },\r\n        sorter: {\r\n          column: '',\r\n          order: 'desc',\r\n        },\r\n        dictOptions: {},\r\n        toggleSearchStatus: false, // 高级搜索 展开/关闭\r\n        reportCode: '',\r\n        description: '在线报表功能测试页面',\r\n        url: {\r\n          getColumnsAndData: '/online/cgreport/api/getColumnsAndData/',\r\n          getQueryInfo: '/online/cgreport/api/getQueryInfo/',\r\n          getParamsInfo:'/online/cgreport/api/getParamsInfo/'\r\n        },\r\n        table: {\r\n          loading: true,\r\n          // 表头\r\n          columns: [],\r\n          //数据集\r\n          dataSource: [],\r\n          // 选择器\r\n          selectedRowKeys: [],\r\n          selectionRows: [],\r\n          scroll: { x: false },\r\n          // 分页参数\r\n          pagination: {\r\n            current: 1,\r\n            pageSize: 10,\r\n            pageSizeOptions: ['10', '20', '30'],\r\n            showTotal: (total, range) => {\r\n              return range[0] + '-' + range[1] + ' 共' + total + '条'\r\n            },\r\n            showQuickJumper: true,\r\n            showSizeChanger: true,\r\n            total: 0\r\n          }\r\n        },\r\n        cgreportHeadName:\"\"\r\n      }\r\n    },\r\n    mounted() {\r\n      this.initParamsInfo()\r\n      this.initQueryInfo();\r\n    },\r\n    watch: {\r\n      '$route'() {\r\n        // 刷新参数放到这里去触发，就可以刷新相同界面了\r\n        this.initParamsInfo()\r\n        this.initQueryInfo();\r\n      }\r\n    },\r\n    computed: {\r\n      queryParam: {\r\n        get() {\r\n          return this.queryParamsMap[this.reportCode]\r\n        },\r\n        set(newVal) {\r\n          this.$set(this.queryParamsMap, this.reportCode, newVal)\r\n        }\r\n      }\r\n    },\r\n    methods: {\r\n      initParamsInfo(){\r\n        if(!this.$route.params.code){\r\n          return false\r\n        }\r\n        //获取报表ID\r\n        this.reportCode = this.$route.params.code;\r\n        if (!this.queryParam) {\r\n          this.queryParam = {}\r\n        }\r\n\r\n        this.selfParam={}\r\n        getAction(`${this.url.getParamsInfo}${this.reportCode}`).then((res) => {\r\n          if (res.success) {\r\n            if(res.result && res.result.length>0){\r\n              for(let i of res.result){\r\n                this.selfParam['self_'+i.paramName]=(!this.$route.query[i.paramName])?\"\":this.$route.query[i.paramName]\r\n              }\r\n            }\r\n          } else {\r\n            this.$message.warning(res.message)\r\n          }\r\n          this.loadData()\r\n        })\r\n      },\r\n\r\n      initQueryInfo() {\r\n        if(!this.reportCode){\r\n          return false\r\n        }\r\n        getAction(`${this.url.getQueryInfo}${this.reportCode}`).then((res) => {\r\n          console.log(\"获取查询条件\", res);\r\n          if (res.success) {\r\n            this.queryInfo = res.result\r\n          } else {\r\n            this.$message.warning(res.message)\r\n          }\r\n        })\r\n      },\r\n      loadData(arg) {\r\n        if(!this.reportCode){\r\n          return false\r\n        }\r\n        if (arg == 1) {\r\n          this.table.pagination.current = 1\r\n        }\r\n        let params = this.getQueryParams();//查询条件\r\n        console.log(params)\r\n\r\n        //获取报表ID\r\n        console.log(' 动态报表 reportCode ： ' + this.reportCode);\r\n        this.table.loading = true\r\n\r\n        getAction(`${this.url.getColumnsAndData}${this.reportCode}`, params).then(res => {\r\n          if (res.success) {\r\n            let { data, columns, cgreportHeadName, dictOptions, fieldHrefSlots } = res.result\r\n\r\n            let columnWidth = 230\r\n            this.dictOptions = dictOptions\r\n            for(let a=0;a<columns.length;a++){\r\n              if(columns[a].customRender){\r\n                let field_name = columns[a].customRender;\r\n                columns[a].customRender = (t => t ? filterMultiDictText(this.dictOptions[field_name], t + '') : t)\r\n              }\r\n              columns.width = columnWidth\r\n            }\r\n            this.table.scroll.x = columns.length * columnWidth\r\n            this.table.columns = [...columns]\r\n            this.cgreportHeadName = cgreportHeadName\r\n            this.fieldHrefSlots = fieldHrefSlots\r\n            if (data) {\r\n              this.table.pagination.total = Number(data.total)\r\n              this.table.dataSource = data.records\r\n            } else {\r\n              this.table.pagination.total = 0\r\n              this.table.dataSource = []\r\n            }\r\n\r\n          }else{\r\n            this.$message.warn('查询失败：'+res.message)\r\n          }\r\n\r\n        }).catch((e) => {\r\n          console.error(e)\r\n          this.$message.error('查询失败')\r\n        }).finally(() => {\r\n          this.table.loading = false\r\n        })\r\n      },\r\n      getQueryParams() {\r\n        let param = Object.assign({}, this.queryParam, this.sorter,this.selfParam);\r\n        param.pageNo = this.table.pagination.current;\r\n        param.pageSize = this.table.pagination.pageSize;\r\n        return filterObj(param);\r\n      },\r\n      searchByQuery() {\r\n        this.loadData(1);\r\n      },\r\n      searchReset() {\r\n        this.queryParam = {}\r\n        this.loadData(1);\r\n      },\r\n      handleToggleSearch() {\r\n        this.toggleSearchStatus = !this.toggleSearchStatus;\r\n      },\r\n      exportExcel() {\r\n        let fileName = this.cgreportHeadName\r\n        let selfParam = {}\r\n        for (let queryName in this.$route.query) {\r\n          if (this.$route.query.hasOwnProperty(queryName)) {\r\n            let value = this.$route.query[queryName]\r\n            selfParam['self_' + queryName] = value || ''\r\n          }\r\n        }\r\n        downFile(`/online/cgreport/api/exportXls/${this.reportCode}`, Object.assign(selfParam, this.queryParam)).then((data) => {\r\n          if (!data) {\r\n            this.$message.warning(\"文件下载失败\")\r\n            return\r\n          }\r\n          if (typeof window.navigator.msSaveBlob !== 'undefined') {\r\n            window.navigator.msSaveBlob(new Blob([data]), fileName+'.xls')\r\n          }else{\r\n            let url = window.URL.createObjectURL(new Blob([data]))\r\n            let link = document.createElement('a')\r\n            link.style.display = 'none'\r\n            link.href = url\r\n            link.setAttribute('download', fileName+'.xls')\r\n            document.body.appendChild(link)\r\n            link.click()\r\n            document.body.removeChild(link); //下载完成移除元素\r\n            window.URL.revokeObjectURL(url); //释放掉blob对象\r\n          }\r\n        })\r\n      },\r\n      handleChangeInTableSelect(selectedRowKeys, selectionRows) {\r\n        this.table.selectedRowKeys = selectedRowKeys\r\n        this.table.selectionRows = selectionRows\r\n      },\r\n      handleChangeInTable(pagination, filters, sorter) {\r\n        //分页、排序、筛选变化时触发\r\n        if (Object.keys(sorter).length > 0) {\r\n          this.sorter.column = sorter.field\r\n          this.sorter.order = 'ascend' == sorter.order ? 'asc' : 'desc'\r\n        } else {\r\n          this.sorter.column = null\r\n          this.sorter.order = null\r\n        }\r\n        this.table.pagination = pagination\r\n        this.loadData()\r\n      }\r\n\r\n    }\r\n  }\r\n</script>\r\n<style scoped>\r\n  .div {\r\n    display: flex;\r\n    align-items: center;\r\n    height: 500px\r\n  }\r\n\r\n</style>\r\n"],"sourceRoot":"src/views/modules/online/cgreport/auto"}]}