{"remainingRequest":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\thread-loader\\dist\\cjs.js!D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js!D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ideaworkspace\\jxc-front-end\\src\\views\\erp\\bas\\BasMaterialCategoryList.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ideaworkspace\\jxc-front-end\\src\\views\\erp\\bas\\BasMaterialCategoryList.vue","mtime":1648374777605},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1648365139913},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1648365068269},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":1648364957239}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"D:\\\\ideaworkspace\\\\jxc-front-end\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getAction, deleteAction } from '@/api/manage';\nimport { JeecgListMixin } from '@/mixins/JeecgListMixin';\nimport BasMaterialCategoryModal from './modules/BasMaterialCategoryModal';\nimport { filterMultiDictText } from '@/components/dict/JDictSelectUtil';\nexport default {\n  name: \"BasMaterialCategoryList\",\n  mixins: [JeecgListMixin],\n  components: {\n    BasMaterialCategoryModal: BasMaterialCategoryModal\n  },\n  data: function data() {\n    return {\n      description: '物料分类管理',\n      // 表头\n      columns: [{\n        title: '名称',\n        fixed: 'left',\n        width: 300,\n        align: \"left\",\n        dataIndex: 'name'\n      }, {\n        title: '编码',\n        fixed: 'left',\n        width: 200,\n        align: \"left\",\n        dataIndex: 'code',\n        scopedSlots: {\n          customRender: 'code'\n        }\n      }, {\n        title: '全名',\n        align: \"left\",\n        dataIndex: 'fullname'\n      }, {\n        title: '是否启用',\n        width: 75,\n        align: \"center\",\n        dataIndex: 'isEnabled_dictText'\n      }, {\n        title: '操作',\n        dataIndex: 'action',\n        fixed: 'right',\n        width: 120,\n        align: \"center\",\n        scopedSlots: {\n          customRender: 'action'\n        }\n      }],\n      url: {\n        list: \"/bas/basMaterialCategory/rootList\",\n        childList: \"/bas/basMaterialCategory/childList\",\n        delete: \"/bas/basMaterialCategory/delete\",\n        deleteBatch: \"/bas/basMaterialCategory/deleteBatch\",\n        exportXlsUrl: \"/bas/basMaterialCategory/exportXls\",\n        importExcelUrl: \"bas/basMaterialCategory/importExcel\"\n      },\n      expandedRowKeys: [],\n      hasChildrenField: \"hasChild\",\n      pidField: \"pid\",\n      dictOptions: {},\n      loadParent: false\n    };\n  },\n  computed: {\n    importExcelUrl: function importExcelUrl() {\n      return \"\".concat(window._CONFIG['domianURL'], \"/\").concat(this.url.importExcelUrl);\n    },\n    tableProps: function tableProps() {\n      var _this = this;\n\n      return {\n        // 列表项是否可选择\n        rowSelection: {\n          selectedRowKeys: _this.selectedRowKeys,\n          onChange: function onChange(selectedRowKeys) {\n            return _this.selectedRowKeys = selectedRowKeys;\n          }\n        }\n      };\n    }\n  },\n  methods: {\n    initDictConfig: function initDictConfig() {},\n    loadData: function loadData(arg) {\n      var _this2 = this;\n\n      if (arg == 1) {\n        this.ipagination.current = 1;\n      }\n\n      this.loading = true;\n      this.expandedRowKeys = [];\n      var params = this.getQueryParams();\n      return new Promise(function (resolve) {\n        getAction(_this2.url.list, params).then(function (res) {\n          if (res.success) {\n            var result = res.result;\n\n            if (Number(result.total) > 0) {\n              _this2.ipagination.total = Number(result.total);\n              _this2.dataSource = _this2.getDataByResult(res.result.records);\n              resolve();\n            } else {\n              _this2.ipagination.total = 0;\n              _this2.dataSource = [];\n            }\n          } else {\n            _this2.$message.warning(res.message);\n          }\n\n          _this2.loading = false;\n        });\n      });\n    },\n    getDataByResult: function getDataByResult(result) {\n      var _this3 = this;\n\n      return result.map(function (item) {\n        //判断是否标记了带有子节点\n        if (item[_this3.hasChildrenField] == '1') {\n          var loadChild = {\n            id: item.id + '_loadChild',\n            name: 'loading...',\n            isLoading: true\n          };\n          item.children = [loadChild];\n        }\n\n        return item;\n      });\n    },\n    handleExpand: function handleExpand(expanded, record) {\n      var _this4 = this;\n\n      // 判断是否是展开状态\n      if (expanded) {\n        this.expandedRowKeys.push(record.id);\n\n        if (record.children.length > 0 && record.children[0].isLoading === true) {\n          var params = this.getQueryParams(); //查询条件\n\n          params[this.pidField] = record.id;\n          getAction(this.url.childList, params).then(function (res) {\n            if (res.success) {\n              if (res.result && res.result.length > 0) {\n                record.children = _this4.getDataByResult(res.result);\n                _this4.dataSource = _toConsumableArray(_this4.dataSource);\n              } else {\n                record.children = '';\n                record.hasChildrenField = '0';\n              }\n            } else {\n              _this4.$message.warning(res.message);\n            }\n          });\n        }\n      } else {\n        var keyIndex = this.expandedRowKeys.indexOf(record.id);\n\n        if (keyIndex >= 0) {\n          this.expandedRowKeys.splice(keyIndex, 1);\n        }\n      }\n    },\n    modalFormOk: function modalFormOk(formData, arr) {\n      if (!formData.id) {\n        this.addOk(formData, arr);\n      } else {\n        if (!arr) {\n          this.loadData();\n        } else {\n          this.editOk(formData, this.dataSource);\n          this.dataSource = _toConsumableArray(this.dataSource);\n        }\n      }\n    },\n    editOk: function editOk(formData, arr) {\n      if (arr && arr.length > 0) {\n        for (var i = 0; i < arr.length; i++) {\n          if (arr[i].id == formData.id) {\n            arr[i] = formData;\n            break;\n          } else {\n            this.editOk(formData, arr[i].children);\n          }\n        }\n      }\n    },\n    addOk: function () {\n      var _addOk = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(formData, arr) {\n        var _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, i;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (formData[this.pidField]) {\n                  _context.next = 4;\n                  break;\n                }\n\n                this.loadData();\n                _context.next = 36;\n                break;\n\n              case 4:\n                if (!(this.loadParent === true)) {\n                  _context.next = 9;\n                  break;\n                }\n\n                this.expandTreeNode(formData[this.pidField]);\n                this.loadParent = false;\n                _context.next = 36;\n                break;\n\n              case 9:\n                this.expandedRowKeys = [];\n                _iteratorNormalCompletion = true;\n                _didIteratorError = false;\n                _iteratorError = undefined;\n                _context.prev = 13;\n                _iterator = arr[Symbol.iterator]();\n\n              case 15:\n                if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n                  _context.next = 22;\n                  break;\n                }\n\n                i = _step.value;\n                _context.next = 19;\n                return this.expandTreeNode(i);\n\n              case 19:\n                _iteratorNormalCompletion = true;\n                _context.next = 15;\n                break;\n\n              case 22:\n                _context.next = 28;\n                break;\n\n              case 24:\n                _context.prev = 24;\n                _context.t0 = _context[\"catch\"](13);\n                _didIteratorError = true;\n                _iteratorError = _context.t0;\n\n              case 28:\n                _context.prev = 28;\n                _context.prev = 29;\n\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                  _iterator.return();\n                }\n\n              case 31:\n                _context.prev = 31;\n\n                if (!_didIteratorError) {\n                  _context.next = 34;\n                  break;\n                }\n\n                throw _iteratorError;\n\n              case 34:\n                return _context.finish(31);\n\n              case 35:\n                return _context.finish(28);\n\n              case 36:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[13, 24, 28, 36], [29,, 31, 35]]);\n      }));\n\n      function addOk(_x, _x2) {\n        return _addOk.apply(this, arguments);\n      }\n\n      return addOk;\n    }(),\n    expandTreeNode: function expandTreeNode(nodeId) {\n      var _this5 = this;\n\n      return new Promise(function (resolve, reject) {\n        _this5.getFormDataById(nodeId, _this5.dataSource);\n\n        var row = _this5.parentFormData;\n\n        _this5.expandedRowKeys.push(nodeId);\n\n        var params = _this5.getQueryParams(); //查询条件\n\n\n        params[_this5.pidField] = nodeId;\n        getAction(_this5.url.childList, params).then(function (res) {\n          if (res.success) {\n            if (res.result && res.result.length > 0) {\n              row.children = _this5.getDataByResult(res.result);\n            } else {\n              row.children = '';\n            }\n\n            _this5.dataSource = _toConsumableArray(_this5.dataSource);\n            resolve();\n          } else {\n            reject();\n          }\n        });\n      });\n    },\n    getFormDataById: function getFormDataById(id, arr) {\n      if (arr && arr.length > 0) {\n        for (var i = 0; i < arr.length; i++) {\n          if (arr[i].id == id) {\n            this.parentFormData = arr[i];\n          } else {\n            this.getFormDataById(id, arr[i].children);\n          }\n        }\n      }\n    },\n    handleAddChild: function handleAddChild(record) {\n      this.loadParent = true;\n      var obj = {};\n      obj[this.pidField] = record['id'];\n      this.$refs.modalForm.add(obj);\n    },\n    handleDeleteNode: function handleDeleteNode(record) {\n      var _this6 = this;\n\n      if (!this.url.delete) {\n        this.$message.error(\"请设置url.delete属性!\");\n        return;\n      }\n\n      var that = this;\n      deleteAction(that.url.delete, {\n        id: record.id\n      }).then(function (res) {\n        if (res.success) {\n          if (!record[_this6.pidField] || record[_this6.pidField] == '0' || record[_this6.pidField].length == 0) {\n            that.loadData(1);\n          } else {\n            that.$message.success(res.message);\n            that.expandTreeNode(record[_this6.pidField]);\n          }\n        } else {\n          that.$message.warning(res.message);\n        }\n      });\n    },\n    myHandleAdd: function myHandleAdd() {\n      this.$refs.modalForm.action = \"add\";\n      this.handleAdd();\n    },\n    myHandleEdit: function myHandleEdit(record) {\n      record.billProcStatus = '12';\n      this.$refs.modalForm.action = \"edit\";\n      this.handleEdit(record);\n    },\n    myHandleDetail: function myHandleDetail(record) {\n      this.$refs.modalForm.action = \"detail\";\n      this.handleDetail(record);\n    }\n  }\n};",null]}