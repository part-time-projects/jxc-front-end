{"remainingRequest":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\thread-loader\\dist\\cjs.js!D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js!D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ideaworkspace\\jxc-front-end\\src\\views\\erp\\finance\\modules\\SalInvoiceModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ideaworkspace\\jxc-front-end\\src\\views\\erp\\finance\\modules\\SalInvoiceModal.vue","mtime":1648374777632},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1648365139913},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1648365068269},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":1648364957239}],"contextDependencies":[],"result":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport pick from 'lodash.pick';\nimport { FormTypes, getRefPromise, VALIDATE_NO_PASSED, validateFormAndTables } from '@/utils/JEditableTableUtil';\nimport { JEditableTableMixin } from '@/mixins/JEditableTableMixin';\nimport { validateDuplicateValue } from '@/utils/util';\nimport JDate from '@/components/jeecg/JDate';\nimport JUpload from '@/components/jeecg/JUpload';\nimport JDictSelectTag from \"@/components/dict/JDictSelectTag\";\nimport JSelectUserByDep from '@/components/jeecgbiz/JSelectUserByDep';\nimport { getAction, putAction } from '@api/manage';\nimport { billModalMixin } from '../../mixins/billModalMixin';\nimport EditableTableColumnsSetter from \"../../components/EditableTableColumnsSetter\";\nimport OnlCgreportSelectModal from '../../components/OnlCgreportSelectModal';\nimport { getFormatDate } from '../../utils/util';\nimport { validateEntryNo } from '../../utils/editableTableValidate';\nexport default {\n  name: 'SalInvoiceModal',\n  mixins: [JEditableTableMixin, billModalMixin],\n  components: {\n    EditableTableColumnsSetter: EditableTableColumnsSetter,\n    JDate: JDate,\n    JUpload: JUpload,\n    JSelectUserByDep: JSelectUserByDep,\n    JDictSelectTag: JDictSelectTag,\n    OnlCgreportSelectModal: OnlCgreportSelectModal\n  },\n  data: function data() {\n    return {\n      width: '1200px',\n      moreStatus: false,\n      // 新增时子表默认添加几行空数据\n      addDefaultRowNum: 0,\n      validatorRules: {\n        billNo: {\n          rules: [{\n            required: true,\n            message: '请输入单据编号!'\n          }]\n        },\n        billDate: {\n          rules: [{\n            required: true,\n            message: '请输入单据日期!'\n          }]\n        },\n        isRubric: {\n          rules: [{\n            required: true,\n            message: '请输入是否红字!'\n          }]\n        },\n        customerId: {\n          rules: [{\n            required: true,\n            message: '请输入客户!'\n          }]\n        },\n        isVoided: {\n          rules: []\n        },\n        isClosed: {\n          rules: []\n        }\n      },\n      refKeys: ['finSalInvoiceEntry'],\n      tableKeys: ['finSalInvoiceEntry'],\n      activeKey: 'finSalInvoiceEntry',\n      // 明细\n      finSalInvoiceEntryTable: {\n        loading: false,\n        dataSource: [],\n        selectedRowCount: 0,\n        settingColumns: [],\n        //显示列设置\n        columns: [{\n          title: '分录号',\n          key: 'entryNo',\n          type: FormTypes.inputNumber,\n          width: \"60px\",\n          validateRules: [{\n            required: true,\n            message: '${title}不能为空'\n          }, {\n            pattern: /^[1-9]\\d*$/,\n            message: '请输入零以上的正整数'\n          }, {\n            handler: validateEntryNo\n          }]\n        }, {\n          title: '源单类型',\n          key: 'sourceType',\n          type: FormTypes.hidden,\n          width: \"1px\",\n          defaultValue: 'stk_io_bill.stk_io_bill_entry'\n        }, {\n          title: '源单分录ID',\n          key: 'sourceEntryId',\n          type: FormTypes.hidden,\n          width: \"1px\",\n          defaultValue: ''\n        }, {\n          title: '出库单分录',\n          key: 'sourceEntryNo',\n          type: FormTypes.input,\n          width: \"210px\",\n          defaultValue: '',\n          validateRules: [{\n            required: true,\n            message: '${title}不能为空'\n          }],\n          disabled: true\n        }, {\n          title: '物料',\n          key: 'materialId',\n          type: FormTypes.sel_search,\n          dictCode: \"bas_material,name,id\",\n          width: \"160px\",\n          defaultValue: '',\n          options: [],\n          disabled: true\n        }, {\n          title: '仓库',\n          key: 'warehouseId',\n          type: FormTypes.select,\n          dictCode: \"bas_warehouse,name,id\",\n          width: \"150px\",\n          defaultValue: '',\n          options: [],\n          disabled: true\n        }, {\n          title: '批次号',\n          key: 'batchNo',\n          type: FormTypes.input,\n          width: \"200px\",\n          defaultValue: '',\n          disabled: true\n        }, {\n          title: '结算数量',\n          key: 'settleQty',\n          type: FormTypes.input,\n          width: \"100px\",\n          defaultValue: '',\n          disabled: true\n        }, {\n          title: '结算金额',\n          key: 'settleAmt',\n          type: FormTypes.input,\n          width: \"100px\",\n          defaultValue: '',\n          disabled: true\n        }, {\n          title: '已开票数量',\n          key: 'invoicedQty',\n          type: FormTypes.input,\n          width: \"100px\",\n          defaultValue: '',\n          disabled: true\n        }, {\n          title: '已开票金额',\n          key: 'invoicedAmt',\n          type: FormTypes.input,\n          width: \"100px\",\n          defaultValue: '',\n          disabled: true\n        }, {\n          title: '税率',\n          key: 'taxRate',\n          type: FormTypes.input,\n          width: \"80px\",\n          defaultValue: ''\n        }, {\n          title: '发票号',\n          key: 'invoiceNo',\n          type: FormTypes.input,\n          width: \"240px\",\n          placeholder: '请输入${title}',\n          defaultValue: '',\n          validateRules: [{\n            required: true,\n            message: '${title}不能为空'\n          }]\n        }, {\n          title: '开票日期',\n          key: 'invoiceDate',\n          type: FormTypes.date,\n          width: \"120px\",\n          placeholder: '请输入${title}',\n          defaultValue: ''\n        }, {\n          title: '开票数量',\n          key: 'invoiceQty',\n          type: FormTypes.inputNumber,\n          width: \"100px\",\n          placeholder: '请输入${title}',\n          defaultValue: '',\n          validateRules: [{\n            required: true,\n            message: '${title}不能为空'\n          }, {\n            handler: this.validateInvoiceQty\n          }]\n        }, {\n          title: '开票金额',\n          key: 'invoiceAmt',\n          type: FormTypes.inputNumber,\n          width: \"100px\",\n          placeholder: '请输入${title}',\n          defaultValue: '',\n          validateRules: [{\n            required: true,\n            message: '${title}不能为空'\n          }, {\n            handler: this.validateInvoiceAmt\n          }]\n        }, {\n          title: '备注',\n          key: 'remark',\n          type: FormTypes.input,\n          width: \"200px\",\n          placeholder: '请输入${title}',\n          defaultValue: ''\n        }, {\n          title: '备注2',\n          key: 'remark2',\n          type: FormTypes.input,\n          width: \"200px\",\n          placeholder: '请输入${title}',\n          defaultValue: ''\n        }, {\n          title: '备注3',\n          key: 'remark3',\n          type: FormTypes.input,\n          width: \"200px\",\n          placeholder: '请输入${title}',\n          defaultValue: ''\n        }]\n      },\n      url: {\n        add: \"/finance/finSalInvoice/add\",\n        edit: \"/finance/finSalInvoice/edit\",\n        approve: \"/finance/finSalInvoice/approve\",\n        finSalInvoiceEntry: {\n          list: '/finance/finSalInvoice/queryFinSalInvoiceEntryByMainId'\n        },\n        stkIoBillEntry: {\n          list: '/stock/stkIoBill/queryEntryByMainId'\n        }\n      }\n    };\n  },\n  methods: {\n    getAllTable: function getAllTable() {\n      var _this = this;\n\n      var values = this.tableKeys.map(function (key) {\n        return getRefPromise(_this, key);\n      });\n      return Promise.all(values);\n    },\n    addInit: function addInit() {\n      var _this2 = this;\n\n      this.model.isAuto = 0;\n      this.model.isRubric = 0; //处理状态：编辑中\n\n      this.model.billProcStatus = '12'; // 请求后台的填值规则接口地址\n\n      var url = '/sys/fillRule/executeRuleByCode/';\n      var ruleCode = 'sal_invoice_bill_no';\n      var that = this;\n      putAction(url + ruleCode, {}).then(function (res) {\n        // 执行成功，获取返回的值，并赋到页面上\n        if (res.success) {\n          that.model.billNo = res.result;\n          that.$nextTick(function () {\n            that.form.setFieldsValue({\n              'billNo': res.result,\n              'billDate': getFormatDate()\n            }); //初始空白行增加时，billNo可能还未生成！\n\n            var _this2$$refs$finSalIn = _this2.$refs.finSalInvoiceEntry.getValuesSync({\n              validate: false\n            }),\n                values = _this2$$refs$finSalIn.values;\n\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n              for (var _iterator = values[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                var v = _step.value;\n                that.$refs.finSalInvoiceEntry.setValues([{\n                  rowKey: v.id,\n                  values: {\n                    batchNo: that.model.billNo + '-' + v.entryNo\n                  }\n                }]);\n              }\n            } catch (err) {\n              _didIteratorError = true;\n              _iteratorError = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                  _iterator.return();\n                }\n              } finally {\n                if (_didIteratorError) {\n                  throw _iteratorError;\n                }\n              }\n            }\n          });\n        }\n      });\n    },\n\n    /** 调用完edit()方法之后会自动调用此方法 */\n    editAfter: function editAfter() {\n      var _this3 = this;\n\n      if (this.action === 'add') {\n        this.addInit();\n      }\n\n      var fieldval = pick(this.model, 'billNo', 'billDate', 'isAuto', 'invoiceType', 'isRubric', 'sourceType', 'sourceId', 'sourceNo', 'clerkId', 'customerId', 'attachment', 'remark', 'billProcStatus', 'approverId', 'flowId', 'isApproved', 'effectiveTime', 'isVoided', 'isClosed', 'sysOrgCode', 'createBy', 'createTime', 'updateBy', 'updateTime');\n      this.$nextTick(function () {\n        _this3.form.setFieldsValue(fieldval);\n      }); // 加载子表数据\n\n      if (this.model.id) {\n        var params = {\n          id: this.model.id\n        };\n        this.requestSubTableData(this.url.finSalInvoiceEntry.list, params, this.finSalInvoiceEntryTable);\n      }\n    },\n\n    /** 整理成formData */\n    classifyIntoFormData: function classifyIntoFormData(allValues) {\n      var main = Object.assign(this.model, allValues.formValue);\n      return _objectSpread({}, main, {\n        // 展开\n        finSalInvoiceEntryList: allValues.tablesValue[0].values\n      });\n    },\n    validateError: function validateError(msg) {\n      this.$message.error(msg);\n    },\n    popupCallback: function popupCallback(row) {\n      this.form.setFieldsValue(pick(row, 'billNo', 'billDate', 'isAuto', 'invoiceType', 'isRubric', 'sourceType', 'sourceId', 'sourceNo', 'clerkId', 'customerId', 'attachment', 'remark', 'billProcStatus', 'approverId', 'flowId', 'isApproved', 'effectiveTime', 'isVoided', 'isClosed', 'sysOrgCode', 'createBy', 'createTime', 'updateBy', 'updateTime'));\n    },\n    handleSalOutSelect: function handleSalOutSelect() {\n      var queryParams = {};\n      queryParams['customer_id'] = this.form.getFieldValue('customerId');\n      this.$refs.selectModal.initQueryParams(queryParams);\n      this.$refs.selectModal.visible = true;\n    },\n    handleSalOutSelectCallback: function handleSalOutSelectCallback(selectedRows) {\n      var that = this;\n      var target = that.$refs.finSalInvoiceEntry;\n      var url = that.url.stkIoBillEntry.list;\n      var params = {\n        id: selectedRows[0]['id']\n      };\n      that.finSalInvoiceEntryTable.loading = true;\n      getAction(url, params).then(function (res) {\n        var _target$getValuesSync = target.getValuesSync({\n          validate: false\n        }),\n            values = _target$getValuesSync.values;\n\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          var _loop = function _loop() {\n            var rec = _step2.value;\n\n            if (values.filter(function (row) {\n              return row.stockInEntryId === rec.id;\n            }).length === 0) {\n              target.add();\n              var rowId = target.rows[target.rows.length - 1].id;\n              target.setValues([{\n                rowKey: rowId,\n                values: _objectSpread({\n                  sourceEntryId: rec.id,\n                  sourceEntryNo: rec.billNo + '.' + rec.entryNo\n                }, pick(rec, 'materialId', 'warehouseId', 'batchNo', 'settleQty', 'settleAmt', 'invoicedQty', 'invoicedAmt', 'taxRate'))\n              }]);\n            }\n          };\n\n          for (var _iterator2 = (res.result || [])[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            _loop();\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n      }).finally(function () {\n        that.finSalInvoiceEntryTable.loading = false;\n      });\n    },\n    validateInvoiceQty: function validateInvoiceQty(type, value, row, column, callback, target) {\n      if (type !== 'blur') {\n        callback();\n        return;\n      }\n\n      var _target$getValuesSync2 = target.getValuesSync({\n        validate: false,\n        rowIds: [row.id]\n      }),\n          values = _target$getValuesSync2.values;\n\n      var settleQty = Number(values[0].settleQty);\n      var invoicedQty = Number(values[0].invoicedQty);\n      var invoiceQty = Number(value);\n\n      if (isNaN(settleQty) || isNaN(invoicedQty) || isNaN(invoiceQty)) {\n        callback();\n        return;\n      }\n\n      if (invoiceQty + invoicedQty > settleQty) {\n        callback(false, '开票数量不能大于未开票数量！');\n      } else {\n        callback(true);\n      }\n    },\n    validateInvoiceAmt: function validateInvoiceAmt(type, value, row, column, callback, target) {\n      if (type !== 'blur') {\n        callback();\n        return;\n      }\n\n      var _target$getValuesSync3 = target.getValuesSync({\n        validate: false,\n        rowIds: [row.id]\n      }),\n          values = _target$getValuesSync3.values;\n\n      var settleAmt = Number(values[0].settleAmt);\n      var invoicedAmt = Number(values[0].invoicedAmt);\n      var invoiceAmt = Number(value);\n\n      if (isNaN(settleAmt) || isNaN(invoicedAmt) || isNaN(invoiceAmt)) {\n        callback();\n        return;\n      }\n\n      if (invoiceAmt + invoicedAmt > settleAmt) {\n        callback(false, '开票金额不能大于未开票金额！');\n      } else {\n        callback(true);\n      }\n    }\n  }\n};",null]}