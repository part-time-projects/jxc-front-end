{"remainingRequest":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js!D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ideaworkspace\\jxc-front-end\\src\\components\\Ellipsis\\Ellipsis.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ideaworkspace\\jxc-front-end\\src\\components\\Ellipsis\\Ellipsis.vue","mtime":1648374777508},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1648365068269},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":1648364957239}],"contextDependencies":[],"result":["import { cutStrByFullLength, getStrFullLength } from '@/components/_util/StringUtil';\nexport default {\n  name: 'Ellipsis',\n  props: {\n    prefixCls: {\n      type: String,\n      default: 'ant-pro-ellipsis'\n    },\n    tooltip: {\n      type: Boolean,\n      default: true\n    },\n    length: {\n      type: Number,\n      default: 25\n    },\n    lines: {\n      type: Number,\n      default: 1\n    },\n    fullWidthRecognition: {\n      type: Boolean,\n      default: false\n    }\n  },\n  methods: {},\n  render: function render() {\n    var h = arguments[0];\n    var _this$$props = this.$props,\n        tooltip = _this$$props.tooltip,\n        length = _this$$props.length;\n    var text = ''; // 处理没有default插槽时的特殊情况\n\n    if (this.$slots.default) {\n      text = this.$slots.default.map(function (vNode) {\n        return vNode.text;\n      }).join('');\n    } // 判断是否显示 tooltip\n\n\n    if (tooltip && getStrFullLength(text) > length) {\n      return h(\"a-tooltip\", [h(\"template\", {\n        \"slot\": \"title\"\n      }, [text]), h(\"span\", [cutStrByFullLength(text, this.length) + '…'])]);\n    } else {\n      return h(\"span\", [text]);\n    }\n  }\n};",{"version":3,"sources":["Ellipsis.vue"],"names":[],"mappings":"AACA,SAAA,kBAAA,EAAA,gBAAA,QAAA,+BAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KADA;AAKA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KALA;AASA,IAAA,MAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KATA;AAaA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAbA;AAiBA,IAAA,oBAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA;AAjBA,GAFA;AAwBA,EAAA,OAAA,EAAA,EAxBA;AAyBA,EAAA,MAzBA,oBAyBA;AAAA;AAAA,uBACA,KAAA,MADA;AAAA,QACA,OADA,gBACA,OADA;AAAA,QACA,MADA,gBACA,MADA;AAEA,QAAA,IAAA,GAAA,EAAA,CAFA,CAGA;;AACA,QAAA,KAAA,MAAA,CAAA,OAAA,EAAA;AACA,MAAA,IAAA,GAAA,KAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,UAAA,KAAA;AAAA,eAAA,KAAA,CAAA,IAAA;AAAA,OAAA,EAAA,IAAA,CAAA,EAAA,CAAA;AACA,KANA,CAOA;;;AACA,QAAA,OAAA,IAAA,gBAAA,CAAA,IAAA,CAAA,GAAA,MAAA,EAAA;AACA;AAAA,gBAEA;AAFA,UAEA,IAFA,eAGA,kBAAA,CAAA,IAAA,EAAA,KAAA,MAAA,CAAA,GAAA,GAHA;AAMA,KAPA,MAOA;AACA,wBAAA,IAAA;AACA;AACA;AA3CA,CAAA","sourcesContent":["<script>\r\n  import { cutStrByFullLength, getStrFullLength } from '@/components/_util/StringUtil'\r\n\r\n  export default {\r\n    name: 'Ellipsis',\r\n    props: {\r\n      prefixCls: {\r\n        type: String,\r\n        default: 'ant-pro-ellipsis'\r\n      },\r\n      tooltip: {\r\n        type: Boolean,\r\n        default: true,\r\n      },\r\n      length: {\r\n        type: Number,\r\n        default: 25,\r\n      },\r\n      lines: {\r\n        type: Number,\r\n        default: 1\r\n      },\r\n      fullWidthRecognition: {\r\n        type: Boolean,\r\n        default: false\r\n      }\r\n    },\r\n    methods: {},\r\n    render() {\r\n      const { tooltip, length } = this.$props\r\n      let text = ''\r\n      // 处理没有default插槽时的特殊情况\r\n      if (this.$slots.default) {\r\n        text = this.$slots.default.map(vNode => vNode.text).join('')\r\n      }\r\n      // 判断是否显示 tooltip\r\n      if (tooltip && getStrFullLength(text) > length) {\r\n        return (\r\n          <a-tooltip>\r\n            <template slot=\"title\">{text}</template>\r\n            <span>{cutStrByFullLength(text, this.length) + '…'}</span>\r\n          </a-tooltip>\r\n        )\r\n      } else {\r\n        return (<span>{text}</span>)\r\n      }\r\n    }\r\n  }\r\n</script>"],"sourceRoot":"src/components/Ellipsis"}]}