{"remainingRequest":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js!D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ideaworkspace\\jxc-front-end\\src\\views\\system\\modules\\SysPositionModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ideaworkspace\\jxc-front-end\\src\\views\\system\\modules\\SysPositionModal.vue","mtime":1648374778162},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1648365068269},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":1648364957239}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport pick from 'lodash.pick';\nimport { httpAction } from '@/api/manage';\nimport { duplicateCheck } from '@/api/api';\nimport JDictSelectTag from '@/components/dict/JDictSelectTag';\nvar validatorCodeTimer = null;\nexport default {\n  name: 'SysPositionModal',\n  components: {\n    JDictSelectTag: JDictSelectTag\n  },\n  data: function data() {\n    var _this = this;\n\n    return {\n      title: '操作',\n      visible: false,\n      model: {},\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 5\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      },\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      validatorRules: {\n        code: {\n          rules: [{\n            required: true,\n            message: '请输入职务编码'\n          }, {\n            validator: function validator(rule, value, callback) {\n              // 函数消抖的简单实现，防止一段时间内发送多次请求\n              if (validatorCodeTimer) {\n                // 停止上次开启的定时器\n                clearTimeout(validatorCodeTimer);\n              }\n\n              validatorCodeTimer = setTimeout(function () {\n                duplicateCheck({\n                  tableName: 'sys_position',\n                  fieldName: 'code',\n                  fieldVal: value,\n                  dataId: _this.model.id\n                }).then(function (res) {\n                  if (res.success) {\n                    callback();\n                  } else {\n                    callback(res.message);\n                  }\n                }).catch(console.error);\n              }, 300);\n            }\n          }]\n        },\n        name: {\n          rules: [{\n            required: true,\n            message: '请输入职务名称'\n          }]\n        },\n        postRank: {\n          rules: [{\n            required: true,\n            message: '请选择职级'\n          }]\n        }\n      },\n      url: {\n        add: '/sys/position/add',\n        edit: '/sys/position/edit'\n      }\n    };\n  },\n  created: function created() {},\n  methods: {\n    add: function add() {\n      this.edit({});\n    },\n    edit: function edit(record) {\n      var _this2 = this;\n\n      this.form.resetFields();\n      this.model = Object.assign({}, record);\n      this.visible = true;\n      this.$nextTick(function () {\n        _this2.form.setFieldsValue(pick(_this2.model, 'code', 'name', 'postRank' // 'companyId'\n        ));\n      });\n    },\n    close: function close() {\n      this.$emit('close');\n      this.visible = false;\n    },\n    handleOk: function handleOk() {\n      var _this3 = this;\n\n      var that = this; // 触发表单验证\n\n      this.form.validateFields(function (err, values) {\n        if (!err) {\n          that.confirmLoading = true;\n          var httpurl = '';\n          var method = '';\n\n          if (!_this3.model.id) {\n            httpurl += _this3.url.add;\n            method = 'post';\n          } else {\n            httpurl += _this3.url.edit;\n            method = 'put';\n          }\n\n          var formData = Object.assign(_this3.model, values);\n          httpAction(httpurl, formData, method).then(function (res) {\n            if (res.success) {\n              that.$message.success(res.message);\n              that.$emit('ok');\n            } else {\n              that.$message.warning(res.message);\n            }\n          }).finally(function () {\n            that.confirmLoading = false;\n            that.close();\n          });\n        }\n      });\n    },\n    handleCancel: function handleCancel() {\n      this.close();\n    }\n  }\n};",{"version":3,"sources":["SysPositionModal.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <a-modal\r\n    :title=\"title\"\r\n    :width=\"800\"\r\n    :visible=\"visible\"\r\n    :maskClosable=\"false\"\r\n    :confirmLoading=\"confirmLoading\"\r\n    @ok=\"handleOk\"\r\n    @cancel=\"handleCancel\"\r\n    cancelText=\"关闭\">\r\n\r\n    <a-spin :spinning=\"confirmLoading\">\r\n      <a-form :form=\"form\">\r\n\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"职务编码\">\r\n          <a-input placeholder=\"请输入职务编码\" v-decorator=\"['code', validatorRules.code]\"/>\r\n        </a-form-item>\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"职务名称\">\r\n          <a-input placeholder=\"请输入职务名称\" v-decorator=\"['name', validatorRules.name]\"/>\r\n        </a-form-item>\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"职级\"\r\n        >\r\n          <j-dict-select-tag\r\n            placeholder=\"请选择职级\"\r\n            :triggerChange=\"true\"\r\n            dictCode=\"position_rank\"\r\n            v-decorator=\"['postRank', validatorRules.postRank]\"\r\n          />\r\n        </a-form-item>\r\n        <!--<a-form-item-->\r\n        <!--  :labelCol=\"labelCol\"-->\r\n        <!--  :wrapperCol=\"wrapperCol\"-->\r\n        <!--  label=\"公司id\">-->\r\n        <!--  <a-input placeholder=\"请输入公司id\" v-decorator=\"['companyId', {}]\"/>-->\r\n        <!--</a-form-item>-->\r\n\r\n      </a-form>\r\n    </a-spin>\r\n  </a-modal>\r\n</template>\r\n\r\n<script>\r\n  import pick from 'lodash.pick'\r\n  import { httpAction } from '@/api/manage'\r\n  import { duplicateCheck } from '@/api/api'\r\n  import JDictSelectTag from '@/components/dict/JDictSelectTag'\r\n\r\n  let validatorCodeTimer = null\r\n\r\n  export default {\r\n    name: 'SysPositionModal',\r\n    components: { JDictSelectTag },\r\n    data() {\r\n      return {\r\n        title: '操作',\r\n        visible: false,\r\n        model: {},\r\n        labelCol: {\r\n          xs: { span: 24 },\r\n          sm: { span: 5 },\r\n        },\r\n        wrapperCol: {\r\n          xs: { span: 24 },\r\n          sm: { span: 16 },\r\n        },\r\n        confirmLoading: false,\r\n        form: this.$form.createForm(this),\r\n        validatorRules: {\r\n          code: {\r\n            rules: [\r\n              { required: true, message: '请输入职务编码' },\r\n              {\r\n                validator: (rule, value, callback) => {\r\n                  // 函数消抖的简单实现，防止一段时间内发送多次请求\r\n                  if (validatorCodeTimer) {\r\n                    // 停止上次开启的定时器\r\n                    clearTimeout(validatorCodeTimer)\r\n                  }\r\n                  validatorCodeTimer = setTimeout(() => {\r\n                    duplicateCheck({\r\n                      tableName: 'sys_position',\r\n                      fieldName: 'code',\r\n                      fieldVal: value,\r\n                      dataId: this.model.id\r\n                    }).then((res) => {\r\n                      if (res.success) {\r\n                        callback()\r\n                      } else {\r\n                        callback(res.message)\r\n                      }\r\n                    }).catch(console.error)\r\n                  }, 300)\r\n                }\r\n              }\r\n            ]\r\n          },\r\n          name: { rules: [{ required: true, message: '请输入职务名称' }] },\r\n          postRank: { rules: [{ required: true, message: '请选择职级' }] },\r\n        },\r\n        url: {\r\n          add: '/sys/position/add',\r\n          edit: '/sys/position/edit',\r\n        },\r\n      }\r\n    },\r\n    created() {\r\n    },\r\n    methods: {\r\n      add() {\r\n        this.edit({})\r\n      },\r\n      edit(record) {\r\n        this.form.resetFields()\r\n        this.model = Object.assign({}, record)\r\n        this.visible = true\r\n        this.$nextTick(() => {\r\n          this.form.setFieldsValue(pick(this.model,\r\n            'code',\r\n            'name',\r\n            'postRank',\r\n            // 'companyId'\r\n          ))\r\n        })\r\n      },\r\n      close() {\r\n        this.$emit('close')\r\n        this.visible = false\r\n      },\r\n      handleOk() {\r\n        const that = this\r\n        // 触发表单验证\r\n        this.form.validateFields((err, values) => {\r\n          if (!err) {\r\n            that.confirmLoading = true\r\n            let httpurl = ''\r\n            let method = ''\r\n            if (!this.model.id) {\r\n              httpurl += this.url.add\r\n              method = 'post'\r\n            } else {\r\n              httpurl += this.url.edit\r\n              method = 'put'\r\n            }\r\n\r\n            let formData = Object.assign(this.model, values)\r\n            httpAction(httpurl, formData, method).then((res) => {\r\n              if (res.success) {\r\n                that.$message.success(res.message)\r\n                that.$emit('ok')\r\n              } else {\r\n                that.$message.warning(res.message)\r\n              }\r\n            }).finally(() => {\r\n              that.confirmLoading = false\r\n              that.close()\r\n            })\r\n          }\r\n        })\r\n      },\r\n      handleCancel() {\r\n        this.close()\r\n      },\r\n\r\n\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n\r\n</style>"],"sourceRoot":"src/views/system/modules"}]}