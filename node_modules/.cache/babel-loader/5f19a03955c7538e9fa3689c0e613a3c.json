{"remainingRequest":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js!D:\\ideaworkspace\\jxc-front-end\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\ideaworkspace\\jxc-front-end\\src\\views\\erp\\mixins\\billModalMixin.js","dependencies":[{"path":"D:\\ideaworkspace\\jxc-front-end\\src\\views\\erp\\mixins\\billModalMixin.js","mtime":1648374777635},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1648365068269},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1648365119872}],"contextDependencies":[],"result":["import { VALIDATE_NO_PASSED, validateFormAndTables } from '@/utils/JEditableTableUtil';\nimport { putAction } from '@/api/manage';\nexport var billModalMixin = {\n  data: function data() {\n    return {\n      action: '',\n      spans: {\n        labelCol1: {\n          span: 2\n        },\n        wrapperCol1: {\n          span: 22\n        },\n        //1_5: 分为1.5列（相当于占了2/3）\n        labelCol1_5: {\n          span: 3\n        },\n        wrapperCol1_5: {\n          span: 21\n        },\n        labelCol2: {\n          span: 4\n        },\n        wrapperCol2: {\n          span: 20\n        },\n        labelCol3: {\n          span: 6\n        },\n        wrapperCol3: {\n          span: 18\n        },\n        labelCol6: {\n          span: 12\n        },\n        wrapperCol6: {\n          span: 12\n        }\n      }\n    };\n  },\n  computed: {\n    readOnly: function readOnly() {\n      return this.action !== \"add\" && this.action !== \"edit\";\n    }\n  },\n  methods: {\n    onEntryAdded: function onEntryAdded(event) {\n      var row = event.row,\n          target = event.target;\n\n      var _target$getValuesSync = target.getValuesSync({\n        validate: false\n      }),\n          values = _target$getValuesSync.values;\n\n      var maxEntryNo = 0;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = values[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var val = _step.value;\n          var entryNo = Number(val['entryNo']);\n          if (!isNaN(entryNo) && entryNo > maxEntryNo) maxEntryNo = entryNo;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      maxEntryNo += this.entryNoStep || 10;\n      target.setValues([{\n        rowKey: row.id,\n        values: {\n          entryNo: maxEntryNo\n        }\n      }]);\n    },\n    handleSave: function handleSave() {\n      this.handleOk();\n    },\n    handleSubmit: function handleSubmit() {\n      var _this = this;\n\n      //处理状态=编辑完成\n      this.form.setFieldsValue({\n        billProcStatus: '13'\n      }); //出错时要恢复billProcStatus为\"12\"，所以下面未直接调用handleSave()！\n\n      /** 触发表单验证 */\n\n      this.getAllTable().then(function (tables) {\n        /** 一次性验证主表和所有的次表 */\n        return validateFormAndTables(_this.form, tables);\n      }).then(function (allValues) {\n        if (typeof _this.classifyIntoFormData !== 'function') {\n          throw _this.throwNotFunction('classifyIntoFormData');\n        }\n\n        var formData = _this.classifyIntoFormData(allValues); // 发起请求\n\n\n        return _this.request(formData);\n      }).catch(function (e) {\n        //处理状态=编辑中\n        _this.form.setFieldsValue({\n          billProcStatus: '12'\n        });\n\n        if (e.error === VALIDATE_NO_PASSED) {\n          // 如果有未通过表单验证的子表，就自动跳转到它所在的tab\n          _this.activeKey = e.index == null ? _this.activeKey : _this.refKeys[e.index];\n        } else {\n          console.error(e);\n        }\n      });\n    },\n    handleApproved: function handleApproved() {\n      var that = this;\n      putAction(that.url.approve, {\n        id: that.model.id\n      }).then(function (res) {\n        if (res.success) {\n          that.$message.success(res.message);\n          that.$emit('ok');\n          that.close();\n        } else {\n          that.$message.warning(res.message);\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["D:/ideaworkspace/jxc-front-end/src/views/erp/mixins/billModalMixin.js"],"names":["VALIDATE_NO_PASSED","validateFormAndTables","putAction","billModalMixin","data","action","spans","labelCol1","span","wrapperCol1","labelCol1_5","wrapperCol1_5","labelCol2","wrapperCol2","labelCol3","wrapperCol3","labelCol6","wrapperCol6","computed","readOnly","methods","onEntryAdded","event","row","target","getValuesSync","validate","values","maxEntryNo","val","entryNo","Number","isNaN","entryNoStep","setValues","rowKey","id","handleSave","handleOk","handleSubmit","form","setFieldsValue","billProcStatus","getAllTable","then","tables","allValues","classifyIntoFormData","throwNotFunction","formData","request","catch","e","error","activeKey","index","refKeys","console","handleApproved","that","url","approve","model","res","success","$message","message","$emit","close","warning"],"mappings":"AAAA,SAASA,kBAAT,EAA6BC,qBAA7B,QAA0D,4BAA1D;AACA,SAASC,SAAT,QAA0B,cAA1B;AAEA,OAAO,IAAMC,cAAc,GAAG;AAC5BC,EAAAA,IAD4B,kBACrB;AACL,WAAO;AACLC,MAAAA,MAAM,EAAE,EADH;AAELC,MAAAA,KAAK,EAAE;AACLC,QAAAA,SAAS,EAAE;AAACC,UAAAA,IAAI,EAAE;AAAP,SADN;AAELC,QAAAA,WAAW,EAAE;AAACD,UAAAA,IAAI,EAAE;AAAP,SAFR;AAGL;AACAE,QAAAA,WAAW,EAAE;AAAEF,UAAAA,IAAI,EAAE;AAAR,SAJR;AAKLG,QAAAA,aAAa,EAAE;AAAEH,UAAAA,IAAI,EAAE;AAAR,SALV;AAMLI,QAAAA,SAAS,EAAE;AAACJ,UAAAA,IAAI,EAAE;AAAP,SANN;AAOLK,QAAAA,WAAW,EAAE;AAACL,UAAAA,IAAI,EAAE;AAAP,SAPR;AAQLM,QAAAA,SAAS,EAAE;AAACN,UAAAA,IAAI,EAAE;AAAP,SARN;AASLO,QAAAA,WAAW,EAAE;AAACP,UAAAA,IAAI,EAAE;AAAP,SATR;AAULQ,QAAAA,SAAS,EAAE;AAACR,UAAAA,IAAI,EAAE;AAAP,SAVN;AAWLS,QAAAA,WAAW,EAAE;AAACT,UAAAA,IAAI,EAAE;AAAP;AAXR;AAFF,KAAP;AAgBD,GAlB2B;AAoB5BU,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,EAAE,oBAAW;AACnB,aAAO,KAAKd,MAAL,KAAgB,KAAhB,IAAyB,KAAKA,MAAL,KAAgB,MAAhD;AACD;AAHO,GApBkB;AA0B5Be,EAAAA,OAAO,EAAE;AACPC,IAAAA,YADO,wBACMC,KADN,EACa;AAAA,UACXC,GADW,GACID,KADJ,CACXC,GADW;AAAA,UACNC,MADM,GACIF,KADJ,CACNE,MADM;;AAAA,kCAEHA,MAAM,CAACC,aAAP,CAAqB;AAACC,QAAAA,QAAQ,EAAE;AAAX,OAArB,CAFG;AAAA,UAEbC,MAFa,yBAEbA,MAFa;;AAGlB,UAAIC,UAAU,GAAG,CAAjB;AAHkB;AAAA;AAAA;;AAAA;AAIlB,6BAAgBD,MAAhB,8HAAwB;AAAA,cAAfE,GAAe;AACtB,cAAIC,OAAO,GAAGC,MAAM,CAACF,GAAG,CAAC,SAAD,CAAJ,CAApB;AACA,cAAI,CAACG,KAAK,CAACF,OAAD,CAAN,IAAmBA,OAAO,GAAGF,UAAjC,EAA6CA,UAAU,GAAGE,OAAb;AAC9C;AAPiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASlBF,MAAAA,UAAU,IAAI,KAAKK,WAAL,IAAoB,EAAlC;AACAT,MAAAA,MAAM,CAACU,SAAP,CAAiB,CAAC;AAACC,QAAAA,MAAM,EAAEZ,GAAG,CAACa,EAAb;AAAiBT,QAAAA,MAAM,EAAE;AAACG,UAAAA,OAAO,EAAEF;AAAV;AAAzB,OAAD,CAAjB;AACD,KAZM;AAePS,IAAAA,UAfO,wBAeM;AACX,WAAKC,QAAL;AACD,KAjBM;AAmBPC,IAAAA,YAnBO,0BAmBQ;AAAA;;AACb;AACA,WAAKC,IAAL,CAAUC,cAAV,CAAyB;AAACC,QAAAA,cAAc,EAAC;AAAhB,OAAzB,EAFa,CAIb;;AAEA;;AACA,WAAKC,WAAL,GAAmBC,IAAnB,CAAwB,UAAAC,MAAM,EAAI;AAChC;AACA,eAAO5C,qBAAqB,CAAC,KAAI,CAACuC,IAAN,EAAYK,MAAZ,CAA5B;AACD,OAHD,EAGGD,IAHH,CAGQ,UAAAE,SAAS,EAAI;AACnB,YAAI,OAAO,KAAI,CAACC,oBAAZ,KAAqC,UAAzC,EAAqD;AACnD,gBAAM,KAAI,CAACC,gBAAL,CAAsB,sBAAtB,CAAN;AACD;;AACD,YAAIC,QAAQ,GAAG,KAAI,CAACF,oBAAL,CAA0BD,SAA1B,CAAf,CAJmB,CAKnB;;;AACA,eAAO,KAAI,CAACI,OAAL,CAAaD,QAAb,CAAP;AACD,OAVD,EAUGE,KAVH,CAUS,UAAAC,CAAC,EAAI;AACZ;AACA,QAAA,KAAI,CAACZ,IAAL,CAAUC,cAAV,CAAyB;AAACC,UAAAA,cAAc,EAAC;AAAhB,SAAzB;;AAEA,YAAIU,CAAC,CAACC,KAAF,KAAYrD,kBAAhB,EAAoC;AAClC;AACA,UAAA,KAAI,CAACsD,SAAL,GAAiBF,CAAC,CAACG,KAAF,IAAW,IAAX,GAAkB,KAAI,CAACD,SAAvB,GAAmC,KAAI,CAACE,OAAL,CAAaJ,CAAC,CAACG,KAAf,CAApD;AACD,SAHD,MAGO;AACLE,UAAAA,OAAO,CAACJ,KAAR,CAAcD,CAAd;AACD;AACF,OApBD;AAqBD,KA/CM;AAiDPM,IAAAA,cAjDO,4BAiDU;AACf,UAAMC,IAAI,GAAG,IAAb;AACAzD,MAAAA,SAAS,CAACyD,IAAI,CAACC,GAAL,CAASC,OAAV,EAAmB;AAACzB,QAAAA,EAAE,EAAEuB,IAAI,CAACG,KAAL,CAAW1B;AAAhB,OAAnB,CAAT,CAAiDQ,IAAjD,CAAsD,UAACmB,GAAD,EAAS;AAC7D,YAAIA,GAAG,CAACC,OAAR,EAAiB;AACfL,UAAAA,IAAI,CAACM,QAAL,CAAcD,OAAd,CAAsBD,GAAG,CAACG,OAA1B;AACAP,UAAAA,IAAI,CAACQ,KAAL,CAAW,IAAX;AACAR,UAAAA,IAAI,CAACS,KAAL;AACD,SAJD,MAIO;AACLT,UAAAA,IAAI,CAACM,QAAL,CAAcI,OAAd,CAAsBN,GAAG,CAACG,OAA1B;AACD;AACF,OARD;AASD;AA5DM;AA1BmB,CAAvB","sourcesContent":["import { VALIDATE_NO_PASSED, validateFormAndTables } from '@/utils/JEditableTableUtil'\r\nimport { putAction } from '@/api/manage'\r\n\r\nexport const billModalMixin = {\r\n  data() {\r\n    return {\r\n      action: '',\r\n      spans: {\r\n        labelCol1: {span: 2},\r\n        wrapperCol1: {span: 22},\r\n        //1_5: 分为1.5列（相当于占了2/3）\r\n        labelCol1_5: { span: 3 },\r\n        wrapperCol1_5: { span: 21 },\r\n        labelCol2: {span: 4},\r\n        wrapperCol2: {span: 20},\r\n        labelCol3: {span: 6},\r\n        wrapperCol3: {span: 18},\r\n        labelCol6: {span: 12},\r\n        wrapperCol6: {span: 12}\r\n      },\r\n    };\r\n  },\r\n\r\n  computed: {\r\n    readOnly: function() {\r\n      return this.action !== \"add\" && this.action !== \"edit\";\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    onEntryAdded(event) {\r\n      const {row, target} = event\r\n      let {values} = target.getValuesSync({validate: false});\r\n      let maxEntryNo = 0;\r\n      for (let val of values) {\r\n        let entryNo = Number(val['entryNo']);\r\n        if (!isNaN(entryNo) && entryNo > maxEntryNo) maxEntryNo = entryNo;\r\n      }\r\n\r\n      maxEntryNo += this.entryNoStep || 10;\r\n      target.setValues([{rowKey: row.id, values: {entryNo: maxEntryNo}}]);\r\n    },\r\n\r\n\r\n    handleSave() {\r\n      this.handleOk()\r\n    },\r\n\r\n    handleSubmit() {\r\n      //处理状态=编辑完成\r\n      this.form.setFieldsValue({billProcStatus:'13'})\r\n\r\n      //出错时要恢复billProcStatus为\"12\"，所以下面未直接调用handleSave()！\r\n\r\n      /** 触发表单验证 */\r\n      this.getAllTable().then(tables => {\r\n        /** 一次性验证主表和所有的次表 */\r\n        return validateFormAndTables(this.form, tables)\r\n      }).then(allValues => {\r\n        if (typeof this.classifyIntoFormData !== 'function') {\r\n          throw this.throwNotFunction('classifyIntoFormData')\r\n        }\r\n        let formData = this.classifyIntoFormData(allValues)\r\n        // 发起请求\r\n        return this.request(formData)\r\n      }).catch(e => {\r\n        //处理状态=编辑中\r\n        this.form.setFieldsValue({billProcStatus:'12'})\r\n\r\n        if (e.error === VALIDATE_NO_PASSED) {\r\n          // 如果有未通过表单验证的子表，就自动跳转到它所在的tab\r\n          this.activeKey = e.index == null ? this.activeKey : this.refKeys[e.index]\r\n        } else {\r\n          console.error(e)\r\n        }\r\n      })\r\n    },\r\n\r\n    handleApproved() {\r\n      const that = this;\r\n      putAction(that.url.approve, {id: that.model.id}).then((res) => {\r\n        if (res.success) {\r\n          that.$message.success(res.message);\r\n          that.$emit('ok')\r\n          that.close()\r\n        } else {\r\n          that.$message.warning(res.message);\r\n        }\r\n      })\r\n    },\r\n\r\n  }\r\n}"]}]}