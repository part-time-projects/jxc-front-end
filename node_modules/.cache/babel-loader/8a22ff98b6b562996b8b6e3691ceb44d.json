{"remainingRequest":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\thread-loader\\dist\\cjs.js!D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js!D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ideaworkspace\\jxc-front-end\\src\\components\\jeecg\\JAreaLinkage.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ideaworkspace\\jxc-front-end\\src\\components\\jeecg\\JAreaLinkage.vue","mtime":1648374777528},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1648365139913},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1648365068269},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":1648364957239}],"contextDependencies":[],"result":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { pcaa } from 'area-data';\nimport Area from '@/components/_util/Area';\nexport default {\n  name: 'JAreaLinkage',\n  props: {\n    value: {\n      type: String,\n      required: false\n    },\n    // 组件的类型，可选值：\n    // select 下拉样式\n    // cascader 级联样式（默认）\n    type: {\n      type: String,\n      default: 'cascader'\n    },\n    width: {\n      type: String,\n      default: '100%'\n    }\n  },\n  data: function data() {\n    return {\n      pcaa: pcaa,\n      innerValue: [],\n      usedListeners: ['change'],\n      enums: {\n        type: ['cascader', 'select']\n      },\n      reloading: false,\n      areaData: ''\n    };\n  },\n  computed: {\n    _listeners: function _listeners() {\n      var listeners = _objectSpread({}, this.$listeners); // 去掉已使用的事件，防止冲突\n\n\n      this.usedListeners.forEach(function (key) {\n        delete listeners[key];\n      });\n      return listeners;\n    },\n    _type: function _type() {\n      if (this.enums.type.includes(this.type)) {\n        return this.type;\n      } else {\n        console.error(\"JAreaLinkage\\u7684type\\u5C5E\\u6027\\u53EA\\u80FD\\u63A5\\u6536\\u6307\\u5B9A\\u7684\\u503C\\uFF08\".concat(this.enums.type.join('|'), \"\\uFF09\"));\n        return this.enums.type[0];\n      }\n    }\n  },\n  watch: {\n    value: {\n      immediate: true,\n      handler: function handler() {\n        this.loadDataByValue(this.value);\n      }\n    }\n  },\n  created: function created() {\n    this.initAreaData();\n  },\n  methods: {\n    /** 通过 value 反推 options */\n    loadDataByValue: function loadDataByValue(value) {\n      var _this = this;\n\n      if (!value || value.length == 0) {\n        this.innerValue = [];\n        this.reloading = true;\n        setTimeout(function () {\n          _this.reloading = false;\n        }, 100);\n      } else {\n        this.initAreaData();\n        var arr = this.areaData.getRealCode(value);\n        this.innerValue = arr;\n      }\n    },\n\n    /** 通过地区code获取子级 */\n    loadDataByCode: function loadDataByCode(value) {\n      var options = [];\n      var data = pcaa[value];\n\n      if (data) {\n        for (var key in data) {\n          if (data.hasOwnProperty(key)) {\n            options.push({\n              value: key,\n              label: data[key]\n            });\n          }\n        }\n\n        return options;\n      } else {\n        return [];\n      }\n    },\n\n    /** 判断是否有子节点 */\n    hasChildren: function hasChildren(options) {\n      var _this2 = this;\n\n      options.forEach(function (option) {\n        var data = _this2.loadDataByCode(option.value);\n\n        option.isLeaf = data.length === 0;\n      });\n    },\n    handleChange: function handleChange(values) {\n      var value = values[values.length - 1];\n      this.$emit('change', value);\n    },\n    initAreaData: function initAreaData() {\n      if (!this.areaData) {\n        this.areaData = new Area();\n      }\n    }\n  },\n  model: {\n    prop: 'value',\n    event: 'change'\n  }\n};",null]}