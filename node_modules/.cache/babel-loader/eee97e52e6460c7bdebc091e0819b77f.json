{"remainingRequest":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js!D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ideaworkspace\\jxc-front-end\\src\\views\\erp\\bas\\modules\\BasCurrencyModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ideaworkspace\\jxc-front-end\\src\\views\\erp\\bas\\modules\\BasCurrencyModal.vue","mtime":1648374777609},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1648365068269},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":1648364957239}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { httpAction } from '@/api/manage';\nimport pick from 'lodash.pick';\nimport { validateDuplicateValue } from '@/utils/util';\nimport JDate from '@/components/jeecg/JDate';\nimport JDictSelectTag from \"@/components/dict/JDictSelectTag\";\nexport default {\n  name: \"BasCurrencyModal\",\n  components: {\n    JDate: JDate,\n    JDictSelectTag: JDictSelectTag\n  },\n  data: function data() {\n    return {\n      action: \"\",\n      form: this.$form.createForm(this),\n      title: \"操作\",\n      width: 600,\n      visible: false,\n      model: {},\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 6\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 17\n        }\n      },\n      confirmLoading: false,\n      validatorRules: {\n        code: {\n          rules: [{\n            required: true,\n            message: '请输入代码!'\n          }]\n        },\n        name: {\n          rules: [{\n            required: true,\n            message: '请输入名称!'\n          }]\n        },\n        isFunctional: {\n          rules: [{\n            required: true,\n            message: '请输入是否本币!'\n          }]\n        },\n        exchangeRate: {\n          rules: []\n        },\n        isEnabled: {\n          rules: [{\n            required: true,\n            message: '请输入是否启用!'\n          }]\n        },\n        createBy: {\n          rules: []\n        },\n        createTime: {\n          rules: []\n        },\n        updateBy: {\n          rules: []\n        },\n        updateTime: {\n          rules: []\n        }\n      },\n      url: {\n        add: \"/bas/basCurrency/add\",\n        edit: \"/bas/basCurrency/edit\"\n      }\n    };\n  },\n  computed: {\n    readOnly: function readOnly() {\n      return this.action !== \"add\" && this.action !== \"edit\";\n    }\n  },\n  created: function created() {},\n  methods: {\n    add: function add() {\n      this.edit({});\n    },\n    edit: function edit(record) {\n      var _this = this;\n\n      this.form.resetFields();\n      this.model = Object.assign({}, record);\n      this.visible = true;\n      this.$nextTick(function () {\n        _this.form.setFieldsValue(pick(_this.model, 'code', 'name', 'isFunctional', 'exchangeRate', 'isEnabled', 'createBy', 'createTime', 'updateBy', 'updateTime'));\n      });\n    },\n    close: function close() {\n      this.$emit('close');\n      this.visible = false;\n    },\n    handleOk: function handleOk() {\n      var _this2 = this;\n\n      var that = this; // 触发表单验证\n\n      this.form.validateFields(function (err, values) {\n        if (!err) {\n          that.confirmLoading = true;\n          var httpurl = '';\n          var method = '';\n\n          if (!_this2.model.id) {\n            httpurl += _this2.url.add;\n            method = 'post';\n          } else {\n            httpurl += _this2.url.edit;\n            method = 'put';\n          }\n\n          var formData = Object.assign(_this2.model, values);\n          console.log(\"表单提交数据\", formData);\n          httpAction(httpurl, formData, method).then(function (res) {\n            if (res.success) {\n              that.$message.success(res.message);\n              that.$emit('ok');\n            } else {\n              that.$message.warning(res.message);\n            }\n          }).finally(function () {\n            that.confirmLoading = false;\n            that.close();\n          });\n        }\n      });\n    },\n    handleCancel: function handleCancel() {\n      this.close();\n    },\n    popupCallback: function popupCallback(row) {\n      this.form.setFieldsValue(pick(row, 'code', 'name', 'isFunctional', 'exchangeRate', 'isEnabled', 'createBy', 'createTime', 'updateBy', 'updateTime'));\n    }\n  }\n};",{"version":3,"sources":["BasCurrencyModal.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <a-drawer\r\n    :title=\"title\"\r\n    :width=\"width\"\r\n    placement=\"right\"\r\n    :closable=\"readOnly\"\r\n    @close=\"close\"\r\n    :visible=\"visible\">\r\n\r\n    <a-spin :spinning=\"confirmLoading\">\r\n      <a-form :form=\"form\">\r\n        <a-form-item label=\"代码\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\r\n          <a-input :readOnly=\"action!=='add'\" v-decorator=\"[ 'code', validatorRules.code]\" placeholder=\"请输入代码\"></a-input>\r\n        </a-form-item>\r\n        <a-form-item label=\"名称\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\r\n          <a-input :readOnly=\"readOnly\" v-decorator=\"[ 'name', validatorRules.name]\" placeholder=\"请输入名称\"></a-input>\r\n        </a-form-item>\r\n        <a-form-item label=\"是否本币\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\r\n          <j-dict-select-tag :disabled=\"readOnly\" type=\"list\" v-decorator=\"['isFunctional', validatorRules.isFunctional]\" :trigger-change=\"true\" dictCode=\"yn\" placeholder=\"请选择是否本币\"/>\r\n        </a-form-item>\r\n        <a-form-item v-show=\"false\" label=\"汇率\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\r\n          <a-input-number :disabled=\"readOnly\" v-decorator=\"[ 'exchangeRate', validatorRules.exchangeRate]\" style=\"width: 100%\"/>\r\n        </a-form-item>\r\n        <a-form-item label=\"是否启用\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\r\n          <j-dict-select-tag :disabled=\"readOnly\" type=\"list\" v-decorator=\"['isEnabled', validatorRules.isEnabled]\" :trigger-change=\"true\" dictCode=\"yn\" placeholder=\"请选择是否启用\"/>\r\n        </a-form-item>\r\n        <a-form-item label=\"创建人\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\r\n          <j-dict-select-tag disabled type=\"list\" v-decorator=\"['createBy']\" :trigger-change=\"true\" dictCode=\"sys_user,realname,username\" />\r\n        </a-form-item>\r\n        <a-form-item label=\"创建时间\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\r\n          <j-date disabled v-decorator=\"[ 'createTime']\" :trigger-change=\"true\" style=\"width: 100%\"/>\r\n        </a-form-item>\r\n        <a-form-item label=\"修改人\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\r\n          <j-dict-select-tag disabled type=\"list\" v-decorator=\"['updateBy']\" :trigger-change=\"true\" dictCode=\"sys_user,realname,username\" />\r\n        </a-form-item>\r\n        <a-form-item label=\"修改时间\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\r\n          <j-date disabled v-decorator=\"[ 'updateTime']\" :trigger-change=\"true\" style=\"width: 100%\"/>\r\n        </a-form-item>\r\n      </a-form>\r\n    </a-spin>\r\n\r\n    <div v-if=\"!readOnly\">\r\n      <a-button type=\"primary\" @click=\"handleOk\">确定</a-button>\r\n      <a-button @click=\"handleCancel\">取消</a-button>\r\n    </div>\r\n  </a-drawer>\r\n</template>\r\n\r\n<script>\r\n\r\n  import { httpAction } from '@/api/manage'\r\n  import pick from 'lodash.pick'\r\n  import { validateDuplicateValue } from '@/utils/util'\r\n  import JDate from '@/components/jeecg/JDate'  \r\n  import JDictSelectTag from \"@/components/dict/JDictSelectTag\"\r\n  \r\n  export default {\r\n    name: \"BasCurrencyModal\",\r\n    components: { \r\n      JDate,\r\n      JDictSelectTag,\r\n    },\r\n    data () {\r\n      return {\r\n        action: \"\",\r\n        form: this.$form.createForm(this),\r\n        title:\"操作\",\r\n        width:600,\r\n        visible: false,\r\n        model: {},\r\n        labelCol: {\r\n          xs: { span: 24 },\r\n          sm: { span: 6 },\r\n        },\r\n        wrapperCol: {\r\n          xs: { span: 24 },\r\n          sm: { span: 17 },\r\n        },\r\n        confirmLoading: false,\r\n        validatorRules: {\r\n          code: {rules: [\r\n            {required: true, message: '请输入代码!'},\r\n          ]},\r\n          name: {rules: [\r\n            {required: true, message: '请输入名称!'},\r\n          ]},\r\n          isFunctional: {rules: [\r\n            {required: true, message: '请输入是否本币!'},\r\n          ]},\r\n          exchangeRate: {rules: [\r\n          ]},\r\n          isEnabled: {rules: [\r\n            {required: true, message: '请输入是否启用!'},\r\n          ]},\r\n          createBy: {rules: [\r\n          ]},\r\n          createTime: {rules: [\r\n          ]},\r\n          updateBy: {rules: [\r\n          ]},\r\n          updateTime: {rules: [\r\n          ]},\r\n        },\r\n        url: {\r\n          add: \"/bas/basCurrency/add\",\r\n          edit: \"/bas/basCurrency/edit\",\r\n        }\r\n      }\r\n    },\r\n\r\n    computed: {\r\n      readOnly: function() {\r\n        return this.action !== \"add\" && this.action !== \"edit\"\r\n      }\r\n    },\r\n\r\n    created () {\r\n    },\r\n\r\n    methods: {\r\n      add () {\r\n        this.edit({});\r\n      },\r\n      edit (record) {\r\n        this.form.resetFields();\r\n        this.model = Object.assign({}, record);\r\n        this.visible = true;\r\n        this.$nextTick(() => {\r\n          this.form.setFieldsValue(pick(this.model,'code','name','isFunctional','exchangeRate','isEnabled','createBy','createTime','updateBy','updateTime'))\r\n        })\r\n      },\r\n      close () {\r\n        this.$emit('close');\r\n        this.visible = false;\r\n      },\r\n      handleOk () {\r\n        const that = this;\r\n        // 触发表单验证\r\n        this.form.validateFields((err, values) => {\r\n          if (!err) {\r\n            that.confirmLoading = true;\r\n            let httpurl = '';\r\n            let method = '';\r\n            if(!this.model.id){\r\n              httpurl+=this.url.add;\r\n              method = 'post';\r\n            }else{\r\n              httpurl+=this.url.edit;\r\n               method = 'put';\r\n            }\r\n            let formData = Object.assign(this.model, values);\r\n            console.log(\"表单提交数据\",formData)\r\n            httpAction(httpurl,formData,method).then((res)=>{\r\n              if(res.success){\r\n                that.$message.success(res.message);\r\n                that.$emit('ok');\r\n              }else{\r\n                that.$message.warning(res.message);\r\n              }\r\n            }).finally(() => {\r\n              that.confirmLoading = false;\r\n              that.close();\r\n            })\r\n          }\r\n         \r\n        })\r\n      },\r\n      handleCancel () {\r\n        this.close()\r\n      },\r\n      popupCallback(row){\r\n        this.form.setFieldsValue(pick(row,'code','name','isFunctional','exchangeRate','isEnabled','createBy','createTime','updateBy','updateTime'))\r\n      }\r\n      \r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n/** Button按钮间距 */\r\n  .ant-btn {\r\n    margin-left: 30px;\r\n    margin-bottom: 30px;\r\n    float: right;\r\n  }\r\n\r\n.ant-row.ant-form-item {\r\n  margin-bottom: 12px;\r\n}\r\n</style>"],"sourceRoot":"src/views/erp/bas/modules"}]}