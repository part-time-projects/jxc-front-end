{"remainingRequest":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\thread-loader\\dist\\cjs.js!D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js!D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ideaworkspace\\jxc-front-end\\src\\components\\jeecg\\JSwitch.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ideaworkspace\\jxc-front-end\\src\\components\\jeecg\\JSwitch.vue","mtime":1648374777539},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1648365139913},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1648365068269},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":1648364957239}],"contextDependencies":[],"result":["//\n//\n//\nexport default {\n  name: 'JSwitch',\n  props: {\n    value: {\n      type: String,\n      required: false\n    },\n    disabled: {\n      type: Boolean,\n      required: false,\n      default: false\n    },\n    options: {\n      type: Array,\n      required: false,\n      default: function _default() {\n        return ['Y', 'N'];\n      }\n    }\n  },\n  data: function data() {\n    return {\n      checkStatus: false\n    };\n  },\n  watch: {\n    value: {\n      immediate: true,\n      handler: function handler(val) {\n        if (!val) {\n          this.checkStatus = false;\n          this.$emit('change', this.options[1]);\n        } else {\n          if (this.options[0] == val) {\n            this.checkStatus = true;\n          } else {\n            this.checkStatus = false;\n          }\n        }\n      }\n    }\n  },\n  methods: {\n    handleChange: function handleChange(checked) {\n      var flag = checked === false ? this.options[1] : this.options[0];\n      this.$emit('change', flag);\n    }\n  },\n  model: {\n    prop: 'value',\n    event: 'change'\n  }\n};",null]}