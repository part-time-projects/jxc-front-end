{"remainingRequest":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\thread-loader\\dist\\cjs.js!D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js!D:\\ideaworkspace\\jxc-front-end\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\ideaworkspace\\jxc-front-end\\src\\store\\modules\\enhance.js","dependencies":[{"path":"D:\\ideaworkspace\\jxc-front-end\\src\\store\\modules\\enhance.js","mtime":1648374777580},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1648365139913},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1648365068269},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1648365119872}],"contextDependencies":[],"result":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Vue from 'vue';\nvar enhance = {\n  state: {\n    enhanceJs: {}\n  },\n  mutations: {\n    ADD_TABLE_ENHANCE: function ADD_TABLE_ENHANCE(state, record) {\n      if (!state.enhanceJs) {\n        var obj = {};\n        var _arr = [];\n\n        _arr.push(_objectSpread({}, record));\n\n        obj[record.code] = _arr;\n        state.enhanceJs = obj;\n      } else {\n        if (!state.enhanceJs[record.code]) {\n          var _arr2 = [];\n\n          _arr2.push(_objectSpread({}, record));\n\n          state.enhanceJs[record.code] = _arr2;\n        }\n\n        state.enhanceJs[record.code].push(_objectSpread({}, record));\n      }\n\n      var arr = state.enhanceJs[record.code];\n\n      while (arr.length > 16) {\n        arr.shift();\n      }\n\n      Vue.ls.set('enhance_' + record['code'], arr);\n    }\n  },\n  actions: {\n    addEhanceRecord: function addEhanceRecord(_ref, record) {\n      var commit = _ref.commit;\n      commit('ADD_TABLE_ENHANCE', record);\n    }\n  }\n};\nexport default enhance;",null]}