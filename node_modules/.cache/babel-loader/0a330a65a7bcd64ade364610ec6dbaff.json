{"remainingRequest":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\thread-loader\\dist\\cjs.js!D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js!D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ideaworkspace\\jxc-front-end\\src\\components\\jeecg\\JInput.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ideaworkspace\\jxc-front-end\\src\\components\\jeecg\\JInput.vue","mtime":1648374777535},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1648365139913},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1648365068269},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":1648364957239}],"contextDependencies":[],"result":["//\n//\n//\n//\nvar JINPUT_QUERY_LIKE = 'like';\nvar JINPUT_QUERY_NE = 'ne';\nvar JINPUT_QUERY_GE = 'ge'; //大于等于\n\nvar JINPUT_QUERY_LE = 'le'; //小于等于\n\nexport default {\n  name: 'JInput',\n  props: {\n    value: {\n      type: String,\n      required: false\n    },\n    type: {\n      type: String,\n      required: false,\n      default: JINPUT_QUERY_LIKE\n    },\n    placeholder: {\n      type: String,\n      required: false,\n      default: ''\n    }\n  },\n  watch: {\n    value: {\n      immediate: true,\n      handler: function handler() {\n        this.initVal();\n      }\n    },\n    // update-begin author:sunjianlei date:20200225 for:当 type 变化的时候重新计算值 ------\n    type: function type() {\n      this.backValue({\n        target: {\n          value: this.inputVal\n        }\n      });\n    } // update-end author:sunjianlei date:20200225 for:当 type 变化的时候重新计算值 ------\n\n  },\n  model: {\n    prop: 'value',\n    event: 'change'\n  },\n  data: function data() {\n    return {\n      inputVal: ''\n    };\n  },\n  methods: {\n    initVal: function initVal() {\n      if (!this.value) {\n        this.inputVal = '';\n      } else {\n        var text = this.value;\n\n        switch (this.type) {\n          case JINPUT_QUERY_LIKE:\n            text = text.substring(1, text.length - 1);\n            break;\n\n          case JINPUT_QUERY_NE:\n            text = text.substring(1);\n            break;\n\n          case JINPUT_QUERY_GE:\n            text = text.substring(2);\n            break;\n\n          case JINPUT_QUERY_LE:\n            text = text.substring(2);\n            break;\n\n          default:\n        }\n\n        this.inputVal = text;\n      }\n    },\n    backValue: function backValue(e) {\n      var text = e.target.value;\n\n      switch (this.type) {\n        case JINPUT_QUERY_LIKE:\n          text = \"*\" + text + \"*\";\n          break;\n\n        case JINPUT_QUERY_NE:\n          text = \"!\" + text;\n          break;\n\n        case JINPUT_QUERY_GE:\n          text = \">=\" + text;\n          break;\n\n        case JINPUT_QUERY_LE:\n          text = \"<=\" + text;\n          break;\n\n        default:\n      }\n\n      this.$emit(\"change\", text);\n    }\n  }\n};",null]}