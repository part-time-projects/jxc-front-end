{"remainingRequest":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\thread-loader\\dist\\cjs.js!D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js!D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ideaworkspace\\jxc-front-end\\src\\components\\jeecg\\JDate.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ideaworkspace\\jxc-front-end\\src\\components\\jeecg\\JDate.vue","mtime":1648374777531},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1648365139913},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1648365068269},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":1648364957239}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport moment from 'moment';\nexport default {\n  name: 'JDate',\n  props: {\n    placeholder: {\n      type: String,\n      default: '',\n      required: false\n    },\n    value: {\n      type: String,\n      required: false\n    },\n    dateFormat: {\n      type: String,\n      default: 'YYYY-MM-DD',\n      required: false\n    },\n    //此属性可以被废弃了\n    triggerChange: {\n      type: Boolean,\n      required: false,\n      default: false\n    },\n    readOnly: {\n      type: Boolean,\n      required: false,\n      default: false\n    },\n    disabled: {\n      type: Boolean,\n      required: false,\n      default: false\n    },\n    showTime: {\n      type: Boolean,\n      required: false,\n      default: false\n    },\n    getCalendarContainer: {\n      type: Function,\n      default: function _default(node) {\n        return node.parentNode;\n      }\n    }\n  },\n  data: function data() {\n    var dateStr = this.value;\n    return {\n      decorator: \"\",\n      momVal: !dateStr ? null : moment(dateStr, this.dateFormat)\n    };\n  },\n  watch: {\n    value: function value(val) {\n      if (!val) {\n        this.momVal = null;\n      } else {\n        this.momVal = moment(val, this.dateFormat);\n      }\n    }\n  },\n  methods: {\n    moment: moment,\n    handleDateChange: function handleDateChange(mom, dateStr) {\n      this.$emit('change', dateStr);\n    }\n  },\n  //2.2新增 在组件内定义 指定父组件调用时候的传值属性和事件类型 这个牛逼\n  model: {\n    prop: 'value',\n    event: 'change'\n  }\n};",null]}