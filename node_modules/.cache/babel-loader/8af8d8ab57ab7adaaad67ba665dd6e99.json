{"remainingRequest":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js!D:\\ideaworkspace\\jxc-front-end\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\ideaworkspace\\jxc-front-end\\src\\components\\_util\\Area.js","dependencies":[{"path":"D:\\ideaworkspace\\jxc-front-end\\src\\components\\_util\\Area.js","mtime":1648374777513},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1648365068269},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1648365119872}],"contextDependencies":[],"result":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport { pcaa } from 'area-data';\n/**\r\n * 省市区\r\n */\n\nvar Area = /*#__PURE__*/function () {\n  /**\r\n   * 构造器\r\n   * @param express\r\n   */\n  function Area() {\n    _classCallCheck(this, Area);\n\n    var arr = [];\n    var province = pcaa['86'];\n    Object.keys(province).map(function (key) {\n      arr.push({\n        id: key,\n        text: province[key],\n        pid: '86'\n      });\n      var city = pcaa[key];\n      Object.keys(city).map(function (key2) {\n        arr.push({\n          id: key2,\n          text: city[key2],\n          pid: key\n        });\n        var qu = pcaa[key2];\n        Object.keys(qu).map(function (key3) {\n          arr.push({\n            id: key3,\n            text: qu[key3],\n            pid: key2\n          });\n        });\n      });\n    });\n    this.all = arr;\n  }\n\n  _createClass(Area, [{\n    key: \"getCode\",\n    value: function getCode(text) {\n      if (!text || text.length == 0) {\n        return '';\n      }\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.all[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var item = _step.value;\n\n          if (item.text === text) {\n            return item.id;\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"getText\",\n    value: function getText(code) {\n      if (!code || code.length == 0) {\n        return '';\n      }\n\n      var arr = [];\n      this.getAreaBycode(code, arr);\n      return arr.join('/');\n    }\n  }, {\n    key: \"getRealCode\",\n    value: function getRealCode(code) {\n      var arr = [];\n      this.getPcode(code, arr);\n      return arr;\n    }\n  }, {\n    key: \"getPcode\",\n    value: function getPcode(id, arr) {\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = this.all[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var item = _step2.value;\n\n          if (item.id === id) {\n            arr.unshift(id);\n\n            if (item.pid != '86') {\n              this.getPcode(item.pid, arr);\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"getAreaBycode\",\n    value: function getAreaBycode(code, arr) {\n      //console.log(\"this.all.length\",this.all)\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = this.all[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var item = _step3.value;\n\n          if (item.id === code) {\n            arr.unshift(item.text);\n            this.getAreaBycode(item.pid, arr);\n          }\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"pca\",\n    get: function get() {\n      return this.all;\n    }\n  }]);\n\n  return Area;\n}();\n\nexport { Area as default };",{"version":3,"sources":["D:/ideaworkspace/jxc-front-end/src/components/_util/Area.js"],"names":["pcaa","Area","arr","province","Object","keys","map","key","push","id","text","pid","city","key2","qu","key3","all","length","item","code","getAreaBycode","join","getPcode","unshift"],"mappings":"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","sourcesContent":["import { pcaa } from 'area-data'\r\n\r\n/**\r\n * 省市区\r\n */\r\nexport default class Area {\r\n  /**\r\n   * 构造器\r\n   * @param express\r\n   */\r\n  constructor() {\r\n    let arr = []\r\n    const province = pcaa['86']\r\n    Object.keys(province).map(key=>{\r\n      arr.push({id:key, text:province[key], pid:'86'});\r\n      const city = pcaa[key];\r\n      Object.keys(city).map(key2=>{\r\n        arr.push({id:key2, text:city[key2], pid:key});\r\n        const qu = pcaa[key2];\r\n        Object.keys(qu).map(key3=>{\r\n          arr.push({id:key3, text:qu[key3], pid:key2});\r\n        })\r\n      })\r\n    })\r\n    this.all = arr;\r\n  }\r\n\r\n  get pca(){\r\n    return this.all;\r\n  }\r\n\r\n  getCode(text){\r\n    if(!text || text.length==0){\r\n      return ''\r\n    }\r\n    for(let item of this.all){\r\n      if(item.text === text){\r\n        return item.id;\r\n      }\r\n    }\r\n  }\r\n\r\n  getText(code){\r\n    if(!code || code.length==0){\r\n      return ''\r\n    }\r\n    let arr = []\r\n    this.getAreaBycode(code,arr);\r\n    return arr.join('/')\r\n  }\r\n\r\n  getRealCode(code){\r\n    let arr = []\r\n    this.getPcode(code, arr)\r\n    return arr;\r\n  }\r\n\r\n  getPcode(id, arr){\r\n    for(let item of this.all){\r\n      if(item.id === id){\r\n        arr.unshift(id)\r\n        if(item.pid != '86'){\r\n          this.getPcode(item.pid,arr)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  getAreaBycode(code,arr){\r\n    //console.log(\"this.all.length\",this.all)\r\n    for(let item of this.all){\r\n      if(item.id === code){\r\n        arr.unshift(item.text);\r\n        this.getAreaBycode(item.pid,arr)\r\n      }\r\n    }\r\n  }\r\n\r\n}"]}]}