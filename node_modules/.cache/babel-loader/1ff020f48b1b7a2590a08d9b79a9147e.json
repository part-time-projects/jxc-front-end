{"remainingRequest":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js!D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ideaworkspace\\jxc-front-end\\src\\views\\modules\\online\\cgform\\auto\\OnlCgformAutoList.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ideaworkspace\\jxc-front-end\\src\\views\\modules\\online\\cgform\\auto\\OnlCgformAutoList.vue","mtime":1648374778125},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1648365068269},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":1648364957239}],"contextDependencies":[],"result":["function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { HrefJump } from '@/mixins/OnlAutoListMixin';\nimport { postAction, getAction, deleteAction, downFile } from '@/api/manage';\nimport { filterMultiDictText } from '@/components/dict/JDictSelectUtil';\nimport { cloneObject, filterObj } from '@/utils/util';\nimport JImportModal from '@/components/jeecg/JImportModal';\nimport JSuperQuery from '@comp/jeecg/JSuperQuery';\nimport ButtonExpHandler from './ButtonExpHandler';\nexport default {\n  name: 'OnlCgFormAutoList',\n  mixins: [HrefJump],\n  components: {\n    JSuperQuery: JSuperQuery,\n    JImportModal: JImportModal\n  },\n  data: function data() {\n    return {\n      code: '',\n      description: '在线报表功能测试页面',\n      currentTableName: \"\",\n      url: {\n        getQueryInfo: '/online/cgform/api/getQueryInfo/',\n        getColumns: '/online/cgform/api/getColumns/',\n        getData: '/online/cgform/api/getData/',\n        optPre: \"/online/cgform/api/form/\",\n        exportXls: '/online/cgform/api/exportXls/',\n        buttonAction: '/online/cgform/api/doButton'\n      },\n      flowCodePre: \"onl_\",\n      isorter: {\n        column: 'createTime',\n        order: 'desc'\n      },\n      //dictOptions:{fieldName:[]}\n      dictOptions: {},\n      cgButtonLinkList: [],\n      cgButtonList: [],\n      queryInfo: [],\n      // 查询参数，多个页面的查询参数用 code 作为键来区分\n      queryParamsMap: {},\n      toggleSearchStatus: false,\n      table: {\n        loading: true,\n        scroll: {\n          x: false\n        },\n        // 表头\n        columns: [],\n        //数据集\n        dataSource: [],\n        // 选择器\n        selectedRowKeys: [],\n        selectionRows: [],\n        // 分页参数\n        pagination: {}\n      },\n      metaPagination: {\n        current: 1,\n        pageSize: 10,\n        pageSizeOptions: ['10', '20', '30'],\n        showTotal: function showTotal(total, range) {\n          return range[0] + '-' + range[1] + ' 共' + total + '条';\n        },\n        showQuickJumper: true,\n        showSizeChanger: true,\n        total: 0\n      },\n      actionColumn: {\n        title: '操作',\n        dataIndex: 'action',\n        scopedSlots: {\n          customRender: 'action'\n        },\n        fixed: \"right\",\n        align: \"center\",\n        width: 150\n      },\n      formTemplate: \"99\",\n      EnhanceJS: '',\n      hideColumns: [],\n      buttonSwitch: {\n        add: true,\n        update: true,\n        delete: true,\n        batch_delete: true,\n        import: true,\n        export: true,\n        detail: true\n      },\n      hasBpmStatus: false,\n      checkboxFlag: false,\n      // 高级查询\n      superQuery: {\n        // 字段列表\n        fieldList: [],\n        // 查询参数\n        params: '',\n        // 查询条件拼接方式 'and' or 'or'\n        matchType: 'and'\n      }\n    };\n  },\n  created: function created() {\n    this.initAutoList();\n  },\n  mounted: function mounted() {\n    this.cgButtonJsHandler('mounted');\n  },\n  watch: {\n    '$route': function $route() {\n      // 刷新参数放到这里去触发，就可以刷新相同界面了\n      this.initAutoList();\n    }\n  },\n  computed: {\n    rowSelectionConfig: function rowSelectionConfig() {\n      if (!this.checkboxFlag) {\n        return null;\n      }\n\n      return {\n        fixed: true,\n        selectedRowKeys: this.table.selectedRowKeys,\n        onChange: this.handleChangeInTableSelect\n      };\n    },\n    queryParam: {\n      get: function get() {\n        return this.queryParamsMap[this.code];\n      },\n      set: function set(newVal) {\n        this.$set(this.queryParamsMap, this.code, newVal);\n      }\n    }\n  },\n  methods: {\n    hasBpmStatusFilter: function hasBpmStatusFilter() {\n      var columnObjs = this.table.columns;\n      var columns = [];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = columnObjs[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var item = _step.value;\n          columns.push(item.dataIndex);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      if (columns.includes('bpm_status') || columns.includes('BPM_STATUS')) {\n        this.hasBpmStatus = true;\n      } else {\n        this.hasBpmStatus = false;\n      }\n    },\n    initQueryInfo: function initQueryInfo() {\n      var _this = this;\n\n      getAction(\"\".concat(this.url.getQueryInfo).concat(this.code)).then(function (res) {\n        console.log(\"--onlineList-获取查询条件配置\", res);\n\n        if (res.success) {\n          _this.queryInfo = res.result;\n        } else {\n          _this.$message.warning(res.message);\n        }\n      });\n    },\n    initAutoList: function initAutoList() {\n      var _this2 = this;\n\n      if (!this.$route.params.code) {\n        return false;\n      } // 清空高级查询条件\n\n\n      this.superQuery.params = '';\n\n      if (this.$refs.superQuery) {\n        this.$refs.superQuery.handleReset();\n      }\n\n      this.table.loading = true;\n      this.code = this.$route.params.code;\n\n      if (!this.queryParam) {\n        this.queryParam = {};\n      }\n\n      getAction(\"\".concat(this.url.getColumns).concat(this.code)).then(function (res) {\n        console.log(\"--onlineList-加载动态列>>\", res);\n\n        if (res.success) {\n          if (res.result.checkboxFlag == 'Y') {\n            _this2.checkboxFlag = true;\n          } else {\n            _this2.checkboxFlag = false;\n          }\n\n          if (res.result.paginationFlag == 'Y') {\n            _this2.table.pagination = _objectSpread({}, _this2.metaPagination);\n          } else {\n            _this2.table.pagination = false;\n          }\n\n          _this2.fieldHrefSlots = res.result.fieldHrefSlots;\n          _this2.dictOptions = res.result.dictOptions;\n          _this2.formTemplate = res.result.formTemplate;\n          _this2.description = res.result.description;\n          _this2.currentTableName = res.result.currentTableName;\n\n          _this2.initCgButtonList(res.result.cgButtonList);\n\n          _this2.initCgEnhanceJs(res.result.enhanceJs);\n\n          _this2.initButtonSwitch(res.result.hideColumns);\n\n          var currColumns = res.result.columns;\n\n          for (var a = 0; a < currColumns.length; a++) {\n            if (currColumns[a].customRender) {\n              (function () {\n                var dictCode = currColumns[a].customRender;\n                var replaceFlag = '_replace_text_';\n\n                if (dictCode.startsWith(replaceFlag)) {\n                  var textFieldName = dictCode.replace(replaceFlag, '');\n\n                  currColumns[a].customRender = function (text, record) {\n                    return record[textFieldName];\n                  };\n                } else {\n                  currColumns[a].customRender = function (text) {\n                    return filterMultiDictText(_this2.dictOptions[dictCode], text);\n                  };\n                }\n              })();\n            }\n          }\n\n          if (res.result.scrollFlag == 1) {\n            _this2.table.scroll = {\n              x: '115%'\n            };\n          } else {\n            _this2.table.scroll = {\n              x: false\n            };\n          }\n\n          currColumns.push(_this2.actionColumn);\n          _this2.table.columns = _toConsumableArray(currColumns);\n\n          _this2.hasBpmStatusFilter();\n\n          _this2.loadData();\n\n          _this2.initQueryInfo(); //加载新路由，清空checkbox选中\n\n\n          _this2.table.selectedRowKeys = [];\n        } else {\n          _this2.$message.warning(res.message);\n        }\n      });\n    },\n    loadData: function loadData(arg) {\n      var _this3 = this;\n\n      if (this.table.pagination) {\n        if (arg == 1) {\n          this.table.pagination.current = 1;\n        }\n\n        this.table.loading = true;\n        var params = this.getQueryParams(); //查询条件\n\n        console.log(\"--onlineList-查询条件-->\", params);\n        getAction(\"\".concat(this.url.getData).concat(this.code), params).then(function (res) {\n          console.log(\"--onlineList-列表数据\", res);\n\n          if (res.success) {\n            var result = res.result;\n\n            if (Number(result.total) > 0) {\n              _this3.table.pagination.total = Number(result.total);\n              _this3.table.dataSource = result.records;\n            } else {\n              _this3.table.pagination.total = 0;\n              _this3.table.dataSource = []; //this.$message.warning(\"查无数据\")\n            }\n          } else {\n            _this3.$message.warning(res.message);\n          }\n        }).finally(function () {\n          _this3.table.loading = false;\n        });\n      } else {\n        this.loadDataNoPage();\n      }\n    },\n    loadDataNoPage: function loadDataNoPage() {\n      var _this4 = this;\n\n      this.table.loading = true;\n      var param = this.getQueryParams(); //查询条件\n\n      param['pageSize'] = -521;\n      getAction(\"\".concat(this.url.getData).concat(this.code), filterObj(param)).then(function (res) {\n        console.log(\"--onlineList-列表数据\", res);\n\n        if (res.success) {\n          var result = res.result;\n\n          if (Number(result.total) > 0) {\n            _this4.table.dataSource = result.records;\n          } else {\n            _this4.table.dataSource = [];\n          }\n        } else {\n          _this4.$message.warning(res.message);\n        }\n      }).finally(function () {\n        _this4.table.loading = false;\n      });\n    },\n    getQueryParams: function getQueryParams() {\n      var param = Object.assign({}, this.queryParam, this.isorter);\n      param.pageNo = this.table.pagination.current;\n      param.pageSize = this.table.pagination.pageSize;\n      param.superQueryMatchType = this.superQuery.matchType;\n      param.superQueryParams = encodeURIComponent(this.superQuery.params);\n      return filterObj(param);\n    },\n    handleChangeInTableSelect: function handleChangeInTableSelect(selectedRowKeys, selectionRows) {\n      this.table.selectedRowKeys = selectedRowKeys;\n      this.table.selectionRows = selectionRows;\n      this.selectedRowKeys = selectedRowKeys;\n    },\n    handleTableChange: function handleTableChange(pagination, filters, sorter) {\n      //TODO 筛选\n      if (Object.keys(sorter).length > 0) {\n        this.isorter.column = sorter.field;\n        this.isorter.order = \"ascend\" == sorter.order ? \"asc\" : \"desc\";\n      }\n\n      this.table.pagination = pagination;\n      this.loadData();\n    },\n    handleAdd: function handleAdd() {\n      this.cgButtonJsHandler('beforeAdd');\n      this.$refs.modal.add(this.formTemplate);\n    },\n    handleImportXls: function handleImportXls() {\n      this.$refs.importModal.show();\n    },\n    importOk: function importOk() {\n      this.loadData(1);\n    },\n    handleExportXls2: function handleExportXls2() {\n      var param = this.queryParam;\n\n      if (this.table.selectedRowKeys && this.table.selectedRowKeys.length > 0) {\n        param['selections'] = this.table.selectedRowKeys.join(\",\");\n      }\n\n      var paramsStr = encodeURI(JSON.stringify(param));\n      console.log('paramsStr: ' + paramsStr);\n      var url = window._CONFIG['domianURL'] + this.url.exportXls + this.code + \"?paramsStr=\" + paramsStr;\n      window.location.href = url;\n    },\n    handleExportXls: function handleExportXls() {\n      var _this5 = this;\n\n      var param = this.queryParam;\n\n      if (this.table.selectedRowKeys && this.table.selectedRowKeys.length > 0) {\n        param['selections'] = this.table.selectedRowKeys.join(\",\");\n      }\n\n      console.log(\"导出参数\", param);\n      var paramsStr = JSON.stringify(filterObj(param));\n      downFile(this.url.exportXls + this.code, {\n        paramsStr: paramsStr\n      }).then(function (data) {\n        if (!data) {\n          _this5.$message.warning(\"文件下载失败\");\n\n          return;\n        }\n\n        if (typeof window.navigator.msSaveBlob !== 'undefined') {\n          window.navigator.msSaveBlob(new Blob([data]), _this5.description + '.xls');\n        } else {\n          var url = window.URL.createObjectURL(new Blob([data]));\n          var link = document.createElement('a');\n          link.style.display = 'none';\n          link.href = url;\n          link.setAttribute('download', _this5.description + '.xls');\n          document.body.appendChild(link);\n          link.click();\n          document.body.removeChild(link); //下载完成移除元素\n\n          window.URL.revokeObjectURL(url); //释放掉blob对象\n        }\n      });\n    },\n    handleEdit: function handleEdit(record) {\n      this.cgButtonLinkHandler(record, \"beforeEdit\", \"js\");\n      this.$refs.modal.edit(this.formTemplate, record.id);\n    },\n    showLinkButton: function showLinkButton(item, record) {\n      var btn = new ButtonExpHandler(item.exp, record);\n      return btn.show;\n    },\n    handleDetail: function handleDetail(record) {\n      this.$refs.modal.detail(this.formTemplate, record.id);\n    },\n    handleDeleteOne: function handleDeleteOne(record) {\n      this.cgButtonLinkHandler(record, \"beforeDelete\", \"js\");\n      this.handleDelete(record.id);\n    },\n    handleDelete: function handleDelete(id) {\n      var _this6 = this;\n\n      deleteAction(this.url.optPre + this.code + \"/\" + id).then(function (res) {\n        if (res.success) {\n          _this6.$message.success(res.message);\n\n          _this6.loadData();\n        } else {\n          _this6.$message.warning(res.message);\n        }\n      });\n    },\n    handleFormSuccess: function handleFormSuccess() {\n      this.loadData();\n    },\n    // 查询完 schema 后，生成高级查询的字段列表\n    handleGetSchema: function handleGetSchema(schema) {\n      if (schema && schema.properties) {\n        var setField = function setField(array, field) {\n          var type = field.type || 'string';\n          type = type === 'inputNumber' ? 'number' : type;\n          array.push({\n            type: type,\n            value: field.key,\n            text: field.title,\n            // 额外字典参数\n            dictCode: field.dictCode,\n            dictTable: field.dictTable,\n            dictText: field.dictText,\n            options: field.enum || field.options,\n            order: field.order\n          });\n        };\n\n        var fieldList = [];\n\n        for (var key in schema.properties) {\n          if (!schema.properties.hasOwnProperty(key)) {\n            continue;\n          }\n\n          var field = schema.properties[key]; // tab = 子表\n\n          if (field.view === 'tab') {\n            var subTable = {\n              type: 'sub-table',\n              value: field.key,\n              text: field.describe,\n              children: []\n            };\n            var _iteratorNormalCompletion2 = true;\n            var _didIteratorError2 = false;\n            var _iteratorError2 = undefined;\n\n            try {\n              for (var _iterator2 = field.columns[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                var column = _step2.value;\n                setField(subTable.children, column);\n              }\n            } catch (err) {\n              _didIteratorError2 = true;\n              _iteratorError2 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n                  _iterator2.return();\n                }\n              } finally {\n                if (_didIteratorError2) {\n                  throw _iteratorError2;\n                }\n              }\n            }\n\n            fieldList.push(subTable);\n          } else {\n            field.key = key;\n            setField(fieldList, field);\n          }\n        } // 冒泡排序\n\n\n        for (var i = 0; i < fieldList.length; i++) {\n          for (var j = i + 1; j < fieldList.length; j++) {\n            var temp1 = fieldList[i];\n            var temp2 = fieldList[j];\n\n            if (temp1.order > temp2.order) {\n              fieldList[i] = temp2;\n              fieldList[j] = temp1;\n            }\n          }\n        }\n\n        this.superQuery.fieldList = fieldList;\n      }\n    },\n    onClearSelected: function onClearSelected() {\n      this.table.selectedRowKeys = [];\n      this.table.selectionRows = [];\n    },\n    getImgView: function getImgView(text) {\n      if (text && text.indexOf(\",\") > 0) {\n        text = text.substring(0, text.indexOf(\",\"));\n      }\n\n      return window._CONFIG['staticDomainURL'] + \"/\" + text;\n    },\n    downloadRowFile: function downloadRowFile(text) {\n      if (!text) {\n        this.$message.warning(\"未知的文件\");\n        return;\n      }\n\n      if (text.indexOf(\",\") > 0) {\n        text = text.substring(0, text.indexOf(\",\"));\n      }\n\n      window.open(window._CONFIG['staticDomainURL'] + \"/\" + text); //TODO 下载的方法\n    },\n    handleDelBatch: function handleDelBatch() {\n      if (this.table.selectedRowKeys.length <= 0) {\n        this.$message.warning('请选择一条记录！');\n        return false;\n      } else {\n        var ids = \"\";\n        var that = this;\n        that.table.selectedRowKeys.forEach(function (val) {\n          ids += val + \",\";\n        });\n        that.$confirm({\n          title: \"确认删除\",\n          content: \"是否删除选中数据?\",\n          onOk: function onOk() {\n            that.handleDelete(ids);\n            that.onClearSelected();\n          }\n        });\n      }\n    },\n    searchByquery: function searchByquery() {\n      this.loadData(1);\n    },\n    searchReset: function searchReset() {\n      this.queryParam = {};\n      this.loadData(1);\n    },\n    handleToggleSearch: function handleToggleSearch() {\n      this.toggleSearchStatus = !this.toggleSearchStatus;\n    },\n    getFormatDate: function getFormatDate(text) {\n      if (!text) {\n        return '';\n      }\n\n      var a = text;\n\n      if (a.length > 10) {\n        a = a.substring(0, 10);\n      }\n\n      return a;\n    },\n    getImportUrl: function getImportUrl() {\n      return '/online/cgform/api/importXls/' + this.code;\n    },\n    initCgEnhanceJs: function initCgEnhanceJs(enhanceJs) {\n      //console.log(\"--onlineList-js增强\",enhanceJs)\n      if (enhanceJs) {\n        var Obj = eval(\"(\" + enhanceJs + \")\");\n        this.EnhanceJS = new Obj(getAction, postAction, deleteAction);\n        this.cgButtonJsHandler('created');\n      } else {\n        this.EnhanceJS = '';\n      }\n    },\n    initCgButtonList: function initCgButtonList(btnList) {\n      var linkArr = [];\n      var buttonArr = [];\n\n      if (btnList && btnList.length > 0) {\n        for (var i = 0; i < btnList.length; i++) {\n          var temp = btnList[i];\n\n          if (temp.buttonStyle == 'button') {\n            buttonArr.push(temp);\n          } else if (temp.buttonStyle == 'link') {\n            linkArr.push(temp);\n          }\n        }\n      }\n\n      this.cgButtonLinkList = [].concat(linkArr);\n      this.cgButtonList = [].concat(buttonArr);\n    },\n    cgButtonJsHandler: function cgButtonJsHandler(buttonCode) {\n      if (this.EnhanceJS[buttonCode]) {\n        this.EnhanceJS[buttonCode](this);\n      }\n    },\n    cgButtonActionHandler: function cgButtonActionHandler(buttonCode) {\n      var _this7 = this;\n\n      //处理自定义button的 需要配置该button自定义sql\n      if (!this.table.selectedRowKeys || this.table.selectedRowKeys.length == 0) {\n        this.$message.warning(\"请先选中一条记录\");\n        return false;\n      }\n\n      if (this.table.selectedRowKeys.length > 1) {\n        this.$message.warning(\"请只选中一条记录\");\n        return false;\n      }\n\n      var params = {\n        formId: this.code,\n        buttonCode: buttonCode,\n        dataId: this.table.selectedRowKeys[0]\n      };\n      console.log(\"自定义按钮请求后台参数：\", params);\n      postAction(this.url.buttonAction, params).then(function (res) {\n        if (res.success) {\n          _this7.loadData();\n\n          _this7.$message.success(\"处理完成!\");\n        } else {\n          _this7.$message.warning(\"处理失败!\");\n        }\n      });\n    },\n    cgButtonLinkHandler: function cgButtonLinkHandler(record, buttonCode, optType) {\n      var _this8 = this;\n\n      if (optType == \"js\") {\n        if (this.EnhanceJS[buttonCode]) {\n          this.EnhanceJS[buttonCode](this, record);\n        }\n      } else if (optType == \"action\") {\n        var params = {\n          formId: this.code,\n          buttonCode: buttonCode,\n          dataId: record.id\n        };\n        console.log(\"自定义按钮link请求后台参数：\", params);\n        postAction(this.url.buttonAction, params).then(function (res) {\n          if (res.success) {\n            _this8.loadData();\n\n            _this8.$message.success(\"处理完成!\");\n          } else {\n            _this8.$message.warning(\"处理失败!\");\n          }\n        });\n      }\n    },\n    initButtonSwitch: function initButtonSwitch(hideColumns) {\n      var _this9 = this;\n\n      Object.keys(this.buttonSwitch).forEach(function (key) {\n        _this9.buttonSwitch[key] = true;\n      });\n\n      if (hideColumns && hideColumns.length > 0) {\n        Object.keys(this.buttonSwitch).forEach(function (key) {\n          if (hideColumns.indexOf(key) >= 0) {\n            _this9.buttonSwitch[key] = false;\n          }\n        });\n      }\n    },\n    // 高级查询\n    handleSuperQuery: function handleSuperQuery(params, matchType) {\n      if (!params || params.length === 0) {\n        this.superQuery.params = '';\n      } else {\n        this.superQuery.params = JSON.stringify(params);\n      }\n\n      this.superQuery.matchType = matchType;\n      this.loadData();\n    }\n  }\n};",{"version":3,"sources":["OnlCgformAutoList.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <a-card :bordered=\"false\" style=\"height: 100%\">\r\n    <div class=\"table-page-search-wrapper\">\r\n      <a-form layout=\"inline\" @keyup.enter.native=\"searchByquery\">\r\n        <a-row :gutter=\"24\" v-if=\"queryInfo && queryInfo.length>0\">\r\n          <template v-for=\"(item,index) in queryInfo\">\r\n            <template v-if=\" item.hidden==='1' \">\r\n              <a-col v-if=\"item.view=='datetime'\" :md=\"12\" :sm=\"16\" :key=\" 'query'+index \" v-show=\"toggleSearchStatus\">\r\n                <online-query-form-item :queryParam=\"queryParam\" :item=\"item\" :dictOptions=\"dictOptions\"></online-query-form-item>\r\n              </a-col>\r\n              <a-col v-else :md=\"6\" :sm=\"8\" :key=\" 'query'+index \" v-show=\"toggleSearchStatus\">\r\n                <online-query-form-item :queryParam=\"queryParam\" :item=\"item\" :dictOptions=\"dictOptions\"></online-query-form-item>\r\n              </a-col>\r\n            </template>\r\n            <template v-else>\r\n              <a-col v-if=\"item.view=='datetime'\" :md=\"12\" :sm=\"16\" :key=\" 'query'+index \">\r\n                <online-query-form-item :queryParam=\"queryParam\" :item=\"item\" :dictOptions=\"dictOptions\"></online-query-form-item>\r\n              </a-col>\r\n              <a-col v-else :md=\"6\" :sm=\"8\" :key=\" 'query'+index \">\r\n                <online-query-form-item :queryParam=\"queryParam\" :item=\"item\" :dictOptions=\"dictOptions\"></online-query-form-item>\r\n              </a-col>\r\n            </template>\r\n          </template>\r\n\r\n          <a-col :md=\"6\" :sm=\"8\">\r\n            <span style=\"float: left;overflow: hidden;\" class=\"table-page-search-submitButtons\">\r\n              <a-button type=\"primary\" @click=\"searchByquery\" icon=\"search\">查询</a-button>\r\n              <a-button type=\"primary\" @click=\"searchReset\" icon=\"reload\" style=\"margin-left: 8px\">重置</a-button>\r\n              <a @click=\"handleToggleSearch\" style=\"margin-left: 8px\">\r\n                {{ toggleSearchStatus ? '收起' : '展开' }}\r\n                <a-icon :type=\"toggleSearchStatus ? 'up' : 'down'\"/>\r\n              </a>\r\n            </span>\r\n          </a-col>\r\n\r\n        </a-row>\r\n      </a-form>\r\n    </div>\r\n\r\n    <!-- 操作按钮区域 -->\r\n    <div class=\"table-operator\">\r\n      <a-button v-if=\"buttonSwitch.add\" @click=\"handleAdd\" type=\"primary\" icon=\"plus\">新增</a-button>\r\n      <!--      <a-button v-if=\"buttonSwitch.import\" @click=\"handleImportXls\" type=\"primary\" icon=\"upload\">导入</a-button>\r\n      <a-button v-if=\"buttonSwitch.export\" @click=\"handleExportXls\" type=\"primary\" icon=\"download\">导出</a-button>-->\r\n      <template v-if=\"cgButtonList && cgButtonList.length>0\" v-for=\"(item,index) in cgButtonList\">\r\n        <a-button\r\n          v-if=\" item.optType=='js' \"\r\n          :key=\" 'cgbtn'+index \"\r\n          @click=\"cgButtonJsHandler(item.buttonCode)\"\r\n          type=\"primary\"\r\n          :icon=\"item.buttonIcon\">\r\n          {{ item.buttonName }}\r\n        </a-button>\r\n        <a-button\r\n          v-else-if=\" item.optType=='action' \"\r\n          :key=\" 'cgbtn'+index \"\r\n          @click=\"cgButtonActionHandler(item.buttonCode)\"\r\n          type=\"primary\"\r\n          :icon=\"item.buttonIcon\">\r\n          {{ item.buttonName }}\r\n        </a-button>\r\n      </template>\r\n\r\n      <!-- 高级查询 -->\r\n      <j-super-query\r\n        ref=\"superQuery\"\r\n        :fieldList=\"superQuery.fieldList\"\r\n        :saveCode=\"$route.fullPath\"\r\n        :loading=\"table.loading\"\r\n        @handleSuperQuery=\"handleSuperQuery\"/>\r\n\r\n      <a-button\r\n        v-if=\"buttonSwitch.batch_delete\"\r\n        @click=\"handleDelBatch\"\r\n        v-show=\"table.selectedRowKeys.length > 0\"\r\n        ghost\r\n        type=\"primary\"\r\n        icon=\"delete\">批量删除</a-button>\r\n    </div>\r\n\r\n    <div>\r\n      <div class=\"ant-alert ant-alert-info\" style=\"margin-bottom: 16px;\">\r\n        <i class=\"anticon anticon-info-circle ant-alert-icon\"></i>\r\n        已选择&nbsp;<a style=\"font-weight: 600\">{{ table.selectedRowKeys.length }}</a>项&nbsp;&nbsp;\r\n        <a style=\"margin-left: 24px\" @click=\"onClearSelected\">清空</a>\r\n      </div>\r\n\r\n      <a-table\r\n        ref=\"cgformAutoList\"\r\n        bordered\r\n        size=\"middle\"\r\n        rowKey=\"id\"\r\n        :columns=\"table.columns\"\r\n        :dataSource=\"table.dataSource\"\r\n        :pagination=\"table.pagination\"\r\n        :loading=\"table.loading\"\r\n        :rowSelection=\"rowSelectionConfig\"\r\n        @change=\"handleTableChange\"\r\n        :scroll=\"table.scroll\"\r\n        style=\"min-height: 300px\">\r\n\r\n        <!-- 支持链接href跳转 -->\r\n        <template\r\n          v-for=\"field of fieldHrefSlots\"\r\n          :slot=\"field.slotName\"\r\n          slot-scope=\"text, record\"\r\n        >\r\n          <a @click=\"handleClickFieldHref(field,record)\">{{ text }}</a>\r\n        </template>\r\n\r\n\r\n        <template slot=\"dateSlot\" slot-scope=\"text\">\r\n          <span>{{ getFormatDate(text) }}</span>\r\n        </template>\r\n\r\n        <template slot=\"htmlSlot\" slot-scope=\"text\">\r\n          <div v-html=\"text\"></div>\r\n        </template>\r\n\r\n        <template slot=\"imgSlot\" slot-scope=\"text\">\r\n          <span v-if=\"!text\" style=\"font-size: 12px;font-style: italic;\">无图片</span>\r\n          <img v-else :src=\"getImgView(text)\" height=\"25px\" alt=\"图片不存在\" style=\"max-width:80px;font-size: 12px;font-style: italic;\"/>\r\n        </template>\r\n\r\n        <template slot=\"fileSlot\" slot-scope=\"text\">\r\n          <span v-if=\"!text\" style=\"font-size: 12px;font-style: italic;\">无文件</span>\r\n          <a-button\r\n            v-else\r\n            :ghost=\"true\"\r\n            type=\"primary\"\r\n            icon=\"download\"\r\n            size=\"small\"\r\n            @click=\"downloadRowFile(text)\">\r\n            下载\r\n          </a-button>\r\n        </template>\r\n\r\n        <span slot=\"action\" slot-scope=\"text, record\">\r\n          <template v-if=\"hasBpmStatus\">\r\n            <template v-if=\"record.bpm_status == '1'||record.bpm_status == ''|| record.bpm_status == null\">\r\n              <template v-if=\"buttonSwitch.update\">\r\n              <a @click=\"handleEdit(record)\">编辑</a>\r\n              <a-divider type=\"vertical\"/>\r\n            </template>\r\n            </template>\r\n          </template>\r\n          <template v-else>\r\n            <template v-if=\"buttonSwitch.update\">\r\n              <a @click=\"handleEdit(record)\">编辑</a>\r\n              <a-divider type=\"vertical\"/>\r\n            </template>\r\n          </template>\r\n          <a-dropdown>\r\n            <a class=\"ant-dropdown-link\">\r\n              更多 <a-icon type=\"down\" />\r\n            </a>\r\n            <a-menu slot=\"overlay\">\r\n              <a-menu-item v-if=\"buttonSwitch.detail\">\r\n                <a href=\"javascript:;\" @click=\"handleDetail(record)\">详情</a>\r\n              </a-menu-item>\r\n              <template v-if=\"hasBpmStatus\">\r\n                <template v-if=\"record.bpm_status == '1'||record.bpm_status == ''|| record.bpm_status == null\">\r\n                    <a-menu-item v-if=\"buttonSwitch.delete\">\r\n                      <a-popconfirm title=\"确定删除吗?\" @confirm=\"() => handleDeleteOne(record)\">\r\n                        <a>删除</a>\r\n                      </a-popconfirm>\r\n                    </a-menu-item>\r\n                </template>\r\n              </template>\r\n              <template v-else>\r\n                <a-menu-item v-if=\"buttonSwitch.delete\">\r\n                  <a-popconfirm title=\"确定删除吗?\" @confirm=\"() => handleDeleteOne(record)\">\r\n                    <a>删除</a>\r\n                  </a-popconfirm>\r\n                </a-menu-item>\r\n               </template>\r\n              <template v-if=\"cgButtonLinkList && cgButtonLinkList.length>0\" v-for=\"(btnItem,btnIndex) in cgButtonLinkList\">\r\n                <a-menu-item :key=\" 'cgbtnLink'+btnIndex \" v-if=\"showLinkButton(btnItem,record)\">\r\n                  <a href=\"javascript:void(0);\" @click=\"cgButtonLinkHandler(record,btnItem.buttonCode,btnItem.optType)\">\r\n                    <a-icon v-if=\"btnItem.buttonIcon\" :type=\"btnItem.buttonIcon\" />\r\n                    {{ btnItem.buttonName }}\r\n                  </a>\r\n                </a-menu-item>\r\n              </template>\r\n\r\n            </a-menu>\r\n          </a-dropdown>\r\n        </span>\r\n      </a-table>\r\n\r\n      <onl-cgform-auto-modal @success=\"handleFormSuccess\" ref=\"modal\" :code=\"code\" @schema=\"handleGetSchema\" />\r\n\r\n      <j-import-modal ref=\"importModal\" :url=\"getImportUrl()\" @ok=\"importOk\"></j-import-modal>\r\n\r\n      <!-- 跳转Href的动态组件方式 -->\r\n      <a-modal v-bind=\"hrefComponent.model\" v-on=\"hrefComponent.on\">\r\n        <component :is=\"hrefComponent.is\" v-bind=\"hrefComponent.params\"/>\r\n      </a-modal>\r\n\r\n    </div>\r\n  </a-card>\r\n</template>\r\n\r\n<script>\r\n\r\n  import { HrefJump } from '@/mixins/OnlAutoListMixin'\r\n  import { postAction,getAction,deleteAction,downFile } from '@/api/manage'\r\n  import { filterMultiDictText } from '@/components/dict/JDictSelectUtil'\r\n  import { cloneObject, filterObj } from '@/utils/util'\r\n  import JImportModal from '@/components/jeecg/JImportModal'\r\n  import JSuperQuery from '@comp/jeecg/JSuperQuery'\r\n  import ButtonExpHandler from './ButtonExpHandler'\r\n\r\n  export default {\r\n    name: 'OnlCgFormAutoList',\r\n    mixins: [HrefJump],\r\n    components: {\r\n      JSuperQuery,\r\n      JImportModal,\r\n    },\r\n    data() {\r\n      return {\r\n        code: '',\r\n        description: '在线报表功能测试页面',\r\n        currentTableName:\"\",\r\n        url: {\r\n          getQueryInfo:'/online/cgform/api/getQueryInfo/',\r\n          getColumns: '/online/cgform/api/getColumns/',\r\n          getData: '/online/cgform/api/getData/',\r\n          optPre:\"/online/cgform/api/form/\",\r\n          exportXls:'/online/cgform/api/exportXls/',\r\n          buttonAction:'/online/cgform/api/doButton',\r\n        },\r\n        flowCodePre:\"onl_\",\r\n        isorter:{\r\n          column: 'createTime',\r\n          order: 'desc',\r\n        },\r\n        //dictOptions:{fieldName:[]}\r\n        dictOptions:{\r\n\r\n        },\r\n        cgButtonLinkList:[],\r\n        cgButtonList:[],\r\n        queryInfo:[],\r\n        // 查询参数，多个页面的查询参数用 code 作为键来区分\r\n        queryParamsMap: {},\r\n        toggleSearchStatus:false,\r\n        table: {\r\n          loading: true,\r\n          scroll:{x:false},\r\n          // 表头\r\n          columns: [],\r\n          //数据集\r\n          dataSource: [],\r\n          // 选择器\r\n          selectedRowKeys: [],\r\n          selectionRows: [],\r\n          // 分页参数\r\n          pagination: {\r\n\r\n          }\r\n        },\r\n        metaPagination:{\r\n          current: 1,\r\n          pageSize: 10,\r\n          pageSizeOptions: ['10', '20', '30'],\r\n          showTotal: (total, range) => {\r\n            return range[0] + '-' + range[1] + ' 共' + total + '条'\r\n          },\r\n          showQuickJumper: true,\r\n          showSizeChanger: true,\r\n          total: 0\r\n        },\r\n        actionColumn:{\r\n          title: '操作',\r\n          dataIndex: 'action',\r\n          scopedSlots: { customRender: 'action' },\r\n          fixed:\"right\",\r\n          align:\"center\",\r\n          width:150\r\n        },\r\n        formTemplate:\"99\",\r\n        EnhanceJS:'',\r\n        hideColumns:[],\r\n        buttonSwitch:{\r\n          add:true,\r\n          update:true,\r\n          delete:true,\r\n          batch_delete:true,\r\n          import:true,\r\n          export:true,\r\n          detail:true\r\n        },\r\n        hasBpmStatus:false,\r\n        checkboxFlag:false,\r\n        // 高级查询\r\n        superQuery: {\r\n          // 字段列表\r\n          fieldList: [],\r\n          // 查询参数\r\n          params: '',\r\n          // 查询条件拼接方式 'and' or 'or'\r\n          matchType: 'and'\r\n        }\r\n      }\r\n    },\r\n    created() {\r\n      this.initAutoList();\r\n    },\r\n    mounted(){\r\n      this.cgButtonJsHandler('mounted')\r\n    },\r\n    watch: {\r\n      '$route'() {\r\n        // 刷新参数放到这里去触发，就可以刷新相同界面了\r\n        this.initAutoList()\r\n      }\r\n    },\r\n    computed:{\r\n      rowSelectionConfig:function() {\r\n        if(!this.checkboxFlag){\r\n          return null\r\n        }\r\n        return {\r\n          fixed:true,\r\n          selectedRowKeys:this.table.selectedRowKeys,\r\n          onChange: this.handleChangeInTableSelect\r\n        }\r\n      },\r\n      queryParam: {\r\n        get() {\r\n          return this.queryParamsMap[this.code]\r\n        },\r\n        set(newVal) {\r\n          this.$set(this.queryParamsMap, this.code, newVal)\r\n        }\r\n      }\r\n    },\r\n    methods: {\r\n      hasBpmStatusFilter(){\r\n        var columnObjs = this.table.columns;\r\n        let columns = [];\r\n        for (var item of columnObjs) {\r\n          columns.push(item.dataIndex);\r\n        }\r\n        if(columns.includes('bpm_status')||columns.includes('BPM_STATUS')){\r\n          this.hasBpmStatus = true;\r\n        }else{\r\n          this.hasBpmStatus = false;\r\n        }\r\n      },\r\n      initQueryInfo(){\r\n        getAction(`${this.url.getQueryInfo}${this.code}`).then((res)=>{\r\n          console.log(\"--onlineList-获取查询条件配置\",res);\r\n          if(res.success){\r\n            this.queryInfo = res.result\r\n          }else{\r\n            this.$message.warning(res.message)\r\n          }\r\n        })\r\n      },\r\n      initAutoList(){\r\n        if(!this.$route.params.code){\r\n          return false\r\n        }\r\n        // 清空高级查询条件\r\n        this.superQuery.params = ''\r\n        if (this.$refs.superQuery) {\r\n          this.$refs.superQuery.handleReset()\r\n        }\r\n\r\n        this.table.loading = true\r\n        this.code = this.$route.params.code\r\n        if (!this.queryParam) {\r\n          this.queryParam = {}\r\n        }\r\n        getAction(`${this.url.getColumns}${this.code}`).then((res)=>{\r\n          console.log(\"--onlineList-加载动态列>>\",res);\r\n          if(res.success){\r\n            if(res.result.checkboxFlag == 'Y'){\r\n              this.checkboxFlag = true\r\n            }else{\r\n              this.checkboxFlag = false\r\n            }\r\n\r\n            if(res.result.paginationFlag=='Y'){\r\n              this.table.pagination = {...this.metaPagination}\r\n            }else{\r\n              this.table.pagination = false\r\n            }\r\n\r\n            this.fieldHrefSlots = res.result.fieldHrefSlots\r\n            this.dictOptions = res.result.dictOptions\r\n            this.formTemplate = res.result.formTemplate\r\n            this.description = res.result.description\r\n            this.currentTableName = res.result.currentTableName\r\n            this.initCgButtonList(res.result.cgButtonList)\r\n            this.initCgEnhanceJs(res.result.enhanceJs)\r\n            this.initButtonSwitch(res.result.hideColumns)\r\n            let currColumns = res.result.columns\r\n            for(let a=0;a<currColumns.length;a++){\r\n              if(currColumns[a].customRender){\r\n                let dictCode = currColumns[a].customRender;\r\n                let replaceFlag = '_replace_text_';\r\n                if(dictCode.startsWith(replaceFlag)){\r\n                  let textFieldName = dictCode.replace(replaceFlag,'')\r\n                  currColumns[a].customRender=(text,record)=>{\r\n                    return record[textFieldName]\r\n                  }\r\n                }else{\r\n                  currColumns[a].customRender=(text)=>{\r\n                    return filterMultiDictText(this.dictOptions[dictCode], text);\r\n                  }\r\n                }\r\n              }\r\n            }\r\n            if(res.result.scrollFlag==1){\r\n              this.table.scroll = { x :'115%' }\r\n            }else{\r\n              this.table.scroll = { x :false }\r\n            }\r\n            currColumns.push(this.actionColumn);\r\n            this.table.columns = [...currColumns]\r\n            this.hasBpmStatusFilter();\r\n            this.loadData();\r\n            this.initQueryInfo();\r\n            //加载新路由，清空checkbox选中\r\n            this.table.selectedRowKeys = [];\r\n          }else{\r\n            this.$message.warning(res.message)\r\n          }\r\n        })\r\n      },\r\n      loadData(arg){\r\n        if(this.table.pagination){\r\n          if(arg==1){\r\n            this.table.pagination.current=1\r\n          }\r\n          this.table.loading = true\r\n          let params = this.getQueryParams();//查询条件\r\n          console.log(\"--onlineList-查询条件-->\",params)\r\n          getAction(`${this.url.getData}${this.code}`,params).then((res)=>{\r\n            console.log(\"--onlineList-列表数据\",res)\r\n            if(res.success){\r\n              let result = res.result;\r\n              if(Number(result.total)>0){\r\n                this.table.pagination.total = Number(result.total)\r\n                this.table.dataSource = result.records\r\n              }else{\r\n                this.table.pagination.total=0;\r\n                this.table.dataSource=[]\r\n                //this.$message.warning(\"查无数据\")\r\n              }\r\n            }else{\r\n              this.$message.warning(res.message)\r\n            }\r\n          }).finally(() => {\r\n            this.table.loading = false\r\n          })\r\n        }else{\r\n          this.loadDataNoPage()\r\n        }\r\n      },\r\n      loadDataNoPage(){\r\n        this.table.loading = true\r\n        let param = this.getQueryParams()//查询条件\r\n        param['pageSize'] = -521;\r\n        getAction(`${this.url.getData}${this.code}`,filterObj(param)).then((res)=>{\r\n          console.log(\"--onlineList-列表数据\",res)\r\n          if(res.success){\r\n            let result = res.result;\r\n            if(Number(result.total)>0){\r\n              this.table.dataSource = result.records\r\n            }else{\r\n              this.table.dataSource=[]\r\n            }\r\n          }else{\r\n            this.$message.warning(res.message)\r\n          }\r\n        }).finally(() => {\r\n          this.table.loading = false\r\n        })\r\n      },\r\n      getQueryParams() {\r\n        let param = Object.assign({}, this.queryParam,this.isorter);\r\n        param.pageNo = this.table.pagination.current;\r\n        param.pageSize = this.table.pagination.pageSize;\r\n        param.superQueryMatchType = this.superQuery.matchType\r\n        param.superQueryParams = encodeURIComponent(this.superQuery.params)\r\n        return filterObj(param);\r\n      },\r\n      handleChangeInTableSelect(selectedRowKeys, selectionRows) {\r\n        this.table.selectedRowKeys = selectedRowKeys\r\n        this.table.selectionRows = selectionRows\r\n        this.selectedRowKeys = selectedRowKeys\r\n      },\r\n      handleTableChange(pagination, filters, sorter){\r\n        //TODO 筛选\r\n        if (Object.keys(sorter).length>0){\r\n          this.isorter.column = sorter.field;\r\n          this.isorter.order = \"ascend\"==sorter.order?\"asc\":\"desc\"\r\n        }\r\n        this.table.pagination = pagination;\r\n        this.loadData();\r\n      },\r\n      handleAdd(){\r\n        this.cgButtonJsHandler('beforeAdd')\r\n        this.$refs.modal.add(this.formTemplate);\r\n      },\r\n      handleImportXls(){\r\n        this.$refs.importModal.show()\r\n      },\r\n      importOk(){\r\n        this.loadData(1)\r\n      },\r\n      handleExportXls2(){\r\n        let param = this.queryParam;\r\n        if(this.table.selectedRowKeys && this.table.selectedRowKeys.length>0){\r\n          param['selections'] = this.table.selectedRowKeys.join(\",\")\r\n        }\r\n        let paramsStr = encodeURI(JSON.stringify(param));\r\n        console.log('paramsStr: ' + paramsStr)\r\n        let url = window._CONFIG['domianURL']+this.url.exportXls+this.code+\"?paramsStr=\"+paramsStr\r\n        window.location.href = url;\r\n      },\r\n      handleExportXls(){\r\n        let param = this.queryParam;\r\n        if(this.table.selectedRowKeys && this.table.selectedRowKeys.length>0){\r\n          param['selections'] = this.table.selectedRowKeys.join(\",\")\r\n        }\r\n        console.log(\"导出参数\",param)\r\n        let paramsStr = JSON.stringify(filterObj(param));\r\n        downFile(this.url.exportXls+this.code,{paramsStr:paramsStr}).then((data)=>{\r\n          if (!data) {\r\n            this.$message.warning(\"文件下载失败\")\r\n            return\r\n          }\r\n          if (typeof window.navigator.msSaveBlob !== 'undefined') {\r\n            window.navigator.msSaveBlob(new Blob([data]), this.description+'.xls')\r\n          }else{\r\n            let url = window.URL.createObjectURL(new Blob([data]))\r\n            let link = document.createElement('a')\r\n            link.style.display = 'none'\r\n            link.href = url\r\n            link.setAttribute('download', this.description+'.xls')\r\n            document.body.appendChild(link)\r\n            link.click()\r\n            document.body.removeChild(link); //下载完成移除元素\r\n            window.URL.revokeObjectURL(url); //释放掉blob对象\r\n          }\r\n        })\r\n      },\r\n      handleEdit(record){\r\n        this.cgButtonLinkHandler(record,\"beforeEdit\",\"js\")\r\n        this.$refs.modal.edit(this.formTemplate,record.id);\r\n      },\r\n      showLinkButton(item,record){\r\n        let btn = new ButtonExpHandler(item.exp,record);\r\n        return btn.show;\r\n      },\r\n      handleDetail(record){\r\n        this.$refs.modal.detail(this.formTemplate,record.id);\r\n      },\r\n      handleDeleteOne(record){\r\n        this.cgButtonLinkHandler(record,\"beforeDelete\",\"js\")\r\n        this.handleDelete(record.id)\r\n      },\r\n      handleDelete(id){\r\n        deleteAction(this.url.optPre+this.code+\"/\"+id).then((res)=>{\r\n          if(res.success){\r\n            this.$message.success(res.message)\r\n            this.loadData()\r\n          }else{\r\n            this.$message.warning(res.message)\r\n          }\r\n        })\r\n      },\r\n\r\n      handleFormSuccess(){\r\n        this.loadData()\r\n      },\r\n      // 查询完 schema 后，生成高级查询的字段列表\r\n      handleGetSchema(schema) {\r\n        if (schema && schema.properties) {\r\n          let setField = (array, field) => {\r\n            let type = field.type || 'string'\r\n            type = (type === 'inputNumber' ? 'number' : type)\r\n            array.push({\r\n              type: type,\r\n              value: field.key,\r\n              text: field.title,\r\n              // 额外字典参数\r\n              dictCode: field.dictCode,\r\n              dictTable: field.dictTable,\r\n              dictText: field.dictText,\r\n              options: field.enum || field.options,\r\n              order: field.order,\r\n            })\r\n          }\r\n          let fieldList = []\r\n          for (let key in schema.properties) {\r\n            if (!schema.properties.hasOwnProperty(key)) {\r\n              continue\r\n            }\r\n            let field = schema.properties[key]\r\n            // tab = 子表\r\n            if (field.view === 'tab') {\r\n              let subTable = {\r\n                type: 'sub-table',\r\n                value: field.key,\r\n                text: field.describe,\r\n                children: []\r\n              }\r\n              for (let column of field.columns) {\r\n                setField(subTable.children, column)\r\n              }\r\n              fieldList.push(subTable)\r\n            } else {\r\n              field.key = key\r\n              setField(fieldList, field)\r\n            }\r\n          }\r\n          // 冒泡排序\r\n          for (let i = 0; i < fieldList.length; i++) {\r\n            for (let j = i + 1; j < fieldList.length; j++) {\r\n              let temp1 = fieldList[i]\r\n              let temp2 = fieldList[j]\r\n              if (temp1.order > temp2.order) {\r\n                fieldList[i] = temp2\r\n                fieldList[j] = temp1\r\n              }\r\n            }\r\n          }\r\n          this.superQuery.fieldList = fieldList\r\n        }\r\n      },\r\n      onClearSelected(){\r\n        this.table.selectedRowKeys = []\r\n        this.table.selectionRows = []\r\n      },\r\n      getImgView(text){\r\n        if(text && text.indexOf(\",\")>0){\r\n          text = text.substring(0,text.indexOf(\",\"))\r\n        }\r\n        return window._CONFIG['staticDomainURL']+\"/\"+text\r\n      },\r\n      downloadRowFile(text){\r\n        if(!text){\r\n          this.$message.warning(\"未知的文件\")\r\n          return;\r\n        }\r\n        if(text.indexOf(\",\")>0){\r\n          text = text.substring(0,text.indexOf(\",\"))\r\n        }\r\n        window.open(window._CONFIG['staticDomainURL']+\"/\"+text);//TODO 下载的方法\r\n      },\r\n      handleDelBatch(){\r\n        if(this.table.selectedRowKeys.length<=0){\r\n          this.$message.warning('请选择一条记录！');\r\n          return false;\r\n        }else{\r\n          let ids = \"\";\r\n          let that = this;\r\n          that.table.selectedRowKeys.forEach(function(val) {\r\n            ids+=val+\",\";\r\n          });\r\n          that.$confirm({\r\n            title:\"确认删除\",\r\n            content:\"是否删除选中数据?\",\r\n            onOk: function(){\r\n              that.handleDelete(ids)\r\n              that.onClearSelected();\r\n            }\r\n          });\r\n        }\r\n      },\r\n\r\n      searchByquery(){\r\n        this.loadData(1);\r\n      },\r\n      searchReset(){\r\n        this.queryParam = {}\r\n        this.loadData(1);\r\n      },\r\n      handleToggleSearch(){\r\n        this.toggleSearchStatus = !this.toggleSearchStatus;\r\n      },\r\n      getFormatDate(text){\r\n        if(!text){\r\n          return ''\r\n        }\r\n        let a = text;\r\n        if(a.length>10){\r\n          a = a.substring(0,10);\r\n        }\r\n        return a;\r\n      },\r\n      getImportUrl(){\r\n        return '/online/cgform/api/importXls/'+this.code\r\n      },\r\n      initCgEnhanceJs(enhanceJs){\r\n        //console.log(\"--onlineList-js增强\",enhanceJs)\r\n        if(enhanceJs){\r\n          let Obj = eval (\"(\" + enhanceJs + \")\");\r\n          this.EnhanceJS = new Obj(getAction,postAction,deleteAction);\r\n          this.cgButtonJsHandler('created')\r\n        }else{\r\n          this.EnhanceJS = ''\r\n        }\r\n      },\r\n      initCgButtonList(btnList){\r\n        let linkArr = []\r\n        let buttonArr = []\r\n        if(btnList && btnList.length>0){\r\n          for(let i=0;i<btnList.length;i++){\r\n            let temp = btnList[i]\r\n            if(temp.buttonStyle=='button'){\r\n              buttonArr.push(temp)\r\n            }else if(temp.buttonStyle=='link'){\r\n              linkArr.push(temp)\r\n            }\r\n          }\r\n        }\r\n        this.cgButtonLinkList = [...linkArr]\r\n        this.cgButtonList=[...buttonArr]\r\n      },\r\n      cgButtonJsHandler(buttonCode){\r\n        if(this.EnhanceJS[buttonCode]){\r\n          this.EnhanceJS[buttonCode](this)\r\n        }\r\n      },\r\n      cgButtonActionHandler(buttonCode){\r\n        //处理自定义button的 需要配置该button自定义sql\r\n        if(!this.table.selectedRowKeys || this.table.selectedRowKeys.length==0){\r\n          this.$message.warning(\"请先选中一条记录\")\r\n          return false\r\n        }\r\n        if(this.table.selectedRowKeys.length>1){\r\n          this.$message.warning(\"请只选中一条记录\")\r\n          return false\r\n        }\r\n        let params = {\r\n          formId:this.code,\r\n          buttonCode:buttonCode,\r\n          dataId:this.table.selectedRowKeys[0]\r\n        }\r\n        console.log(\"自定义按钮请求后台参数：\",params)\r\n        postAction(this.url.buttonAction,params).then(res=>{\r\n          if(res.success){\r\n            this.loadData()\r\n            this.$message.success(\"处理完成!\")\r\n          }else{\r\n            this.$message.warning(\"处理失败!\")\r\n          }\r\n        })\r\n\r\n      },\r\n      cgButtonLinkHandler(record,buttonCode,optType){\r\n        if(optType==\"js\"){\r\n          if(this.EnhanceJS[buttonCode]){\r\n            this.EnhanceJS[buttonCode](this,record)\r\n          }\r\n        }else if(optType==\"action\"){\r\n          let params = {\r\n            formId:this.code,\r\n            buttonCode:buttonCode,\r\n            dataId:record.id\r\n          }\r\n          console.log(\"自定义按钮link请求后台参数：\",params)\r\n          postAction(this.url.buttonAction,params).then(res=>{\r\n            if(res.success){\r\n              this.loadData()\r\n              this.$message.success(\"处理完成!\")\r\n            }else{\r\n              this.$message.warning(\"处理失败!\")\r\n            }\r\n          })\r\n        }\r\n      },\r\n      initButtonSwitch(hideColumns){\r\n        Object.keys(this.buttonSwitch).forEach(key=>{\r\n          this.buttonSwitch[key]=true\r\n        })\r\n        if(hideColumns && hideColumns.length>0){\r\n          Object.keys(this.buttonSwitch).forEach(key=>{\r\n            if(hideColumns.indexOf(key)>=0){\r\n              this.buttonSwitch[key]=false\r\n            }\r\n          })\r\n        }\r\n      },\r\n\r\n      // 高级查询\r\n      handleSuperQuery(params, matchType) {\r\n        if (!params || params.length === 0) {\r\n          this.superQuery.params = ''\r\n        } else {\r\n          this.superQuery.params = JSON.stringify(params)\r\n        }\r\n        this.superQuery.matchType = matchType\r\n        this.loadData()\r\n      },\r\n\r\n    }\r\n  }\r\n</script>\r\n<style scoped>\r\n  @import '~@assets/less/common.less';\r\n</style>\r\n<style>\r\n  .ant-card-body .table-operator{\r\n    margin-bottom: 18px;\r\n  }\r\n  .ant-table-tbody .ant-table-row td{\r\n    padding-top:15px;\r\n    padding-bottom:15px;\r\n  }\r\n  .anty-row-operator button{margin: 0 5px}\r\n  .ant-btn-danger{background-color: #ffffff}\r\n\r\n  .anty-img-wrap{height:25px;position: relative;}\r\n  .anty-img-wrap > img{max-height:100%;}\r\n  .ant-modal-cust-warp{height: 100%}\r\n  .ant-modal-cust-warp .ant-modal-body{height:calc(100% - 110px) !important;overflow-y: auto}\r\n  .ant-modal-cust-warp .ant-modal-content{height:90% !important;overflow-y: hidden}\r\n</style>\r\n"],"sourceRoot":"src/views/modules/online/cgform/auto"}]}