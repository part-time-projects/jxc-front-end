{"remainingRequest":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\thread-loader\\dist\\cjs.js!D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js!D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ideaworkspace\\jxc-front-end\\src\\components\\jeecgbiz\\modal\\JSelectUserByDepModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ideaworkspace\\jxc-front-end\\src\\components\\jeecgbiz\\modal\\JSelectUserByDepModal.vue","mtime":1648374777552},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1648365139913},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1648365068269},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":1648364957239}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"D:\\\\ideaworkspace\\\\jxc-front-end\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { filterObj } from '@/utils/util';\nimport { queryDepartTreeList, getUserList, queryUserByDepId } from '@/api/api';\nexport default {\n  name: 'JSelectUserByDepModal',\n  components: {},\n  props: ['modalWidth', 'multi', 'userIds'],\n  data: function data() {\n    return {\n      queryParam: {\n        username: \"\"\n      },\n      columns: [{\n        title: '用户账号',\n        align: 'center',\n        dataIndex: 'username'\n      }, {\n        title: '用户姓名',\n        align: 'center',\n        dataIndex: 'realname'\n      }, {\n        title: '性别',\n        align: 'center',\n        dataIndex: 'sex',\n        customRender: function customRender(text) {\n          if (text === 1) {\n            return '男';\n          } else if (text === 2) {\n            return '女';\n          } else {\n            return text;\n          }\n        }\n      }, {\n        title: '手机',\n        align: 'center',\n        dataIndex: 'phone'\n      }, {\n        title: '部门',\n        align: 'center',\n        dataIndex: 'orgCode'\n      }],\n      scrollTrigger: {},\n      dataSource: [],\n      selectedRowKeys: [],\n      selectUserRows: [],\n      selectUserIds: [],\n      title: '根据部门选择用户',\n      ipagination: {\n        current: 1,\n        pageSize: 10,\n        pageSizeOptions: ['10', '20', '30'],\n        showTotal: function showTotal(total, range) {\n          return range[0] + '-' + range[1] + ' 共' + total + '条';\n        },\n        showQuickJumper: true,\n        showSizeChanger: true,\n        total: 0\n      },\n      isorter: {\n        column: 'createTime',\n        order: 'desc'\n      },\n      selectedDepIds: [],\n      departTree: [],\n      visible: false,\n      form: this.$form.createForm(this),\n      loading: false,\n      expandedKeys: []\n    };\n  },\n  computed: {\n    // 计算属性的 getter\n    getType: function getType() {\n      return this.multi == true ? 'checkbox' : 'radio';\n    }\n  },\n  watch: {\n    userIds: {\n      immediate: true,\n      handler: function handler() {\n        this.initUserNames();\n      }\n    }\n  },\n  created: function created() {\n    // 该方法触发屏幕自适应\n    this.resetScreenSize();\n    this.loadData();\n  },\n  methods: {\n    initUserNames: function initUserNames() {\n      var _this = this;\n\n      if (this.userIds) {\n        // 这里最后加一个 , 的原因是因为无论如何都要使用 in 查询，防止后台进行了模糊匹配，导致查询结果不准确\n        var values = this.userIds.split(',') + ',';\n        getUserList({\n          username: values,\n          pageNo: 1,\n          pageSize: values.length\n        }).then(function (res) {\n          if (res.success) {\n            var selectedRowKeys = [];\n            var realNames = [];\n            res.result.records.forEach(function (user) {\n              realNames.push(user['realname']);\n              selectedRowKeys.push(user['id']);\n            });\n            _this.selectedRowKeys = selectedRowKeys;\n\n            _this.$emit('initComp', realNames.join(','));\n          }\n        });\n      } else {\n        // JSelectUserByDep组件bug issues/I16634\n        this.$emit('initComp', '');\n      }\n    },\n    loadData: function () {\n      var _loadData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(arg) {\n        var _this2 = this;\n\n        var params;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (arg === 1) {\n                  this.ipagination.current = 1;\n                }\n\n                if (!(this.selectedDepIds && this.selectedDepIds.length > 0)) {\n                  _context.next = 6;\n                  break;\n                }\n\n                _context.next = 4;\n                return this.initQueryUserByDepId(this.selectedDepIds);\n\n              case 4:\n                _context.next = 10;\n                break;\n\n              case 6:\n                this.loading = true;\n                params = this.getQueryParams(); //查询条件\n\n                _context.next = 10;\n                return getUserList(params).then(function (res) {\n                  if (res.success) {\n                    _this2.dataSource = res.result.records;\n                    _this2.ipagination.total = res.result.total;\n                  }\n                }).finally(function () {\n                  _this2.loading = false;\n                });\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function loadData(_x) {\n        return _loadData.apply(this, arguments);\n      }\n\n      return loadData;\n    }(),\n    // 触发屏幕自适应\n    resetScreenSize: function resetScreenSize() {\n      var screenWidth = document.body.clientWidth;\n\n      if (screenWidth < 500) {\n        this.scrollTrigger = {\n          x: 800\n        };\n      } else {\n        this.scrollTrigger = {};\n      }\n    },\n    showModal: function showModal() {\n      this.visible = true;\n      this.queryDepartTree();\n      this.initUserNames();\n      this.loadData();\n      this.form.resetFields();\n    },\n    getQueryParams: function getQueryParams() {\n      var param = Object.assign({}, this.queryParam, this.isorter);\n      param.field = this.getQueryField();\n      param.pageNo = this.ipagination.current;\n      param.pageSize = this.ipagination.pageSize;\n      return filterObj(param);\n    },\n    getQueryField: function getQueryField() {\n      var str = 'id,';\n\n      for (var a = 0; a < this.columns.length; a++) {\n        str += ',' + this.columns[a].dataIndex;\n      }\n\n      return str;\n    },\n    searchReset: function searchReset(num) {\n      var that = this;\n\n      if (num !== 0) {\n        that.queryParam = {};\n        that.loadData(1);\n      }\n\n      that.selectedRowKeys = [];\n      that.selectUserIds = [];\n      that.selectedDepIds = [];\n    },\n    close: function close() {\n      this.searchReset(0);\n      this.visible = false;\n    },\n    handleTableChange: function handleTableChange(pagination, filters, sorter) {\n      //TODO 筛选\n      if (Object.keys(sorter).length > 0) {\n        this.isorter.column = sorter.field;\n        this.isorter.order = 'ascend' === sorter.order ? 'asc' : 'desc';\n      }\n\n      this.ipagination = pagination;\n      this.loadData();\n    },\n    handleSubmit: function handleSubmit() {\n      var that = this;\n      this.getSelectUserRows();\n      that.$emit('ok', that.selectUserRows, that.selectUserIds);\n      that.searchReset(0);\n      that.close();\n    },\n    //获取选择用户信息\n    getSelectUserRows: function getSelectUserRows(rowId) {\n      var dataSource = this.dataSource;\n      var userIds = \"\";\n      this.selectUserRows = [];\n\n      for (var i = 0, len = dataSource.length; i < len; i++) {\n        if (this.selectedRowKeys.includes(dataSource[i].id)) {\n          this.selectUserRows.push(dataSource[i]);\n          userIds = userIds + \",\" + dataSource[i].username;\n        }\n      }\n\n      this.selectUserIds = userIds.substring(1);\n    },\n    // 点击树节点,筛选出对应的用户\n    onDepSelect: function onDepSelect(selectedDepIds) {\n      if (selectedDepIds[0] != null) {\n        this.initQueryUserByDepId(selectedDepIds); // 调用方法根据选选择的id查询用户信息\n\n        if (this.selectedDepIds[0] !== selectedDepIds[0]) {\n          this.selectedDepIds = [selectedDepIds[0]];\n        }\n      }\n    },\n    onSelectChange: function onSelectChange(selectedRowKeys, selectionRows) {\n      this.selectedRowKeys = selectedRowKeys;\n      this.selectionRows = selectionRows;\n    },\n    onSearch: function onSearch() {\n      this.loadData(1);\n    },\n    // 根据选择的id来查询用户信息\n    initQueryUserByDepId: function initQueryUserByDepId(selectedDepIds) {\n      var _this3 = this;\n\n      this.loading = true;\n      return queryUserByDepId({\n        id: selectedDepIds.toString()\n      }).then(function (res) {\n        if (res.success) {\n          _this3.dataSource = res.result;\n          _this3.ipagination.total = res.result.length;\n        }\n      }).finally(function () {\n        _this3.loading = false;\n      });\n    },\n    queryDepartTree: function queryDepartTree() {\n      var _this4 = this;\n\n      queryDepartTreeList().then(function (res) {\n        if (res.success) {\n          _this4.departTree = res.result; // 默认展开父节点\n\n          _this4.expandedKeys = _this4.departTree.map(function (item) {\n            return item.id;\n          });\n        }\n      });\n    },\n    modalFormOk: function modalFormOk() {\n      this.loadData();\n    }\n  }\n};",null]}