{"remainingRequest":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\thread-loader\\dist\\cjs.js!D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js!D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ideaworkspace\\jxc-front-end\\src\\components\\chart\\Pie.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ideaworkspace\\jxc-front-end\\src\\components\\chart\\Pie.vue","mtime":1648374777520},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1648365139913},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1648365068269},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":1648364957239}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar DataSet = require('@antv/data-set');\n\nimport { ChartEventMixins } from './mixins/ChartMixins';\nexport default {\n  name: 'Pie',\n  mixins: [ChartEventMixins],\n  props: {\n    title: {\n      type: String,\n      default: ''\n    },\n    height: {\n      type: Number,\n      default: 254\n    },\n    dataSource: {\n      type: Array,\n      default: function _default() {\n        return [{\n          item: '示例一',\n          count: 40\n        }, {\n          item: '示例二',\n          count: 21\n        }, {\n          item: '示例三',\n          count: 17\n        }, {\n          item: '示例四',\n          count: 13\n        }, {\n          item: '示例五',\n          count: 9\n        }];\n      }\n    }\n  },\n  data: function data() {\n    return {\n      scale: [{\n        dataKey: 'percent',\n        min: 0,\n        formatter: '.0%'\n      }],\n      pieStyle: {\n        stroke: '#fff',\n        lineWidth: 1\n      },\n      labelConfig: ['percent', {\n        formatter: function formatter(val, item) {\n          return item.point.item + ': ' + val;\n        }\n      }]\n    };\n  },\n  computed: {\n    data: function data() {\n      var dv = new DataSet.View().source(this.dataSource); // 计算数据百分比\n\n      dv.transform({\n        type: 'percent',\n        field: 'count',\n        dimension: 'item',\n        as: 'percent'\n      });\n      return dv.rows;\n    }\n  }\n};",null]}