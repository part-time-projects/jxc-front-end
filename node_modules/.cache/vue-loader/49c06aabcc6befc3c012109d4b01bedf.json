{"remainingRequest":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ideaworkspace\\jxc-front-end\\src\\views\\modules\\online\\cgreport\\auto\\OnlCgreportAutoList.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ideaworkspace\\jxc-front-end\\src\\views\\modules\\online\\cgreport\\auto\\OnlCgreportAutoList.vue","mtime":1648374778129},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1648365139913},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1648365068269},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":1648364957239}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { HrefJump } from '@/mixins/OnlAutoListMixin'\nimport { getAction,downFile } from '@/api/manage'\nimport { filterMultiDictText } from '@/components/dict/JDictSelectUtil'\nimport {filterObj} from '@/utils/util';\n\nexport default {\n  name: 'OnlCgreportAutoList',\n  mixins: [HrefJump],\n  components: {\n  },\n  data() {\n    return {\n      // 查询参数\n      queryInfo: [],\n      // 查询参数，多个页面的查询参数用 code 作为键来区分\n      queryParamsMap: {},\n      selfParam:{\n      },\n      sorter: {\n        column: '',\n        order: 'desc',\n      },\n      dictOptions: {},\n      toggleSearchStatus: false, // 高级搜索 展开/关闭\n      reportCode: '',\n      description: '在线报表功能测试页面',\n      url: {\n        getColumnsAndData: '/online/cgreport/api/getColumnsAndData/',\n        getQueryInfo: '/online/cgreport/api/getQueryInfo/',\n        getParamsInfo:'/online/cgreport/api/getParamsInfo/'\n      },\n      table: {\n        loading: true,\n        // 表头\n        columns: [],\n        //数据集\n        dataSource: [],\n        // 选择器\n        selectedRowKeys: [],\n        selectionRows: [],\n        scroll: { x: false },\n        // 分页参数\n        pagination: {\n          current: 1,\n          pageSize: 10,\n          pageSizeOptions: ['10', '20', '30'],\n          showTotal: (total, range) => {\n            return range[0] + '-' + range[1] + ' 共' + total + '条'\n          },\n          showQuickJumper: true,\n          showSizeChanger: true,\n          total: 0\n        }\n      },\n      cgreportHeadName:\"\"\n    }\n  },\n  mounted() {\n    this.initParamsInfo()\n    this.initQueryInfo();\n  },\n  watch: {\n    '$route'() {\n      // 刷新参数放到这里去触发，就可以刷新相同界面了\n      this.initParamsInfo()\n      this.initQueryInfo();\n    }\n  },\n  computed: {\n    queryParam: {\n      get() {\n        return this.queryParamsMap[this.reportCode]\n      },\n      set(newVal) {\n        this.$set(this.queryParamsMap, this.reportCode, newVal)\n      }\n    }\n  },\n  methods: {\n    initParamsInfo(){\n      if(!this.$route.params.code){\n        return false\n      }\n      //获取报表ID\n      this.reportCode = this.$route.params.code;\n      if (!this.queryParam) {\n        this.queryParam = {}\n      }\n\n      this.selfParam={}\n      getAction(`${this.url.getParamsInfo}${this.reportCode}`).then((res) => {\n        if (res.success) {\n          if(res.result && res.result.length>0){\n            for(let i of res.result){\n              this.selfParam['self_'+i.paramName]=(!this.$route.query[i.paramName])?\"\":this.$route.query[i.paramName]\n            }\n          }\n        } else {\n          this.$message.warning(res.message)\n        }\n        this.loadData()\n      })\n    },\n\n    initQueryInfo() {\n      if(!this.reportCode){\n        return false\n      }\n      getAction(`${this.url.getQueryInfo}${this.reportCode}`).then((res) => {\n        console.log(\"获取查询条件\", res);\n        if (res.success) {\n          this.queryInfo = res.result\n        } else {\n          this.$message.warning(res.message)\n        }\n      })\n    },\n    loadData(arg) {\n      if(!this.reportCode){\n        return false\n      }\n      if (arg == 1) {\n        this.table.pagination.current = 1\n      }\n      let params = this.getQueryParams();//查询条件\n      console.log(params)\n\n      //获取报表ID\n      console.log(' 动态报表 reportCode ： ' + this.reportCode);\n      this.table.loading = true\n\n      getAction(`${this.url.getColumnsAndData}${this.reportCode}`, params).then(res => {\n        if (res.success) {\n          let { data, columns, cgreportHeadName, dictOptions, fieldHrefSlots } = res.result\n\n          let columnWidth = 230\n          this.dictOptions = dictOptions\n          for(let a=0;a<columns.length;a++){\n            if(columns[a].customRender){\n              let field_name = columns[a].customRender;\n              columns[a].customRender = (t => t ? filterMultiDictText(this.dictOptions[field_name], t + '') : t)\n            }\n            columns.width = columnWidth\n          }\n          this.table.scroll.x = columns.length * columnWidth\n          this.table.columns = [...columns]\n          this.cgreportHeadName = cgreportHeadName\n          this.fieldHrefSlots = fieldHrefSlots\n          if (data) {\n            this.table.pagination.total = Number(data.total)\n            this.table.dataSource = data.records\n          } else {\n            this.table.pagination.total = 0\n            this.table.dataSource = []\n          }\n\n        }else{\n          this.$message.warn('查询失败：'+res.message)\n        }\n\n      }).catch((e) => {\n        console.error(e)\n        this.$message.error('查询失败')\n      }).finally(() => {\n        this.table.loading = false\n      })\n    },\n    getQueryParams() {\n      let param = Object.assign({}, this.queryParam, this.sorter,this.selfParam);\n      param.pageNo = this.table.pagination.current;\n      param.pageSize = this.table.pagination.pageSize;\n      return filterObj(param);\n    },\n    searchByQuery() {\n      this.loadData(1);\n    },\n    searchReset() {\n      this.queryParam = {}\n      this.loadData(1);\n    },\n    handleToggleSearch() {\n      this.toggleSearchStatus = !this.toggleSearchStatus;\n    },\n    exportExcel() {\n      let fileName = this.cgreportHeadName\n      let selfParam = {}\n      for (let queryName in this.$route.query) {\n        if (this.$route.query.hasOwnProperty(queryName)) {\n          let value = this.$route.query[queryName]\n          selfParam['self_' + queryName] = value || ''\n        }\n      }\n      downFile(`/online/cgreport/api/exportXls/${this.reportCode}`, Object.assign(selfParam, this.queryParam)).then((data) => {\n        if (!data) {\n          this.$message.warning(\"文件下载失败\")\n          return\n        }\n        if (typeof window.navigator.msSaveBlob !== 'undefined') {\n          window.navigator.msSaveBlob(new Blob([data]), fileName+'.xls')\n        }else{\n          let url = window.URL.createObjectURL(new Blob([data]))\n          let link = document.createElement('a')\n          link.style.display = 'none'\n          link.href = url\n          link.setAttribute('download', fileName+'.xls')\n          document.body.appendChild(link)\n          link.click()\n          document.body.removeChild(link); //下载完成移除元素\n          window.URL.revokeObjectURL(url); //释放掉blob对象\n        }\n      })\n    },\n    handleChangeInTableSelect(selectedRowKeys, selectionRows) {\n      this.table.selectedRowKeys = selectedRowKeys\n      this.table.selectionRows = selectionRows\n    },\n    handleChangeInTable(pagination, filters, sorter) {\n      //分页、排序、筛选变化时触发\n      if (Object.keys(sorter).length > 0) {\n        this.sorter.column = sorter.field\n        this.sorter.order = 'ascend' == sorter.order ? 'asc' : 'desc'\n      } else {\n        this.sorter.column = null\n        this.sorter.order = null\n      }\n      this.table.pagination = pagination\n      this.loadData()\n    }\n\n  }\n}\n",null]}