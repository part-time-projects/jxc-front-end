{"remainingRequest":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ideaworkspace\\jxc-front-end\\src\\views\\erp\\stock\\modules\\PurInBillModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ideaworkspace\\jxc-front-end\\src\\views\\erp\\stock\\modules\\PurInBillModal.vue","mtime":1648374777646},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1648365139913},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1648365068269},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":1648364957239}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport pick from 'lodash.pick'\nimport { FormTypes,getRefPromise } from '@/utils/JEditableTableUtil'\nimport { JEditableTableMixin } from '@/mixins/JEditableTableMixin'\nimport JDate from '@/components/jeecg/JDate'\nimport JUpload from '@/components/jeecg/JUpload'\nimport JSelectUserByDep from '@/components/jeecgbiz/JSelectUserByDep'\nimport JDictSelectTag from \"@/components/dict/JDictSelectTag\"\nimport { putAction } from '@api/manage'\nimport { billModalMixin } from '../../mixins/billModalMixin'\nimport EditableTableColumnsSetter from \"../../components/EditableTableColumnsSetter\";\nimport { getFormatDate } from '../../utils/util'\nimport { validateEntryNo } from '../../utils/editableTableValidate'\n\nexport default {\n  name: 'PurInBillModal',\n  mixins: [JEditableTableMixin, billModalMixin],\n  components: {\n    EditableTableColumnsSetter,\n    JDate,\n    JUpload,\n    JSelectUserByDep,\n    JDictSelectTag,\n  },\n\n  data() {\n    return {\n      width: '1200px',\n      moreStatus: false,\n\n      // 新增时子表默认添加几行空数据\n      addDefaultRowNum: 1,\n      validatorRules: {\n        stockIoType: {rules: [\n        ]},\n        billNo: {rules: [\n          {required: true, message: '请输入单据编号!'},\n        ]},\n        billDate: {rules: [\n            {required: true, message: '请输入单据日期!'},\n          ]},\n        sourceType: {rules: [\n        ]},\n        sourceId: {rules: [\n        ]},\n        sourceNo: {rules: [\n        ]},\n        clerkId: {rules: [\n        ]},\n        handlerId: {rules: [\n        ]},\n        hasRp: {rules: [\n        ]},\n        isRubric: {rules: [\n        ]},\n        isSameSettle: {rules: [\n        ]},\n        supplierId: {rules: [\n        ]},\n        customerId: {rules: [\n        ]},\n        attachment: {rules: [\n        ]},\n        remark: {rules: [\n        ]},\n        billProcStatus: {rules: [\n        ]},\n        approverId: {rules: [\n        ]},\n        flowId: {rules: [\n        ]},\n        isApproved: {rules: [\n        ]},\n        effectiveTime: {rules: [\n        ]},\n        isVoided: {rules: [\n        ]},\n        isClosed: {rules: [\n        ]},\n        sysOrgCode: {rules: [\n        ]},\n        createBy: {rules: [\n        ]},\n        createTime: {rules: [\n        ]},\n        updateBy: {rules: [\n        ]},\n        updateTime: {rules: [\n        ]},\n      },\n      refKeys: ['stkIoBillEntry', ],\n      tableKeys:['stkIoBillEntry', ],\n      activeKey: 'stkIoBillEntry',\n      // 明细\n      stkIoBillEntryTable: {\n        loading: false,\n        dataSource: [],\n        columns: [\n          {\n            title: '分录号',\n            key: 'entryNo',\n            type: FormTypes.inputNumber,\n            width:\"60px\",\n            validateRules: [\n              { required: true, message: '${title}不能为空' },\n              { pattern: /^[1-9]\\d*$/, message: '请输入零以上的正整数' },\n              { handler: validateEntryNo}],\n          },\n          { //sourceType、sourceEntryId、sourceEntryNo应一起考虑\n            title: '源单分录号',\n            key: 'sourceEntryNo',\n            type: FormTypes.input,\n            width:\"180px\",\n            defaultValue: '',\n          },\n          {\n            title: '物料',\n            key: 'materialId',\n            type: FormTypes.sel_search,\n            dictCode:\"bas_material,name,id\",\n            width:\"200px\",\n            placeholder: '请输入${title}',\n            defaultValue: '',\n            validateRules: [{ required: true, message: '${title}不能为空' }],\n            options:[],\n          },\n          {\n            title: '计量单位',\n            key: 'unitId',\n            type: FormTypes.select,\n            dictCode:\"bas_measure_unit,name,id\",\n            width:\"100px\",\n            placeholder: '请输入${title}',\n            defaultValue: '',\n            validateRules: [{ required: true, message: '${title}不能为空' }],\n            options:[],\n          },\n          {\n            title: '入库数量',\n            key: 'qty',\n            type: FormTypes.inputNumber,\n            statistics: \"true\",\n            width:\"100px\",\n            placeholder: '请输入${title}',\n            defaultValue: '',\n            validateRules: [{ required: true, message: '${title}不能为空' }],\n          },\n          {\n            title: '入库成本',\n            key: 'cost',\n            type: FormTypes.inputNumber,\n            statistics: \"true\",\n            width:\"100px\",\n            placeholder: '请输入${title}',\n            defaultValue: '',\n            validateRules: [{ required: true, message: '${title}不能为空' }],\n          },\n          {\n            title: '成本含税',\n            key: 'isInclTax',\n            type: FormTypes.select,\n            dictCode:\"yn\",\n            width:\"80px\",\n            placeholder: '请输入${title}',\n            defaultValue: '',\n            options:[],\n            validateRules: [{ required: true, message: '${title}不能为空' }],\n          },\n          {\n            title: '仓库',\n            key: 'warehouseId',\n            type: FormTypes.select,\n            dictCode:\"bas_warehouse,name,id\",\n            width:\"150px\",\n            placeholder: '请输入${title}',\n            defaultValue: '',\n            options:[],\n            validateRules: [{ required: true, message: '${title}不能为空' }],\n          },\n          {\n            title: '批次号',\n            key: 'batchNo',\n            type: FormTypes.input,\n            width:\"200px\",\n            placeholder: '请输入${title}',\n            defaultValue: '',\n            validateRules: [{ required: true, message: '${title}不能为空' }],\n          },\n          {\n            title: '结算数量',\n            key: 'settleQty',\n            type: FormTypes.inputNumber,\n            statistics: \"true\",\n            width:\"100px\",\n            placeholder: '请输入${title}',\n            defaultValue: '',\n          },\n          {\n            title: '含税单价',\n            key: 'settlePrice',\n            type: FormTypes.inputNumber,\n            width:\"100px\",\n            placeholder: '请输入${title}',\n            defaultValue: '',\n          },\n          {\n            title: '税率%',\n            key: 'taxRate',\n            type: FormTypes.inputNumber,\n            width:\"100px\",\n            placeholder: '请输入${title}',\n            defaultValue: '',\n          },\n          {\n            title: '税额',\n            key: 'tax',\n            type: FormTypes.inputNumber,\n            statistics: \"true\",\n            width:\"100px\",\n            placeholder: '请输入${title}',\n            defaultValue: '',\n          },\n          {\n            title: '折让金额',\n            key: 'discountAmt',\n            type: FormTypes.inputNumber,\n            statistics: \"true\",\n            width:\"100px\",\n            placeholder: '请输入${title}',\n            defaultValue: '0',\n          },\n          {\n            title: '折让税额',\n            key: 'discountTax',\n            type: FormTypes.inputNumber,\n            width:\"100px\",\n            placeholder: '请输入${title}',\n            defaultValue: '0',\n          },\n          {\n            title: '结算金额',\n            key: 'settleAmt',\n            type: FormTypes.inputNumber,\n            statistics: \"true\",\n            width:\"120px\",\n            placeholder: '请输入${title}',\n            defaultValue: '',\n            validateRules: [{ required: true, message: '${title}不能为空' }],\n          },\n          {\n            title: '已开票数量',\n            key: 'invoicedQty',\n            type: FormTypes.input,\n            statistics: \"true\",\n            width:\"120px\",\n            defaultValue: '',\n            disabled:true,\n          },\n          {\n            title: '已开票金额',\n            key: 'invoicedAmt',\n            type: FormTypes.input,\n            statistics: \"true\",\n            width:\"120px\",\n            defaultValue: '',\n            disabled:true,\n          },\n          {\n            title: '备注',\n            key: 'remark',\n            type: FormTypes.input,\n            width:\"200px\",\n            placeholder: '请输入${title}',\n            defaultValue: '',\n          },\n          {\n            title: '备注2',\n            key: 'remark2',\n            type: FormTypes.input,\n            width:\"200px\",\n            placeholder: '请输入${title}',\n            defaultValue: '',\n          },\n          {\n            title: '备注3',\n            key: 'remark3',\n            type: FormTypes.input,\n            width:\"200px\",\n            placeholder: '请输入${title}',\n            defaultValue: '',\n          },\n          {\n            title: '',\n            key: 'flag',\n            type: FormTypes.input,\n            width:\"1px\",\n            placeholder: '',\n            defaultValue: '',\n          },\n        ],\n      },\n      url: {\n        add: \"/stock/stkIoBill/add\",\n        edit: \"/stock/stkIoBill/edit\",\n        approve: \"/stock/stkIoBill/approve\",\n        stkIoBillEntry: {\n          list: '/stock/stkIoBill/queryEntryByMainId'\n        },\n      }\n    }\n  },\n\n  methods: {\n    getAllTable() {\n      let values = this.tableKeys.map(key => getRefPromise(this, key))\n      return Promise.all(values)\n    },\n\n    addInit() {\n      //采购入库\n      this.model.stockIoType = '101'\n      this.model.isRubric = 0\n      //是否有往来\n      this.model.hasRp = 1\n      //结算是否同入库（或取自系统参数）\n      this.model.isSameSettle = 0\n      //处理状态：编辑中\n      this.model.billProcStatus = '12'\n\n      // 请求后台的填值规则接口地址\n      const url = '/sys/fillRule/executeRuleByCode/'\n      const ruleCode = 'stock_io_bill_no'\n      const that = this\n      putAction(url + ruleCode, {}).then(res => {\n        // 执行成功，获取返回的值，并赋到页面上\n        if (res.success) {\n          that.model.billNo = res.result;\n          that.$nextTick(() => {\n            that.form.setFieldsValue({'billNo':res.result, 'billDate':getFormatDate()});\n\n            //初始空白行增加时，billNo可能还未生成！\n            let { values } = this.$refs.stkIoBillEntry.getValuesSync({ validate: false});\n            for (let v of values) {\n              that.$refs.stkIoBillEntry.setValues([{rowKey: v.id, values: {batchNo: that.model.billNo +'-' + v.entryNo}}]);\n            }\n          })\n        }\n      })\n    },\n    /** 调用完edit()方法之后会自动调用此方法 */\n    editAfter() {\n      if (this.action === 'add') {\n          this.addInit()\n      }\n\n      let fieldval = pick(this.model,'billNo','billDate','sourceType','sourceId','sourceNo','clerkId','handlerId','isRubric','isSameSettle','supplierId','customerId','attachment','remark','billProcStatus','approverId','flowId','isApproved','effectiveTime','isVoided','isClosed','sysOrgCode','createBy','createTime','updateBy','updateTime')\n      this.$nextTick(() => {\n        this.form.setFieldsValue(fieldval)\n        this.onIsSameSettleChange(this.model.isSameSettle.toString())\n      })\n      // 加载子表数据\n      if (this.model.id) {\n        let params = { id: this.model.id }\n        this.requestSubTableData(this.url.stkIoBillEntry.list, params, this.stkIoBillEntryTable)\n      }\n    },\n\n    /** 整理成formData */\n    classifyIntoFormData(allValues) {\n      let main = Object.assign(this.model, allValues.formValue)\n\n      return {\n        ...main, // 展开\n        stkIoBillEntryList: allValues.tablesValue[0].values,\n      }\n    },\n\n    validateError(msg){\n      this.$message.error(msg)\n    },\n\n    popupCallback(row){\n      this.form.setFieldsValue(pick(row,'billNo','billDate','sourceType','sourceId','sourceNo','clerkId','handlerId','isRubric','isSameSettle','supplierId','customerId','attachment','remark','billProcStatus','approverId','flowId','isApproved','effectiveTime','isVoided','isClosed','sysOrgCode','createBy','createTime','updateBy','updateTime'))\n    },\n\n\n    onIsSameSettleChange(val) {\n      this.$refs.stkIoBillEntry.columns.forEach(function (item, i, array ) {\n        if (item.key === \"settleQty\" || item.key === \"settleAmt\") {\n          item.disabled = (val === '1');\n        }\n      });\n\n      if (val === '1') {\n        let { error, values } = this.$refs.stkIoBillEntry.getValuesSync({ validate: false})\n        for (let v of values) {\n          this.$refs.stkIoBillEntry.setValues([{rowKey: v.id, values: {settleQty: v.qty, settleAmt:v.cost}}]);\n        }\n      }\n    },\n\n    onInEntryAdded(event){\n      this.onEntryAdded(event);\n\n      const { row, target } = event\n      let { values } = target.getValuesSync({ validate: false, rowIds: [row.id] });\n      let batchNo =  this.model.billNo + \"-\" + values[0].entryNo;\n      target.setValues([{rowKey: row.id, values: {batchNo: batchNo, flag: \"1\"}}]);\n    },\n\n    //单元值改变一个字符就触发一次\n    onValueChange(event) {\n      const { type, row, column, value, target } = event\n\n      //flag: 是否自动设置的batchNo\n      if (row.flag == null || row.flag === \"\") {\n        target.setValues([{rowKey: row.id, values: {flag: \"0\"}}]);\n      }\n      if (column.key === \"entryNo\" && (row.flag === \"1\" || row.batchNo === \"\" || row.batchNo == null)) {\n        target.setValues([{rowKey: row.id, values: {batchNo: this.model.billNo + \"-\" + value, flag: \"1\"}}]);\n      }\n      else if (column.key === \"batchNo\") {\n        target.setValues([{rowKey: row.id, values: {flag: \"0\"}}]);\n      }\n\n      //联动\n      //触发：入库数量, 联动列结算数量\n      if (column.key === 'qty') {\n        if (this.form.getFieldValue(\"isSameSettle\") === '1') {\n          target.setValues([{rowKey: row.id, values: {settleQty: value}}]);\n        }\n      }\n      //触发：入库成本, 联动：结算金额\n      else if (column.key === 'cost') {\n        if (this.form.getFieldValue(\"isSameSettle\") === '1') {\n          target.setValues([{rowKey: row.id, values: {settleAmt: value}}]);\n        }\n      }\n    },\n\n  },\n\n}\n",null]}