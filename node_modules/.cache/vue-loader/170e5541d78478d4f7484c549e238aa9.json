{"remainingRequest":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ideaworkspace\\jxc-front-end\\src\\views\\erp\\bas\\modules\\BasMaterialModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ideaworkspace\\jxc-front-end\\src\\views\\erp\\bas\\modules\\BasMaterialModal.vue","mtime":1651672150631},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1648365139913},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1648365068269},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":1648364957239}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport { httpAction } from '@/api/manage'\nimport pick from 'lodash.pick'\nimport JDate from '@/components/jeecg/JDate'\nimport JDictSelectTag from \"@/components/dict/JDictSelectTag\"\nimport JTreeSelect from '@/components/jeecg/JTreeSelect'\n\nexport default {\n  name: \"BasMaterialModal\",\n  components: { \n    JDate,\n    JDictSelectTag,\n    JTreeSelect\n  },\n  data () {\n    return {\n      action: \"\",\n      form: this.$form.createForm(this),\n      title:\"操作\",\n      width:600,\n      visible: false,\n      model: {},\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 6 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 17 },\n      },\n      confirmLoading: false,\n      validatorRules: {\n        code: {\n          rules: [\n            { required: true, message: '请输入编码!'},\n          ]\n        },\n        name: {\n          rules: [\n            { required: true, message: '请输入名称!'},\n          ]\n        },\n        unitId: {\n          rules: [\n            { required: true, message: '请输入计量单位!'},\n          ]\n        },\n        categoryId: {\n          rules: [\n            { required: true, message: '请输入分类!'},\n          ]\n        },\n        isEnabled: {\n          rules: [\n            { required: true, message: '请输入是否启用!'},\n          ]\n        },\n        salePrice: {\n          rules: [\n            { pattern: /^(([1-9][0-9]*)|([0]\\.\\d{0,2}|[1-9][0-9]*\\.\\d{0,2}))$/, message: '请输入正确的金额!'},\n          ]\n        },\n      },\n      url: {\n        add: \"/bas/basMaterial/add\",\n        edit: \"/bas/basMaterial/edit\",\n      }\n    }\n  },\n\n  computed: {\n    readOnly: function() {\n      return this.action !== \"add\" && this.action !== \"edit\"\n    }\n  },\n\n  created () {\n  },\n\n  methods: {\n    add () {\n      this.edit({});\n    },\n    edit (record) {\n      this.form.resetFields();\n      this.model = Object.assign({}, record);\n      this.visible = true;\n      this.$nextTick(() => {\n        this.form.setFieldsValue(pick(this.model,'code','name','categoryId','isEnabled',\n          'model','unitId','salePrice','taxCode','remark','createBy','createTime','updateBy','updateTime'))\n      })\n    },\n    close () {\n      this.$emit('close');\n      this.visible = false;\n    },\n    handleOk () {\n      const that = this;\n      // 触发表单验证\n      this.form.validateFields((err, values) => {\n        if (!err) {\n          that.confirmLoading = true;\n          let httpurl = '';\n          let method = '';\n          if(!this.model.id){\n            httpurl+=this.url.add;\n            method = 'post';\n          }else{\n            httpurl+=this.url.edit;\n             method = 'put';\n          }\n          let formData = Object.assign(this.model, values);\n          console.log(\"表单提交数据\",formData)\n          httpAction(httpurl,formData,method).then((res)=>{\n            if(res.success){\n              that.$message.success(res.message);\n              that.$emit('ok');\n            }else{\n              that.$message.warning(res.message);\n            }\n          }).finally(() => {\n            that.confirmLoading = false;\n            that.close();\n          })\n        }\n       \n      })\n    },\n    handleCancel () {\n      this.close()\n    },\n    popupCallback(row){\n      this.form.setFieldsValue(pick(row,'code','name','categoryId','isEnabled',\n        'model','unitId','salePrice','taxCode','remark','createBy','createTime','updateBy','updateTime'))\n    },\n\n  }\n}\n",null]}