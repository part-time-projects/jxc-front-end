{"remainingRequest":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ideaworkspace\\jxc-front-end\\src\\components\\jeecg\\minipop\\JFilePop.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ideaworkspace\\jxc-front-end\\src\\components\\jeecg\\minipop\\JFilePop.vue","mtime":1648374777543},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1648365068269},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":1648364957239}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport JUpload from '@/components/jeecg/JUpload'\nimport { getFileAccessHttpUrl } from '@/api/manage';\n\nconst getFileName=(path)=>{\n  if(path.lastIndexOf(\"\\\\\")>=0){\n    let reg=new RegExp(\"\\\\\\\\\",\"g\");\n    path = path.replace(reg,\"/\");\n  }\n  return path.substring(path.lastIndexOf(\"/\")+1);\n}\n\nexport default {\n  name: 'JFilePop',\n  components: { JUpload },\n  props:{\n    title:{\n      type:String,\n      default:'',\n      required:false\n    },\n    position:{\n      type:String,\n      default:'right',\n      required:false\n    },\n    height:{\n      type:Number,\n      default:200,\n      required:false\n    },\n    width:{\n      type:Number,\n      default:520,\n      required:false\n    },\n\n    popContainer:{\n      type:String,\n      default:'',\n      required:false\n    },\n    disabled:{\n      type:Boolean,\n      default:false,\n      required:false\n    }\n  },\n  data(){\n    return {\n      visible:false,\n      filePath:'',\n      id:'',\n      fileType:'file'\n\n    }\n  },\n  methods:{\n    handleChange(value){\n      this.filePath = value;\n    },\n    show(id,value,flag){\n      this.id = id;\n      this.filePath = value;\n      this.visible=true\n      if(flag === 'img'){\n        this.fileType = 'image'\n      }else{\n        this.fileType = 'file'\n      }\n\n    },\n    ok(){\n      if(!this.filePath){\n        this.$message.error(\"未上传任何文件\")\n        return false;\n      }\n      let arr = this.filePath.split(\",\")\n      let obj = {\n        name:getFileName(arr[0]),\n        url:getFileAccessHttpUrl(arr[0]),\n        path:this.filePath,\n        status: 'done',\n        id:this.id\n      }\n      this.$emit('ok',obj)\n      this.visible=false\n    },\n    close(){\n      this.visible=false\n    }\n  }\n}\n",{"version":3,"sources":["JFilePop.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"JFilePop.vue","sourceRoot":"src/components/jeecg/minipop","sourcesContent":["<template>\r\n  <div>\r\n    <a-modal\r\n      title=\"文件上传\"\r\n      :width=\"width\"\r\n      :visible=\"visible\"\r\n      @ok=\"ok\"\r\n      cancelText=\"取消\"\r\n      @cancel=\"close\">\r\n      <!--style=\"top: 20px;\"-->\r\n      <j-upload :file-type=\"fileType\" :value=\"filePath\" @change=\"handleChange\" :disabled=\"disabled\"></j-upload>\r\n    </a-modal>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import JUpload from '@/components/jeecg/JUpload'\r\n  import { getFileAccessHttpUrl } from '@/api/manage';\r\n\r\n  const getFileName=(path)=>{\r\n    if(path.lastIndexOf(\"\\\\\")>=0){\r\n      let reg=new RegExp(\"\\\\\\\\\",\"g\");\r\n      path = path.replace(reg,\"/\");\r\n    }\r\n    return path.substring(path.lastIndexOf(\"/\")+1);\r\n  }\r\n\r\n  export default {\r\n    name: 'JFilePop',\r\n    components: { JUpload },\r\n    props:{\r\n      title:{\r\n        type:String,\r\n        default:'',\r\n        required:false\r\n      },\r\n      position:{\r\n        type:String,\r\n        default:'right',\r\n        required:false\r\n      },\r\n      height:{\r\n        type:Number,\r\n        default:200,\r\n        required:false\r\n      },\r\n      width:{\r\n        type:Number,\r\n        default:520,\r\n        required:false\r\n      },\r\n\r\n      popContainer:{\r\n        type:String,\r\n        default:'',\r\n        required:false\r\n      },\r\n      disabled:{\r\n        type:Boolean,\r\n        default:false,\r\n        required:false\r\n      }\r\n    },\r\n    data(){\r\n      return {\r\n        visible:false,\r\n        filePath:'',\r\n        id:'',\r\n        fileType:'file'\r\n\r\n      }\r\n    },\r\n    methods:{\r\n      handleChange(value){\r\n        this.filePath = value;\r\n      },\r\n      show(id,value,flag){\r\n        this.id = id;\r\n        this.filePath = value;\r\n        this.visible=true\r\n        if(flag === 'img'){\r\n          this.fileType = 'image'\r\n        }else{\r\n          this.fileType = 'file'\r\n        }\r\n\r\n      },\r\n      ok(){\r\n        if(!this.filePath){\r\n          this.$message.error(\"未上传任何文件\")\r\n          return false;\r\n        }\r\n        let arr = this.filePath.split(\",\")\r\n        let obj = {\r\n          name:getFileName(arr[0]),\r\n          url:getFileAccessHttpUrl(arr[0]),\r\n          path:this.filePath,\r\n          status: 'done',\r\n          id:this.id\r\n        }\r\n        this.$emit('ok',obj)\r\n        this.visible=false\r\n      },\r\n      close(){\r\n        this.visible=false\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]}]}