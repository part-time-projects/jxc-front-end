{"remainingRequest":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ideaworkspace\\jxc-front-end\\src\\views\\jeecg\\helloworld.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ideaworkspace\\jxc-front-end\\src\\views\\jeecg\\helloworld.vue","mtime":1648374778096},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1648365139913},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1648365068269},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":1648364957239}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { getAction } from '@/api/manage'\nexport default {\n  props: ['sex','name'],\n  data () {\n    return {\n      formLayout: 'horizontal',\n      form: this.$form.createForm(this),\n      areaOptions:[]\n    }\n  },\n  methods: {\n    handleSubmit (e) {\n      e.preventDefault()\n      this.form.validateFields((err, values) => {\n        if (!err) {\n          console.log('Received values of form: ', values)\n        }\n      })\n    },\n    handleSelectChange (value) {\n      console.log(value)\n      this.form.setFieldsValue({\n        note: `Hi, ${value === 'male' ? 'man' : 'lady'}!`,\n      })\n    },\n    onChange(value, selectedOptions) {\n      console.log(value, selectedOptions);\n    },\n    filter(inputValue, path) {\n      return (path.some(option => (option.label).toLowerCase().indexOf(inputValue.toLowerCase()) > -1));\n    },\n  },\n  created (){\n    console.log('============= online href common props ============= ');\n    console.log('props sex: ',this.sex);\n    console.log('props name: ',this.name);\n\n    getAction('/api/area').then((res) => {\n        console.log(\"------------\")\n        console.log(res)\n        this.areaOptions = res;\n    })\n  },\n  watch: {\n    $route: {\n      immediate: true,\n      handler() {\n        console.log('============= online href  $route props ============= ');\n        let sex = this.$route.query.sex\n        console.log('$route sex: ', sex);\n      }\n    }\n  },\n}\n",null]}