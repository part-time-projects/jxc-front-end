{"remainingRequest":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ideaworkspace\\jxc-front-end\\src\\views\\modules\\online\\cgreport\\auto\\OnlCgreportAutoList.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ideaworkspace\\jxc-front-end\\src\\views\\modules\\online\\cgreport\\auto\\OnlCgreportAutoList.vue","mtime":1648374778129},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1648365068269},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":1648364957239}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { HrefJump } from '@/mixins/OnlAutoListMixin'\nimport { getAction,downFile } from '@/api/manage'\nimport { filterMultiDictText } from '@/components/dict/JDictSelectUtil'\nimport {filterObj} from '@/utils/util';\n\nexport default {\n  name: 'OnlCgreportAutoList',\n  mixins: [HrefJump],\n  components: {\n  },\n  data() {\n    return {\n      // 查询参数\n      queryInfo: [],\n      // 查询参数，多个页面的查询参数用 code 作为键来区分\n      queryParamsMap: {},\n      selfParam:{\n      },\n      sorter: {\n        column: '',\n        order: 'desc',\n      },\n      dictOptions: {},\n      toggleSearchStatus: false, // 高级搜索 展开/关闭\n      reportCode: '',\n      description: '在线报表功能测试页面',\n      url: {\n        getColumnsAndData: '/online/cgreport/api/getColumnsAndData/',\n        getQueryInfo: '/online/cgreport/api/getQueryInfo/',\n        getParamsInfo:'/online/cgreport/api/getParamsInfo/'\n      },\n      table: {\n        loading: true,\n        // 表头\n        columns: [],\n        //数据集\n        dataSource: [],\n        // 选择器\n        selectedRowKeys: [],\n        selectionRows: [],\n        scroll: { x: false },\n        // 分页参数\n        pagination: {\n          current: 1,\n          pageSize: 10,\n          pageSizeOptions: ['10', '20', '30'],\n          showTotal: (total, range) => {\n            return range[0] + '-' + range[1] + ' 共' + total + '条'\n          },\n          showQuickJumper: true,\n          showSizeChanger: true,\n          total: 0\n        }\n      },\n      cgreportHeadName:\"\"\n    }\n  },\n  mounted() {\n    this.initParamsInfo()\n    this.initQueryInfo();\n  },\n  watch: {\n    '$route'() {\n      // 刷新参数放到这里去触发，就可以刷新相同界面了\n      this.initParamsInfo()\n      this.initQueryInfo();\n    }\n  },\n  computed: {\n    queryParam: {\n      get() {\n        return this.queryParamsMap[this.reportCode]\n      },\n      set(newVal) {\n        this.$set(this.queryParamsMap, this.reportCode, newVal)\n      }\n    }\n  },\n  methods: {\n    initParamsInfo(){\n      if(!this.$route.params.code){\n        return false\n      }\n      //获取报表ID\n      this.reportCode = this.$route.params.code;\n      if (!this.queryParam) {\n        this.queryParam = {}\n      }\n\n      this.selfParam={}\n      getAction(`${this.url.getParamsInfo}${this.reportCode}`).then((res) => {\n        if (res.success) {\n          if(res.result && res.result.length>0){\n            for(let i of res.result){\n              this.selfParam['self_'+i.paramName]=(!this.$route.query[i.paramName])?\"\":this.$route.query[i.paramName]\n            }\n          }\n        } else {\n          this.$message.warning(res.message)\n        }\n        this.loadData()\n      })\n    },\n\n    initQueryInfo() {\n      if(!this.reportCode){\n        return false\n      }\n      getAction(`${this.url.getQueryInfo}${this.reportCode}`).then((res) => {\n        console.log(\"获取查询条件\", res);\n        if (res.success) {\n          this.queryInfo = res.result\n        } else {\n          this.$message.warning(res.message)\n        }\n      })\n    },\n    loadData(arg) {\n      if(!this.reportCode){\n        return false\n      }\n      if (arg == 1) {\n        this.table.pagination.current = 1\n      }\n      let params = this.getQueryParams();//查询条件\n      console.log(params)\n\n      //获取报表ID\n      console.log(' 动态报表 reportCode ： ' + this.reportCode);\n      this.table.loading = true\n\n      getAction(`${this.url.getColumnsAndData}${this.reportCode}`, params).then(res => {\n        if (res.success) {\n          let { data, columns, cgreportHeadName, dictOptions, fieldHrefSlots } = res.result\n\n          let columnWidth = 230\n          this.dictOptions = dictOptions\n          for(let a=0;a<columns.length;a++){\n            if(columns[a].customRender){\n              let field_name = columns[a].customRender;\n              columns[a].customRender = (t => t ? filterMultiDictText(this.dictOptions[field_name], t + '') : t)\n            }\n            columns.width = columnWidth\n          }\n          this.table.scroll.x = columns.length * columnWidth\n          this.table.columns = [...columns]\n          this.cgreportHeadName = cgreportHeadName\n          this.fieldHrefSlots = fieldHrefSlots\n          if (data) {\n            this.table.pagination.total = Number(data.total)\n            this.table.dataSource = data.records\n          } else {\n            this.table.pagination.total = 0\n            this.table.dataSource = []\n          }\n\n        }else{\n          this.$message.warn('查询失败：'+res.message)\n        }\n\n      }).catch((e) => {\n        console.error(e)\n        this.$message.error('查询失败')\n      }).finally(() => {\n        this.table.loading = false\n      })\n    },\n    getQueryParams() {\n      let param = Object.assign({}, this.queryParam, this.sorter,this.selfParam);\n      param.pageNo = this.table.pagination.current;\n      param.pageSize = this.table.pagination.pageSize;\n      return filterObj(param);\n    },\n    searchByQuery() {\n      this.loadData(1);\n    },\n    searchReset() {\n      this.queryParam = {}\n      this.loadData(1);\n    },\n    handleToggleSearch() {\n      this.toggleSearchStatus = !this.toggleSearchStatus;\n    },\n    exportExcel() {\n      let fileName = this.cgreportHeadName\n      let selfParam = {}\n      for (let queryName in this.$route.query) {\n        if (this.$route.query.hasOwnProperty(queryName)) {\n          let value = this.$route.query[queryName]\n          selfParam['self_' + queryName] = value || ''\n        }\n      }\n      downFile(`/online/cgreport/api/exportXls/${this.reportCode}`, Object.assign(selfParam, this.queryParam)).then((data) => {\n        if (!data) {\n          this.$message.warning(\"文件下载失败\")\n          return\n        }\n        if (typeof window.navigator.msSaveBlob !== 'undefined') {\n          window.navigator.msSaveBlob(new Blob([data]), fileName+'.xls')\n        }else{\n          let url = window.URL.createObjectURL(new Blob([data]))\n          let link = document.createElement('a')\n          link.style.display = 'none'\n          link.href = url\n          link.setAttribute('download', fileName+'.xls')\n          document.body.appendChild(link)\n          link.click()\n          document.body.removeChild(link); //下载完成移除元素\n          window.URL.revokeObjectURL(url); //释放掉blob对象\n        }\n      })\n    },\n    handleChangeInTableSelect(selectedRowKeys, selectionRows) {\n      this.table.selectedRowKeys = selectedRowKeys\n      this.table.selectionRows = selectionRows\n    },\n    handleChangeInTable(pagination, filters, sorter) {\n      //分页、排序、筛选变化时触发\n      if (Object.keys(sorter).length > 0) {\n        this.sorter.column = sorter.field\n        this.sorter.order = 'ascend' == sorter.order ? 'asc' : 'desc'\n      } else {\n        this.sorter.column = null\n        this.sorter.order = null\n      }\n      this.table.pagination = pagination\n      this.loadData()\n    }\n\n  }\n}\n",{"version":3,"sources":["OnlCgreportAutoList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"OnlCgreportAutoList.vue","sourceRoot":"src/views/modules/online/cgreport/auto","sourcesContent":["<template>\r\n  <a-card :bordered=\"false\" style=\"height: 100%\">\r\n\r\n    <div class=\"table-page-search-wrapper\">\r\n      <a-form layout=\"inline\">\r\n        <a-row :gutter=\"24\" v-if=\"queryInfo && queryInfo.length>0\">\r\n          <template v-for=\"(item,index) in queryInfo\">\r\n            <template v-if=\" item.hidden==='1' \">\r\n              <a-col v-if=\"item.view.indexOf('Date')>=0\" :md=\"12\" :sm=\"16\" :key=\" 'query'+index \" v-show=\"toggleSearchStatus\">\r\n                <onl-cgreport-query-form-item :queryParam=\"queryParam\" :item=\"item\" :dictOptions=\"dictOptions\"></onl-cgreport-query-form-item>\r\n              </a-col>\r\n              <a-col v-else :md=\"6\" :sm=\"8\" :key=\" 'query'+index \" v-show=\"toggleSearchStatus\">\r\n                <onl-cgreport-query-form-item :queryParam=\"queryParam\" :item=\"item\" :dictOptions=\"dictOptions\"></onl-cgreport-query-form-item>\r\n              </a-col>\r\n            </template>\r\n            <template v-else>\r\n              <a-col v-if=\"item.view.indexOf('Date')>=0\" :md=\"12\" :sm=\"16\" :key=\" 'query'+index \">\r\n                <onl-cgreport-query-form-item :queryParam=\"queryParam\" :item=\"item\" :dictOptions=\"dictOptions\"></onl-cgreport-query-form-item>\r\n              </a-col>\r\n              <a-col v-else :md=\"6\" :sm=\"8\" :key=\" 'query'+index \">\r\n                <onl-cgreport-query-form-item :queryParam=\"queryParam\" :item=\"item\" :dictOptions=\"dictOptions\"></onl-cgreport-query-form-item>\r\n              </a-col>\r\n            </template>\r\n          </template>\r\n\r\n          <a-col :md=\"6\" :sm=\"8\">\r\n            <span style=\"float: left;overflow: hidden;\" class=\"table-page-search-submitButtons\">\r\n              <a-button type=\"primary\" @click=\"searchByQuery\" icon=\"search\">查询</a-button>\r\n              <a-button type=\"primary\" @click=\"searchReset\" icon=\"reload\" style=\"margin-left: 8px\">重置</a-button>\r\n              <a @click=\"handleToggleSearch\" style=\"margin-left: 8px\">\r\n                {{ toggleSearchStatus ? '收起' : '展开' }}\r\n                <a-icon :type=\"toggleSearchStatus ? 'up' : 'down'\"/>\r\n              </a>\r\n            </span>\r\n          </a-col>\r\n        </a-row>\r\n      </a-form>\r\n    </div>\r\n\r\n\r\n    <div class=\"table-operator\" style=\"margin-bottom: 10px\">\r\n      <!--      <a-button type=\"primary\" icon=\"plus\" @click=\"exportExcel\">导出</a-button>-->\r\n    </div>\r\n\r\n\r\n    <a-table\r\n      ref=\"table\"\r\n      size=\"middle\"\r\n      bordered\r\n      rowKey=\"id\"\r\n      :columns=\"table.columns\"\r\n      :dataSource=\"table.dataSource\"\r\n      :pagination=\"table.pagination\"\r\n      :loading=\"table.loading\"\r\n      :scroll=\"table.scroll\"\r\n      :rowSelection=\"{fixed:true, selectedRowKeys: table.selectedRowKeys, onChange: handleChangeInTableSelect}\"\r\n      @change=\"handleChangeInTable\"\r\n      style=\"min-height: 300px\"\r\n    >\r\n\r\n      <!-- 支持链接href跳转 -->\r\n      <template\r\n        v-for=\"field of fieldHrefSlots\"\r\n        :slot=\"field.slotName\"\r\n        slot-scope=\"text, record\"\r\n      >\r\n        <a @click=\"handleClickFieldHref(field,record)\">{{ text }}</a>\r\n      </template>\r\n\r\n    </a-table>\r\n\r\n    <!-- 跳转Href的动态组件方式 -->\r\n    <a-modal v-bind=\"hrefComponent.model\" v-on=\"hrefComponent.on\">\r\n      <component :is=\"hrefComponent.is\" v-bind=\"hrefComponent.params\"/>\r\n    </a-modal>\r\n\r\n  </a-card>\r\n</template>\r\n\r\n<script>\r\n  import { HrefJump } from '@/mixins/OnlAutoListMixin'\r\n  import { getAction,downFile } from '@/api/manage'\r\n  import { filterMultiDictText } from '@/components/dict/JDictSelectUtil'\r\n  import {filterObj} from '@/utils/util';\r\n\r\n  export default {\r\n    name: 'OnlCgreportAutoList',\r\n    mixins: [HrefJump],\r\n    components: {\r\n    },\r\n    data() {\r\n      return {\r\n        // 查询参数\r\n        queryInfo: [],\r\n        // 查询参数，多个页面的查询参数用 code 作为键来区分\r\n        queryParamsMap: {},\r\n        selfParam:{\r\n        },\r\n        sorter: {\r\n          column: '',\r\n          order: 'desc',\r\n        },\r\n        dictOptions: {},\r\n        toggleSearchStatus: false, // 高级搜索 展开/关闭\r\n        reportCode: '',\r\n        description: '在线报表功能测试页面',\r\n        url: {\r\n          getColumnsAndData: '/online/cgreport/api/getColumnsAndData/',\r\n          getQueryInfo: '/online/cgreport/api/getQueryInfo/',\r\n          getParamsInfo:'/online/cgreport/api/getParamsInfo/'\r\n        },\r\n        table: {\r\n          loading: true,\r\n          // 表头\r\n          columns: [],\r\n          //数据集\r\n          dataSource: [],\r\n          // 选择器\r\n          selectedRowKeys: [],\r\n          selectionRows: [],\r\n          scroll: { x: false },\r\n          // 分页参数\r\n          pagination: {\r\n            current: 1,\r\n            pageSize: 10,\r\n            pageSizeOptions: ['10', '20', '30'],\r\n            showTotal: (total, range) => {\r\n              return range[0] + '-' + range[1] + ' 共' + total + '条'\r\n            },\r\n            showQuickJumper: true,\r\n            showSizeChanger: true,\r\n            total: 0\r\n          }\r\n        },\r\n        cgreportHeadName:\"\"\r\n      }\r\n    },\r\n    mounted() {\r\n      this.initParamsInfo()\r\n      this.initQueryInfo();\r\n    },\r\n    watch: {\r\n      '$route'() {\r\n        // 刷新参数放到这里去触发，就可以刷新相同界面了\r\n        this.initParamsInfo()\r\n        this.initQueryInfo();\r\n      }\r\n    },\r\n    computed: {\r\n      queryParam: {\r\n        get() {\r\n          return this.queryParamsMap[this.reportCode]\r\n        },\r\n        set(newVal) {\r\n          this.$set(this.queryParamsMap, this.reportCode, newVal)\r\n        }\r\n      }\r\n    },\r\n    methods: {\r\n      initParamsInfo(){\r\n        if(!this.$route.params.code){\r\n          return false\r\n        }\r\n        //获取报表ID\r\n        this.reportCode = this.$route.params.code;\r\n        if (!this.queryParam) {\r\n          this.queryParam = {}\r\n        }\r\n\r\n        this.selfParam={}\r\n        getAction(`${this.url.getParamsInfo}${this.reportCode}`).then((res) => {\r\n          if (res.success) {\r\n            if(res.result && res.result.length>0){\r\n              for(let i of res.result){\r\n                this.selfParam['self_'+i.paramName]=(!this.$route.query[i.paramName])?\"\":this.$route.query[i.paramName]\r\n              }\r\n            }\r\n          } else {\r\n            this.$message.warning(res.message)\r\n          }\r\n          this.loadData()\r\n        })\r\n      },\r\n\r\n      initQueryInfo() {\r\n        if(!this.reportCode){\r\n          return false\r\n        }\r\n        getAction(`${this.url.getQueryInfo}${this.reportCode}`).then((res) => {\r\n          console.log(\"获取查询条件\", res);\r\n          if (res.success) {\r\n            this.queryInfo = res.result\r\n          } else {\r\n            this.$message.warning(res.message)\r\n          }\r\n        })\r\n      },\r\n      loadData(arg) {\r\n        if(!this.reportCode){\r\n          return false\r\n        }\r\n        if (arg == 1) {\r\n          this.table.pagination.current = 1\r\n        }\r\n        let params = this.getQueryParams();//查询条件\r\n        console.log(params)\r\n\r\n        //获取报表ID\r\n        console.log(' 动态报表 reportCode ： ' + this.reportCode);\r\n        this.table.loading = true\r\n\r\n        getAction(`${this.url.getColumnsAndData}${this.reportCode}`, params).then(res => {\r\n          if (res.success) {\r\n            let { data, columns, cgreportHeadName, dictOptions, fieldHrefSlots } = res.result\r\n\r\n            let columnWidth = 230\r\n            this.dictOptions = dictOptions\r\n            for(let a=0;a<columns.length;a++){\r\n              if(columns[a].customRender){\r\n                let field_name = columns[a].customRender;\r\n                columns[a].customRender = (t => t ? filterMultiDictText(this.dictOptions[field_name], t + '') : t)\r\n              }\r\n              columns.width = columnWidth\r\n            }\r\n            this.table.scroll.x = columns.length * columnWidth\r\n            this.table.columns = [...columns]\r\n            this.cgreportHeadName = cgreportHeadName\r\n            this.fieldHrefSlots = fieldHrefSlots\r\n            if (data) {\r\n              this.table.pagination.total = Number(data.total)\r\n              this.table.dataSource = data.records\r\n            } else {\r\n              this.table.pagination.total = 0\r\n              this.table.dataSource = []\r\n            }\r\n\r\n          }else{\r\n            this.$message.warn('查询失败：'+res.message)\r\n          }\r\n\r\n        }).catch((e) => {\r\n          console.error(e)\r\n          this.$message.error('查询失败')\r\n        }).finally(() => {\r\n          this.table.loading = false\r\n        })\r\n      },\r\n      getQueryParams() {\r\n        let param = Object.assign({}, this.queryParam, this.sorter,this.selfParam);\r\n        param.pageNo = this.table.pagination.current;\r\n        param.pageSize = this.table.pagination.pageSize;\r\n        return filterObj(param);\r\n      },\r\n      searchByQuery() {\r\n        this.loadData(1);\r\n      },\r\n      searchReset() {\r\n        this.queryParam = {}\r\n        this.loadData(1);\r\n      },\r\n      handleToggleSearch() {\r\n        this.toggleSearchStatus = !this.toggleSearchStatus;\r\n      },\r\n      exportExcel() {\r\n        let fileName = this.cgreportHeadName\r\n        let selfParam = {}\r\n        for (let queryName in this.$route.query) {\r\n          if (this.$route.query.hasOwnProperty(queryName)) {\r\n            let value = this.$route.query[queryName]\r\n            selfParam['self_' + queryName] = value || ''\r\n          }\r\n        }\r\n        downFile(`/online/cgreport/api/exportXls/${this.reportCode}`, Object.assign(selfParam, this.queryParam)).then((data) => {\r\n          if (!data) {\r\n            this.$message.warning(\"文件下载失败\")\r\n            return\r\n          }\r\n          if (typeof window.navigator.msSaveBlob !== 'undefined') {\r\n            window.navigator.msSaveBlob(new Blob([data]), fileName+'.xls')\r\n          }else{\r\n            let url = window.URL.createObjectURL(new Blob([data]))\r\n            let link = document.createElement('a')\r\n            link.style.display = 'none'\r\n            link.href = url\r\n            link.setAttribute('download', fileName+'.xls')\r\n            document.body.appendChild(link)\r\n            link.click()\r\n            document.body.removeChild(link); //下载完成移除元素\r\n            window.URL.revokeObjectURL(url); //释放掉blob对象\r\n          }\r\n        })\r\n      },\r\n      handleChangeInTableSelect(selectedRowKeys, selectionRows) {\r\n        this.table.selectedRowKeys = selectedRowKeys\r\n        this.table.selectionRows = selectionRows\r\n      },\r\n      handleChangeInTable(pagination, filters, sorter) {\r\n        //分页、排序、筛选变化时触发\r\n        if (Object.keys(sorter).length > 0) {\r\n          this.sorter.column = sorter.field\r\n          this.sorter.order = 'ascend' == sorter.order ? 'asc' : 'desc'\r\n        } else {\r\n          this.sorter.column = null\r\n          this.sorter.order = null\r\n        }\r\n        this.table.pagination = pagination\r\n        this.loadData()\r\n      }\r\n\r\n    }\r\n  }\r\n</script>\r\n<style scoped>\r\n  .div {\r\n    display: flex;\r\n    align-items: center;\r\n    height: 500px\r\n  }\r\n\r\n</style>\r\n"]}]}