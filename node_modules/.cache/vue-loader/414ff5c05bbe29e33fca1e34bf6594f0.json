{"remainingRequest":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ideaworkspace\\jxc-front-end\\src\\components\\jeecg\\JCheckbox.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ideaworkspace\\jxc-front-end\\src\\components\\jeecg\\JCheckbox.vue","mtime":1648374777529},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1648365068269},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":1648364957239}],"contextDependencies":[],"result":["//\n//\n//\n//\n\nexport default {\n  name: 'JCheckbox',\n  props: {\n    value:{\n      type: String,\n      required: false\n    },\n    /*label value*/\n    options:{\n      type: Array,\n      required: true\n    }\n  },\n  data(){\n    return {\n      checkboxArray:!this.value?[]:this.value.split(\",\")\n    }\n  },\n  watch:{\n    value (val) {\n      if(!val){\n        this.checkboxArray = []\n      }else{\n        this.checkboxArray = this.value.split(\",\")\n      }\n    }\n  },\n  methods:{\n    onChange (checkedValues) {\n      this.$emit('change', checkedValues.join(\",\"));\n    },\n  },\n  model: {\n    prop: 'value',\n    event: 'change'\n  }\n}\n",{"version":3,"sources":["JCheckbox.vue"],"names":[],"mappings":";;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"JCheckbox.vue","sourceRoot":"src/components/jeecg","sourcesContent":["<template>\r\n  <a-checkbox-group :options=\"options\" :value=\"checkboxArray\" v-bind=\"$attrs\" @change=\"onChange\" />\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    name: 'JCheckbox',\r\n    props: {\r\n      value:{\r\n        type: String,\r\n        required: false\r\n      },\r\n      /*label value*/\r\n      options:{\r\n        type: Array,\r\n        required: true\r\n      }\r\n    },\r\n    data(){\r\n      return {\r\n        checkboxArray:!this.value?[]:this.value.split(\",\")\r\n      }\r\n    },\r\n    watch:{\r\n      value (val) {\r\n        if(!val){\r\n          this.checkboxArray = []\r\n        }else{\r\n          this.checkboxArray = this.value.split(\",\")\r\n        }\r\n      }\r\n    },\r\n    methods:{\r\n      onChange (checkedValues) {\r\n        this.$emit('change', checkedValues.join(\",\"));\r\n      },\r\n    },\r\n    model: {\r\n      prop: 'value',\r\n      event: 'change'\r\n    }\r\n  }\r\n</script>\r\n"]}]}