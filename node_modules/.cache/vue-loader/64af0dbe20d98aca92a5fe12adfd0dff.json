{"remainingRequest":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ideaworkspace\\jxc-front-end\\src\\views\\erp\\components\\EditableTableColumnsSetter.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ideaworkspace\\jxc-front-end\\src\\views\\erp\\components\\EditableTableColumnsSetter.vue","mtime":1648374777613},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1648365068269},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":1648364957239}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Vue from \"vue\";\nimport {FormTypes} from \"@/utils/JEditableTableUtil\";\n\nexport default {\n  name: \"EditableTableColumnsSetter\",\n  props: {\n    columns:{\n      type:Array,\n      required: true\n    },\n    ignoreColumns:{\n      type: Array,\n      default: () => ['rowIndex', 'action', 'flag']\n    },\n    tableName:{\n      type:String,\n      default: '',\n    },\n  },\n\n  data() {\n    return {\n      settingColumns:[],\n    }\n  },\n\n  computed: {\n    ls_key() { return this.$route.name + '/' + this.tableName + ':colsettings'},\n  },\n\n  created() {\n     this.initColumns();\n  },\n\n  methods: {\n    initColumns(){\n      //权限过滤（列权限控制时打开，修改第二个参数为授权码前缀）\n      //this.defColumns = colAuthFilter(this.defColumns,'testdemo:');\n\n      const that = this;\n      let colSettings = Vue.ls.get(this.ls_key);\n      if (colSettings == null) {\n        that.columns.forEach(function (item,i,array ) {\n          that.settingColumns.push(item.key);\n        })\n      }else{\n        that.settingColumns = colSettings;\n        that.columns.forEach(function (item,i,array ) {\n          if(that.ignoreColumns.includes(item.key))  return;\n\n          if (colSettings.includes(item.key)) {\n            if (item.typeDef !== undefined && item.typeDef !== null\n              && item.typeDef !== \"\" && item.typeDef !== FormTypes.hidden) {\n              item.type = item.typeDef;\n            }\n          } else {\n            item.typeDef = item.type;\n            item.type = FormTypes.hidden;\n          }\n        });\n      }\n    },\n\n    //列设置更改事件\n    onColSettingsChange (checkedValues) {\n      const that = this;\n      Vue.ls.set(this.ls_key, checkedValues, 7*24*60*60*1000)\n      that.settingColumns = checkedValues;\n      that.columns.forEach(function (item, i, array) {\n        if(that.ignoreColumns.includes(item.key))  return;\n\n        if (checkedValues.includes(item.key)) {\n          if (item.typeDef !== undefined && item.typeDef !== null\n            && item.typeDef !== \"\" && item.typeDef !== FormTypes.hidden) {\n            item.type = item.typeDef;\n          }\n        } else if (item.type !== FormTypes.hidden) {\n          item.typeDef = item.type;\n          item.type = FormTypes.hidden;\n        }\n      });\n    }\n  },\n\n}\n",{"version":3,"sources":["EditableTableColumnsSetter.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAqBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"EditableTableColumnsSetter.vue","sourceRoot":"src/views/erp/components","sourcesContent":["<template>\r\n  <a-popover title=\"自定义列\" trigger=\"click\" placement=\"topRight\">\r\n    <template slot=\"content\">\r\n      <a-checkbox-group @change=\"onColSettingsChange\" v-model=\"settingColumns\"\r\n                        :defaultValue=\"settingColumns\" style=\"width: 400px;\">\r\n        <a-row>\r\n          <template v-for=\"(item,index) in columns\">\r\n            <template v-if=\"!ignoreColumns.includes(item.key)\">\r\n              <a-col :span=\"12\">\r\n                <a-checkbox :value=\"item.key\">{{ item.title }}</a-checkbox>\r\n              </a-col>\r\n            </template>\r\n          </template>\r\n        </a-row>\r\n      </a-checkbox-group>\r\n    </template>\r\n    <a-button type=\"link\" icon=\"setting\">自定义列</a-button>\r\n  </a-popover>\r\n</template>\r\n\r\n<script>\r\n  import Vue from \"vue\";\r\n  import {FormTypes} from \"@/utils/JEditableTableUtil\";\r\n\r\n  export default {\r\n    name: \"EditableTableColumnsSetter\",\r\n    props: {\r\n      columns:{\r\n        type:Array,\r\n        required: true\r\n      },\r\n      ignoreColumns:{\r\n        type: Array,\r\n        default: () => ['rowIndex', 'action', 'flag']\r\n      },\r\n      tableName:{\r\n        type:String,\r\n        default: '',\r\n      },\r\n    },\r\n\r\n    data() {\r\n      return {\r\n        settingColumns:[],\r\n      }\r\n    },\r\n\r\n    computed: {\r\n      ls_key() { return this.$route.name + '/' + this.tableName + ':colsettings'},\r\n    },\r\n\r\n    created() {\r\n       this.initColumns();\r\n    },\r\n\r\n    methods: {\r\n      initColumns(){\r\n        //权限过滤（列权限控制时打开，修改第二个参数为授权码前缀）\r\n        //this.defColumns = colAuthFilter(this.defColumns,'testdemo:');\r\n\r\n        const that = this;\r\n        let colSettings = Vue.ls.get(this.ls_key);\r\n        if (colSettings == null) {\r\n          that.columns.forEach(function (item,i,array ) {\r\n            that.settingColumns.push(item.key);\r\n          })\r\n        }else{\r\n          that.settingColumns = colSettings;\r\n          that.columns.forEach(function (item,i,array ) {\r\n            if(that.ignoreColumns.includes(item.key))  return;\r\n\r\n            if (colSettings.includes(item.key)) {\r\n              if (item.typeDef !== undefined && item.typeDef !== null\r\n                && item.typeDef !== \"\" && item.typeDef !== FormTypes.hidden) {\r\n                item.type = item.typeDef;\r\n              }\r\n            } else {\r\n              item.typeDef = item.type;\r\n              item.type = FormTypes.hidden;\r\n            }\r\n          });\r\n        }\r\n      },\r\n\r\n      //列设置更改事件\r\n      onColSettingsChange (checkedValues) {\r\n        const that = this;\r\n        Vue.ls.set(this.ls_key, checkedValues, 7*24*60*60*1000)\r\n        that.settingColumns = checkedValues;\r\n        that.columns.forEach(function (item, i, array) {\r\n          if(that.ignoreColumns.includes(item.key))  return;\r\n\r\n          if (checkedValues.includes(item.key)) {\r\n            if (item.typeDef !== undefined && item.typeDef !== null\r\n              && item.typeDef !== \"\" && item.typeDef !== FormTypes.hidden) {\r\n              item.type = item.typeDef;\r\n            }\r\n          } else if (item.type !== FormTypes.hidden) {\r\n            item.typeDef = item.type;\r\n            item.type = FormTypes.hidden;\r\n          }\r\n        });\r\n      }\r\n    },\r\n\r\n  }\r\n</script>\r\n"]}]}