{"remainingRequest":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ideaworkspace\\jxc-front-end\\src\\components\\jeecg\\JAreaLinkage.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ideaworkspace\\jxc-front-end\\src\\components\\jeecg\\JAreaLinkage.vue","mtime":1648374777528},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1648365068269},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":1648364957239}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { pcaa } from 'area-data'\nimport Area from '@/components/_util/Area'\n\nexport default {\n  name: 'JAreaLinkage',\n  props: {\n    value: {\n      type: String,\n      required:false\n    },\n    // 组件的类型，可选值：\n    // select 下拉样式\n    // cascader 级联样式（默认）\n    type: {\n      type: String,\n      default: 'cascader'\n    },\n    width: {\n      type: String,\n      default: '100%'\n    }\n  },\n  data() {\n    return {\n      pcaa,\n      innerValue: [],\n      usedListeners: ['change'],\n      enums: {\n        type: ['cascader', 'select']\n      },\n      reloading: false,\n      areaData:''\n    }\n  },\n  computed: {\n    _listeners() {\n      let listeners = { ...this.$listeners }\n      // 去掉已使用的事件，防止冲突\n      this.usedListeners.forEach(key => {\n        delete listeners[key]\n      })\n      return listeners\n    },\n    _type() {\n      if (this.enums.type.includes(this.type)) {\n        return this.type\n      } else {\n        console.error(`JAreaLinkage的type属性只能接收指定的值（${this.enums.type.join('|')}）`)\n        return this.enums.type[0]\n      }\n    },\n  },\n  watch: {\n    value: {\n      immediate: true,\n      handler() {\n        this.loadDataByValue(this.value)\n      }\n    },\n  },\n  created() {\n    this.initAreaData();\n  },\n  methods: {\n    /** 通过 value 反推 options */\n    loadDataByValue(value) {\n      if(!value || value.length==0){\n        this.innerValue = []\n        this.reloading = true;\n        setTimeout(()=>{\n          this.reloading = false\n        },100)\n      }else{\n        this.initAreaData();\n        let arr = this.areaData.getRealCode(value);\n        this.innerValue = arr\n      }\n    },\n    /** 通过地区code获取子级 */\n    loadDataByCode(value) {\n      let options = []\n      let data = pcaa[value]\n      if (data) {\n        for (let key in data) {\n          if (data.hasOwnProperty(key)) {\n            options.push({ value: key, label: data[key], })\n          }\n        }\n        return options\n      } else {\n        return []\n      }\n    },\n    /** 判断是否有子节点 */\n    hasChildren(options) {\n      options.forEach(option => {\n        let data = this.loadDataByCode(option.value)\n        option.isLeaf = data.length === 0\n      })\n    },\n    handleChange(values) {\n      let value = values[values.length - 1]\n      this.$emit('change', value)\n    },\n    initAreaData(){\n      if(!this.areaData){\n        this.areaData = new Area();\n      }\n    },\n\n  },\n  model: { prop: 'value', event: 'change' },\n}\n",{"version":3,"sources":["JAreaLinkage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"JAreaLinkage.vue","sourceRoot":"src/components/jeecg","sourcesContent":["<template>\r\n  <div v-if=\"!reloading\" class=\"j-area-linkage\">\r\n    <area-cascader\r\n      v-if=\"_type === enums.type[0]\"\r\n      :value=\"innerValue\"\r\n      :data=\"pcaa\"\r\n      :level=\"1\"\r\n      :style=\"{width}\"\r\n      v-bind=\"$attrs\"\r\n      v-on=\"_listeners\"\r\n      @change=\"handleChange\"\r\n    />\r\n    <area-select\r\n      v-else-if=\"_type === enums.type[1]\"\r\n      :value=\"innerValue\"\r\n      :data=\"pcaa\"\r\n      :level=\"2\"\r\n      v-bind=\"$attrs\"\r\n      v-on=\"_listeners\"\r\n      @change=\"handleChange\"\r\n    />\r\n    <div v-else>\r\n      <span style=\"color:red;\"> Bad type value: {{_type}}</span>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import { pcaa } from 'area-data'\r\n  import Area from '@/components/_util/Area'\r\n\r\n  export default {\r\n    name: 'JAreaLinkage',\r\n    props: {\r\n      value: {\r\n        type: String,\r\n        required:false\r\n      },\r\n      // 组件的类型，可选值：\r\n      // select 下拉样式\r\n      // cascader 级联样式（默认）\r\n      type: {\r\n        type: String,\r\n        default: 'cascader'\r\n      },\r\n      width: {\r\n        type: String,\r\n        default: '100%'\r\n      }\r\n    },\r\n    data() {\r\n      return {\r\n        pcaa,\r\n        innerValue: [],\r\n        usedListeners: ['change'],\r\n        enums: {\r\n          type: ['cascader', 'select']\r\n        },\r\n        reloading: false,\r\n        areaData:''\r\n      }\r\n    },\r\n    computed: {\r\n      _listeners() {\r\n        let listeners = { ...this.$listeners }\r\n        // 去掉已使用的事件，防止冲突\r\n        this.usedListeners.forEach(key => {\r\n          delete listeners[key]\r\n        })\r\n        return listeners\r\n      },\r\n      _type() {\r\n        if (this.enums.type.includes(this.type)) {\r\n          return this.type\r\n        } else {\r\n          console.error(`JAreaLinkage的type属性只能接收指定的值（${this.enums.type.join('|')}）`)\r\n          return this.enums.type[0]\r\n        }\r\n      },\r\n    },\r\n    watch: {\r\n      value: {\r\n        immediate: true,\r\n        handler() {\r\n          this.loadDataByValue(this.value)\r\n        }\r\n      },\r\n    },\r\n    created() {\r\n      this.initAreaData();\r\n    },\r\n    methods: {\r\n      /** 通过 value 反推 options */\r\n      loadDataByValue(value) {\r\n        if(!value || value.length==0){\r\n          this.innerValue = []\r\n          this.reloading = true;\r\n          setTimeout(()=>{\r\n            this.reloading = false\r\n          },100)\r\n        }else{\r\n          this.initAreaData();\r\n          let arr = this.areaData.getRealCode(value);\r\n          this.innerValue = arr\r\n        }\r\n      },\r\n      /** 通过地区code获取子级 */\r\n      loadDataByCode(value) {\r\n        let options = []\r\n        let data = pcaa[value]\r\n        if (data) {\r\n          for (let key in data) {\r\n            if (data.hasOwnProperty(key)) {\r\n              options.push({ value: key, label: data[key], })\r\n            }\r\n          }\r\n          return options\r\n        } else {\r\n          return []\r\n        }\r\n      },\r\n      /** 判断是否有子节点 */\r\n      hasChildren(options) {\r\n        options.forEach(option => {\r\n          let data = this.loadDataByCode(option.value)\r\n          option.isLeaf = data.length === 0\r\n        })\r\n      },\r\n      handleChange(values) {\r\n        let value = values[values.length - 1]\r\n        this.$emit('change', value)\r\n      },\r\n      initAreaData(){\r\n        if(!this.areaData){\r\n          this.areaData = new Area();\r\n        }\r\n      },\r\n\r\n    },\r\n    model: { prop: 'value', event: 'change' },\r\n  }\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n  .j-area-linkage {\r\n    height:40px;\r\n    /deep/ .area-cascader-wrap .area-select {\r\n      width: 100%;\r\n    }\r\n\r\n    /deep/ .area-select .area-selected-trigger {\r\n      line-height: 1.15;\r\n    }\r\n  }\r\n\r\n</style>"]}]}