{"remainingRequest":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ideaworkspace\\jxc-front-end\\src\\views\\system\\modules\\SysFillRuleModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ideaworkspace\\jxc-front-end\\src\\views\\system\\modules\\SysFillRuleModal.vue","mtime":1648374778161},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1648365068269},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":1648364957239}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport pick from 'lodash.pick'\nimport { httpAction } from '@/api/manage'\nimport { validateDuplicateValue } from '@/utils/util'\n\nexport default {\n  name: 'SysFillRuleModal',\n  components: {},\n  data() {\n    return {\n      title: '操作',\n      visible: false,\n      model: {},\n      labelCol: { xs: { span: 24 }, sm: { span: 5 } },\n      wrapperCol: { xs: { span: 24 }, sm: { span: 16 } },\n\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      validatorRules: {\n        ruleName: { rules: [{ required: true, message: '规则名称不能为空' }] },\n        ruleCode: {\n          rules: [\n            { required: true, message: '规则Code不能为空' },\n            { validator: (rule, value, callback) => validateDuplicateValue('sys_fill_rule', 'rule_code', value, this.model.id, callback) }\n          ]\n        },\n        ruleClass: { rules: [{ required: true, message: '规则实现类不能为空' }] },\n        ruleParams: {\n          rules: [{\n            validator: (rule, value, callback) => {\n\n              try {\n                let json = JSON.parse(value)\n                if (json instanceof Array) {\n                  callback('只能传递JSON对象，不能传递JSON数组')\n                } else if (json instanceof Object) {\n                  callback()\n                } else {\n                  callback('请输入JSON字符串')\n                }\n              } catch {\n                callback('请输入JSON字符串')\n              }\n            }\n          }]\n        },\n      },\n      url: {\n        add: '/sys/fillRule/add',\n        edit: '/sys/fillRule/edit',\n      },\n    }\n  },\n  computed: {\n    disabledCode() {\n      return !!this.model.id\n    }\n  },\n  created() {\n  },\n  methods: {\n    add() {\n      this.edit({})\n    },\n    edit(record) {\n      this.form.resetFields()\n      this.model = Object.assign({}, record)\n      this.visible = true\n      this.$nextTick(() => {\n        this.form.setFieldsValue(pick(this.model, 'ruleName', 'ruleCode', 'ruleClass', 'ruleParams'))\n      })\n    },\n    close() {\n      this.$emit('close')\n      this.visible = false\n    },\n    handleOk() {\n      const that = this\n      // 触发表单验证\n      this.form.validateFields((err, values) => {\n        if (!err) {\n          that.confirmLoading = true\n          let httpUrl = this.url.add, method = 'post'\n          if (this.model.id) {\n            httpUrl = this.url.edit\n            method = 'put'\n          }\n\n          let formData = Object.assign(this.model, values)\n          httpAction(httpUrl, formData, method).then((res) => {\n            if (res.success) {\n              that.$message.success(res.message)\n              that.$emit('ok')\n            } else {\n              that.$message.warning(res.message)\n            }\n          }).finally(() => {\n            that.confirmLoading = false\n            that.close()\n          })\n        }\n      })\n    },\n    handleCancel() {\n      this.close()\n    }\n\n  }\n}\n",null]}