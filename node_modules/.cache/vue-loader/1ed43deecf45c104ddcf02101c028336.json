{"remainingRequest":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ideaworkspace\\jxc-front-end\\src\\views\\system\\modules\\SysPositionModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ideaworkspace\\jxc-front-end\\src\\views\\system\\modules\\SysPositionModal.vue","mtime":1648374778162},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1648365068269},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":1648364957239}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport pick from 'lodash.pick'\nimport { httpAction } from '@/api/manage'\nimport { duplicateCheck } from '@/api/api'\nimport JDictSelectTag from '@/components/dict/JDictSelectTag'\n\nlet validatorCodeTimer = null\n\nexport default {\n  name: 'SysPositionModal',\n  components: { JDictSelectTag },\n  data() {\n    return {\n      title: '操作',\n      visible: false,\n      model: {},\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 5 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n      },\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      validatorRules: {\n        code: {\n          rules: [\n            { required: true, message: '请输入职务编码' },\n            {\n              validator: (rule, value, callback) => {\n                // 函数消抖的简单实现，防止一段时间内发送多次请求\n                if (validatorCodeTimer) {\n                  // 停止上次开启的定时器\n                  clearTimeout(validatorCodeTimer)\n                }\n                validatorCodeTimer = setTimeout(() => {\n                  duplicateCheck({\n                    tableName: 'sys_position',\n                    fieldName: 'code',\n                    fieldVal: value,\n                    dataId: this.model.id\n                  }).then((res) => {\n                    if (res.success) {\n                      callback()\n                    } else {\n                      callback(res.message)\n                    }\n                  }).catch(console.error)\n                }, 300)\n              }\n            }\n          ]\n        },\n        name: { rules: [{ required: true, message: '请输入职务名称' }] },\n        postRank: { rules: [{ required: true, message: '请选择职级' }] },\n      },\n      url: {\n        add: '/sys/position/add',\n        edit: '/sys/position/edit',\n      },\n    }\n  },\n  created() {\n  },\n  methods: {\n    add() {\n      this.edit({})\n    },\n    edit(record) {\n      this.form.resetFields()\n      this.model = Object.assign({}, record)\n      this.visible = true\n      this.$nextTick(() => {\n        this.form.setFieldsValue(pick(this.model,\n          'code',\n          'name',\n          'postRank',\n          // 'companyId'\n        ))\n      })\n    },\n    close() {\n      this.$emit('close')\n      this.visible = false\n    },\n    handleOk() {\n      const that = this\n      // 触发表单验证\n      this.form.validateFields((err, values) => {\n        if (!err) {\n          that.confirmLoading = true\n          let httpurl = ''\n          let method = ''\n          if (!this.model.id) {\n            httpurl += this.url.add\n            method = 'post'\n          } else {\n            httpurl += this.url.edit\n            method = 'put'\n          }\n\n          let formData = Object.assign(this.model, values)\n          httpAction(httpurl, formData, method).then((res) => {\n            if (res.success) {\n              that.$message.success(res.message)\n              that.$emit('ok')\n            } else {\n              that.$message.warning(res.message)\n            }\n          }).finally(() => {\n            that.confirmLoading = false\n            that.close()\n          })\n        }\n      })\n    },\n    handleCancel() {\n      this.close()\n    },\n\n\n  }\n}\n",{"version":3,"sources":["SysPositionModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmfile":"SysPositionModal.vue","sourceRoot":"src/views/system/modules","sourcesContent":["<template>\r\n  <a-modal\r\n    :title=\"title\"\r\n    :width=\"800\"\r\n    :visible=\"visible\"\r\n    :maskClosable=\"false\"\r\n    :confirmLoading=\"confirmLoading\"\r\n    @ok=\"handleOk\"\r\n    @cancel=\"handleCancel\"\r\n    cancelText=\"关闭\">\r\n\r\n    <a-spin :spinning=\"confirmLoading\">\r\n      <a-form :form=\"form\">\r\n\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"职务编码\">\r\n          <a-input placeholder=\"请输入职务编码\" v-decorator=\"['code', validatorRules.code]\"/>\r\n        </a-form-item>\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"职务名称\">\r\n          <a-input placeholder=\"请输入职务名称\" v-decorator=\"['name', validatorRules.name]\"/>\r\n        </a-form-item>\r\n        <a-form-item\r\n          :labelCol=\"labelCol\"\r\n          :wrapperCol=\"wrapperCol\"\r\n          label=\"职级\"\r\n        >\r\n          <j-dict-select-tag\r\n            placeholder=\"请选择职级\"\r\n            :triggerChange=\"true\"\r\n            dictCode=\"position_rank\"\r\n            v-decorator=\"['postRank', validatorRules.postRank]\"\r\n          />\r\n        </a-form-item>\r\n        <!--<a-form-item-->\r\n        <!--  :labelCol=\"labelCol\"-->\r\n        <!--  :wrapperCol=\"wrapperCol\"-->\r\n        <!--  label=\"公司id\">-->\r\n        <!--  <a-input placeholder=\"请输入公司id\" v-decorator=\"['companyId', {}]\"/>-->\r\n        <!--</a-form-item>-->\r\n\r\n      </a-form>\r\n    </a-spin>\r\n  </a-modal>\r\n</template>\r\n\r\n<script>\r\n  import pick from 'lodash.pick'\r\n  import { httpAction } from '@/api/manage'\r\n  import { duplicateCheck } from '@/api/api'\r\n  import JDictSelectTag from '@/components/dict/JDictSelectTag'\r\n\r\n  let validatorCodeTimer = null\r\n\r\n  export default {\r\n    name: 'SysPositionModal',\r\n    components: { JDictSelectTag },\r\n    data() {\r\n      return {\r\n        title: '操作',\r\n        visible: false,\r\n        model: {},\r\n        labelCol: {\r\n          xs: { span: 24 },\r\n          sm: { span: 5 },\r\n        },\r\n        wrapperCol: {\r\n          xs: { span: 24 },\r\n          sm: { span: 16 },\r\n        },\r\n        confirmLoading: false,\r\n        form: this.$form.createForm(this),\r\n        validatorRules: {\r\n          code: {\r\n            rules: [\r\n              { required: true, message: '请输入职务编码' },\r\n              {\r\n                validator: (rule, value, callback) => {\r\n                  // 函数消抖的简单实现，防止一段时间内发送多次请求\r\n                  if (validatorCodeTimer) {\r\n                    // 停止上次开启的定时器\r\n                    clearTimeout(validatorCodeTimer)\r\n                  }\r\n                  validatorCodeTimer = setTimeout(() => {\r\n                    duplicateCheck({\r\n                      tableName: 'sys_position',\r\n                      fieldName: 'code',\r\n                      fieldVal: value,\r\n                      dataId: this.model.id\r\n                    }).then((res) => {\r\n                      if (res.success) {\r\n                        callback()\r\n                      } else {\r\n                        callback(res.message)\r\n                      }\r\n                    }).catch(console.error)\r\n                  }, 300)\r\n                }\r\n              }\r\n            ]\r\n          },\r\n          name: { rules: [{ required: true, message: '请输入职务名称' }] },\r\n          postRank: { rules: [{ required: true, message: '请选择职级' }] },\r\n        },\r\n        url: {\r\n          add: '/sys/position/add',\r\n          edit: '/sys/position/edit',\r\n        },\r\n      }\r\n    },\r\n    created() {\r\n    },\r\n    methods: {\r\n      add() {\r\n        this.edit({})\r\n      },\r\n      edit(record) {\r\n        this.form.resetFields()\r\n        this.model = Object.assign({}, record)\r\n        this.visible = true\r\n        this.$nextTick(() => {\r\n          this.form.setFieldsValue(pick(this.model,\r\n            'code',\r\n            'name',\r\n            'postRank',\r\n            // 'companyId'\r\n          ))\r\n        })\r\n      },\r\n      close() {\r\n        this.$emit('close')\r\n        this.visible = false\r\n      },\r\n      handleOk() {\r\n        const that = this\r\n        // 触发表单验证\r\n        this.form.validateFields((err, values) => {\r\n          if (!err) {\r\n            that.confirmLoading = true\r\n            let httpurl = ''\r\n            let method = ''\r\n            if (!this.model.id) {\r\n              httpurl += this.url.add\r\n              method = 'post'\r\n            } else {\r\n              httpurl += this.url.edit\r\n              method = 'put'\r\n            }\r\n\r\n            let formData = Object.assign(this.model, values)\r\n            httpAction(httpurl, formData, method).then((res) => {\r\n              if (res.success) {\r\n                that.$message.success(res.message)\r\n                that.$emit('ok')\r\n              } else {\r\n                that.$message.warning(res.message)\r\n              }\r\n            }).finally(() => {\r\n              that.confirmLoading = false\r\n              that.close()\r\n            })\r\n          }\r\n        })\r\n      },\r\n      handleCancel() {\r\n        this.close()\r\n      },\r\n\r\n\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n\r\n</style>"]}]}