{"remainingRequest":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ideaworkspace\\jxc-front-end\\src\\views\\erp\\bas\\modules\\BasWarehouseModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ideaworkspace\\jxc-front-end\\src\\views\\erp\\bas\\modules\\BasWarehouseModal.vue","mtime":1648374777612},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1648365068269},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":1648364957239}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport { httpAction } from '@/api/manage'\nimport pick from 'lodash.pick'\nimport { validateDuplicateValue } from '@/utils/util'\nimport JDate from '@/components/jeecg/JDate'  \nimport JDictSelectTag from \"@/components/dict/JDictSelectTag\"\nimport JTreeSelect from '@/components/jeecg/JTreeSelect'\n\nexport default {\n  name: \"BasWarehouseModal\",\n  components: { \n    JDate,\n    JDictSelectTag,\n    JTreeSelect\n  },\n  data () {\n    return {\n      action: \"\",\n      form: this.$form.createForm(this),\n      title:\"操作\",\n      width:600,\n      visible: false,\n      model: {},\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 6 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 17 },\n      },\n\n      confirmLoading: false,\n      validatorRules: {\n        pid: {rules: [\n        ]},\n        code: {rules: [\n          {required: true, message: '请输入编码!'},\n        ]},\n        name: {rules: [\n        ]},\n        phone: {rules: [\n        ]},\n        isEnabled: {rules: [\n        ]},\n        remark: {rules: [\n        ]},\n        createBy: {rules: [\n        ]},\n        createTime: {rules: [\n        ]},\n        updateBy: {rules: [\n        ]},\n        updateTime: {rules: [\n        ]},\n      },\n      url: {\n        add: \"/bas/basWarehouse/add\",\n        edit: \"/bas/basWarehouse/edit\",\n      },\n      expandedRowKeys:[],\n      pidField:\"pid\"\n   \n    }\n  },\n\n  computed: {\n    readOnly: function() {\n      return this.action !== \"add\" && this.action !== \"edit\"\n    }\n  },\n\n  created () {\n  },\n\n  methods: {\n    add () {\n      this.edit({});\n    },\n    edit (record) {\n      this.form.resetFields();\n      this.model = Object.assign({}, record);\n      this.visible = true;\n      this.$nextTick(() => {\n        this.form.setFieldsValue(pick(this.model,'pid','code','name','phone','isEnabled','remark','createBy','createTime','updateBy','updateTime'))\n      })\n    },\n    close () {\n      this.$emit('close');\n      this.visible = false;\n    },\n    handleOk () {\n      const that = this;\n      // 触发表单验证\n      this.form.validateFields((err, values) => {\n        if (!err) {\n          that.confirmLoading = true;\n          let httpurl = '';\n          let method = '';\n          if(!this.model.id){\n            httpurl+=this.url.add;\n            method = 'post';\n          }else{\n            httpurl+=this.url.edit;\n             method = 'put';\n          }\n          let old_pid = this.model[this.pidField]\n          let formData = Object.assign(this.model, values);\n          let new_pid = this.model[this.pidField]\n          console.log(\"表单提交数据\",formData)\n          httpAction(httpurl,formData,method).then((res)=>{\n            if(res.success){\n              that.$message.success(res.message);\n              that.submitSuccess(formData,old_pid==new_pid)\n            }else{\n              that.$message.warning(res.message);\n            }\n          }).finally(() => {\n            that.confirmLoading = false;\n            that.close();\n          })\n        }\n       \n      })\n    },\n    handleCancel () {\n      this.close()\n    },\n    popupCallback(row){\n      this.form.setFieldsValue(pick(row,'pid','code','name','phone','isEnabled','remark','createBy','createTime','updateBy','updateTime'))\n    },\n    submitSuccess(formData,flag){\n      if(!formData.id){\n        let treeData = this.$refs.treeSelect.getCurrTreeData()\n        this.expandedRowKeys=[]\n        this.getExpandKeysByPid(formData[this.pidField],treeData,treeData)\n        this.$emit('ok',formData,this.expandedRowKeys.reverse());\n      }else{\n        this.$emit('ok',formData,flag);\n      }\n    },\n    getExpandKeysByPid(pid,arr,all){\n      if(pid && arr && arr.length>0){\n        for(let i=0;i<arr.length;i++){\n          if(arr[i].key==pid){\n            this.expandedRowKeys.push(arr[i].key)\n            this.getExpandKeysByPid(arr[i]['parentId'],all,all)\n          }else{\n            this.getExpandKeysByPid(pid,arr[i].children,all)\n          }\n        }\n      }\n    }\n    \n    \n  }\n}\n",{"version":3,"sources":["BasWarehouseModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6DA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA","file":"BasWarehouseModal.vue","sourceRoot":"src/views/erp/bas/modules","sourcesContent":["<template>\r\n  <a-drawer\r\n    :title=\"title\"\r\n    :width=\"width\"\r\n    placement=\"right\"\r\n    :closable=\"readOnly\"\r\n    @close=\"close\"\r\n    :visible=\"visible\">\r\n\r\n  <a-spin :spinning=\"confirmLoading\">\r\n      <a-form :form=\"form\">\r\n        <a-form-item label=\"父级\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\r\n          <j-tree-select\r\n            ref=\"treeSelect\"\r\n            placeholder=\"请选择父级\"\r\n            v-decorator=\"['pid', validatorRules.pid]\"\r\n            dict=\"bas_warehouse,name,id\"\r\n            pidField=\"pid\"\r\n            pidValue=\"0\"\r\n            hasChildField=\"has_child\">\r\n          </j-tree-select>\r\n        </a-form-item>\r\n        <a-form-item label=\"编码\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\r\n          <a-input v-decorator=\"[ 'code', validatorRules.code]\" placeholder=\"请输入编码\"></a-input>\r\n        </a-form-item>\r\n        <a-form-item label=\"名称\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\r\n          <a-input v-decorator=\"[ 'name', validatorRules.name]\" placeholder=\"请输入名称\"></a-input>\r\n        </a-form-item>\r\n        <a-form-item label=\"电话\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\r\n          <a-input v-decorator=\"[ 'phone', validatorRules.phone]\" placeholder=\"请输入电话\"></a-input>\r\n        </a-form-item>\r\n        <a-form-item label=\"是否启用\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\r\n          <j-dict-select-tag type=\"list\" v-decorator=\"['isEnabled', validatorRules.isEnabled]\" :trigger-change=\"true\" dictCode=\"yn\" placeholder=\"请选择是否启用\"/>\r\n        </a-form-item>\r\n        <a-form-item label=\"备注\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\r\n          <a-input v-decorator=\"[ 'remark', validatorRules.remark]\" placeholder=\"请输入备注\"></a-input>\r\n        </a-form-item>\r\n        <a-form-item label=\"创建人\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\r\n          <a-input disabled v-decorator=\"[ 'createBy', validatorRules.createBy]\" ></a-input>\r\n        </a-form-item>\r\n        <a-form-item label=\"创建时间\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\r\n          <j-date disabled v-decorator=\"[ 'createTime', validatorRules.createTime]\" :trigger-change=\"true\" style=\"width: 100%\"/>\r\n        </a-form-item>\r\n        <a-form-item label=\"修改人\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\r\n          <a-input disabled v-decorator=\"[ 'updateBy', validatorRules.updateBy]\" ></a-input>\r\n        </a-form-item>\r\n        <a-form-item label=\"修改时间\" :labelCol=\"labelCol\" :wrapperCol=\"wrapperCol\">\r\n          <j-date disabled v-decorator=\"[ 'updateTime', validatorRules.updateTime]\" :trigger-change=\"true\" style=\"width: 100%\"/>\r\n        </a-form-item>\r\n      </a-form>\r\n    </a-spin>\r\n\r\n    <div v-if=\"!readOnly\">\r\n      <a-button type=\"primary\" @click=\"handleOk\">确定</a-button>\r\n      <a-button @click=\"handleCancel\">取消</a-button>\r\n    </div>\r\n  </a-drawer>\r\n</template>\r\n\r\n<script>\r\n\r\n  import { httpAction } from '@/api/manage'\r\n  import pick from 'lodash.pick'\r\n  import { validateDuplicateValue } from '@/utils/util'\r\n  import JDate from '@/components/jeecg/JDate'  \r\n  import JDictSelectTag from \"@/components/dict/JDictSelectTag\"\r\n  import JTreeSelect from '@/components/jeecg/JTreeSelect'\r\n  \r\n  export default {\r\n    name: \"BasWarehouseModal\",\r\n    components: { \r\n      JDate,\r\n      JDictSelectTag,\r\n      JTreeSelect\r\n    },\r\n    data () {\r\n      return {\r\n        action: \"\",\r\n        form: this.$form.createForm(this),\r\n        title:\"操作\",\r\n        width:600,\r\n        visible: false,\r\n        model: {},\r\n        labelCol: {\r\n          xs: { span: 24 },\r\n          sm: { span: 6 },\r\n        },\r\n        wrapperCol: {\r\n          xs: { span: 24 },\r\n          sm: { span: 17 },\r\n        },\r\n\r\n        confirmLoading: false,\r\n        validatorRules: {\r\n          pid: {rules: [\r\n          ]},\r\n          code: {rules: [\r\n            {required: true, message: '请输入编码!'},\r\n          ]},\r\n          name: {rules: [\r\n          ]},\r\n          phone: {rules: [\r\n          ]},\r\n          isEnabled: {rules: [\r\n          ]},\r\n          remark: {rules: [\r\n          ]},\r\n          createBy: {rules: [\r\n          ]},\r\n          createTime: {rules: [\r\n          ]},\r\n          updateBy: {rules: [\r\n          ]},\r\n          updateTime: {rules: [\r\n          ]},\r\n        },\r\n        url: {\r\n          add: \"/bas/basWarehouse/add\",\r\n          edit: \"/bas/basWarehouse/edit\",\r\n        },\r\n        expandedRowKeys:[],\r\n        pidField:\"pid\"\r\n     \r\n      }\r\n    },\r\n\r\n    computed: {\r\n      readOnly: function() {\r\n        return this.action !== \"add\" && this.action !== \"edit\"\r\n      }\r\n    },\r\n\r\n    created () {\r\n    },\r\n\r\n    methods: {\r\n      add () {\r\n        this.edit({});\r\n      },\r\n      edit (record) {\r\n        this.form.resetFields();\r\n        this.model = Object.assign({}, record);\r\n        this.visible = true;\r\n        this.$nextTick(() => {\r\n          this.form.setFieldsValue(pick(this.model,'pid','code','name','phone','isEnabled','remark','createBy','createTime','updateBy','updateTime'))\r\n        })\r\n      },\r\n      close () {\r\n        this.$emit('close');\r\n        this.visible = false;\r\n      },\r\n      handleOk () {\r\n        const that = this;\r\n        // 触发表单验证\r\n        this.form.validateFields((err, values) => {\r\n          if (!err) {\r\n            that.confirmLoading = true;\r\n            let httpurl = '';\r\n            let method = '';\r\n            if(!this.model.id){\r\n              httpurl+=this.url.add;\r\n              method = 'post';\r\n            }else{\r\n              httpurl+=this.url.edit;\r\n               method = 'put';\r\n            }\r\n            let old_pid = this.model[this.pidField]\r\n            let formData = Object.assign(this.model, values);\r\n            let new_pid = this.model[this.pidField]\r\n            console.log(\"表单提交数据\",formData)\r\n            httpAction(httpurl,formData,method).then((res)=>{\r\n              if(res.success){\r\n                that.$message.success(res.message);\r\n                that.submitSuccess(formData,old_pid==new_pid)\r\n              }else{\r\n                that.$message.warning(res.message);\r\n              }\r\n            }).finally(() => {\r\n              that.confirmLoading = false;\r\n              that.close();\r\n            })\r\n          }\r\n         \r\n        })\r\n      },\r\n      handleCancel () {\r\n        this.close()\r\n      },\r\n      popupCallback(row){\r\n        this.form.setFieldsValue(pick(row,'pid','code','name','phone','isEnabled','remark','createBy','createTime','updateBy','updateTime'))\r\n      },\r\n      submitSuccess(formData,flag){\r\n        if(!formData.id){\r\n          let treeData = this.$refs.treeSelect.getCurrTreeData()\r\n          this.expandedRowKeys=[]\r\n          this.getExpandKeysByPid(formData[this.pidField],treeData,treeData)\r\n          this.$emit('ok',formData,this.expandedRowKeys.reverse());\r\n        }else{\r\n          this.$emit('ok',formData,flag);\r\n        }\r\n      },\r\n      getExpandKeysByPid(pid,arr,all){\r\n        if(pid && arr && arr.length>0){\r\n          for(let i=0;i<arr.length;i++){\r\n            if(arr[i].key==pid){\r\n              this.expandedRowKeys.push(arr[i].key)\r\n              this.getExpandKeysByPid(arr[i]['parentId'],all,all)\r\n            }else{\r\n              this.getExpandKeysByPid(pid,arr[i].children,all)\r\n            }\r\n          }\r\n        }\r\n      }\r\n      \r\n      \r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n  /** Button按钮间距 */\r\n  .ant-btn {\r\n    margin-left: 30px;\r\n    margin-bottom: 30px;\r\n    float: right;\r\n  }\r\n\r\n  .ant-row.ant-form-item {\r\n    margin-bottom: 12px;\r\n  }\r\n</style>"]}]}