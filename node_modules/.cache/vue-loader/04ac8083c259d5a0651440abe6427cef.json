{"remainingRequest":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ideaworkspace\\jxc-front-end\\src\\views\\system\\SysCategoryList.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ideaworkspace\\jxc-front-end\\src\\views\\system\\SysCategoryList.vue","mtime":1648374778143},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1648365139913},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1648365068269},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":1648364957239}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport { getAction } from '@/api/manage'\nimport { JeecgListMixin } from '@/mixins/JeecgListMixin'\nimport SysCategoryModal from './modules/SysCategoryModal'\nimport { deleteAction } from '@/api/manage'\n\nexport default {\n  name: \"SysCategoryList\",\n  mixins:[JeecgListMixin],\n  components: {\n    SysCategoryModal\n  },\n  data () {\n    return {\n      description: '分类字典管理页面',\n      // 表头\n      columns: [\n        {\n          title:'分类名称',\n          align:\"left\",\n          dataIndex: 'name'\n        },\n        {\n          title:'分类编码',\n          align:\"left\",\n          dataIndex: 'code'\n        },\n        {\n          title: '操作',\n          dataIndex: 'action',\n          align:\"center\",\n          scopedSlots: { customRender: 'action' },\n        }\n      ],\n      url: {\n        list: \"/sys/category/rootList\",\n        childList: \"/sys/category/childList\",\n        delete: \"/sys/category/delete\",\n        deleteBatch: \"/sys/category/deleteBatch\",\n        exportXlsUrl: \"/sys/category/exportXls\",\n        importExcelUrl: \"sys/category/importExcel\",\n      },\n      expandedRowKeys:[],\n      hasChildrenField:\"hasChild\",\n      pidField:\"pid\",\n      dictOptions:{\n      },\n      subExpandedKeys:[],\n    }\n  },\n  computed: {\n    importExcelUrl(){\n      return `${window._CONFIG['domianURL']}/${this.url.importExcelUrl}`;\n    },\n    tableProps() {\n      let _this = this\n      return {\n        // 列表项是否可选择\n        rowSelection: {\n          selectedRowKeys: _this.selectedRowKeys,\n          onChange: (selectedRowKeys) => _this.selectedRowKeys = selectedRowKeys\n        }\n      }\n    }\n  },\n  methods: {\n    loadData(arg){\n      if(arg==1){\n        this.ipagination.current=1\n      }\n      this.loading = true\n      this.expandedRowKeys = []\n      let params = this.getQueryParams()\n      return new Promise((resolve) => {\n        getAction(this.url.list,params).then(res=>{\n          if(res.success){\n            let result = res.result\n            if(Number(result.total)>0){\n              this.ipagination.total = Number(result.total)\n              this.dataSource = this.getDataByResult(res.result.records)\n              resolve()\n            }else{\n              this.ipagination.total=0\n              this.dataSource=[]\n            }\n          }else{\n            this.$message.warning(res.message)\n          }\n          this.loading = false\n        })\n      })\n    },\n    getDataByResult(result){\n      return result.map(item=>{\n        //判断是否标记了带有子节点\n        if(item[this.hasChildrenField]=='1'){\n          let loadChild = { id: item.id+'_loadChild', name: 'loading...', isLoading: true }\n          item.children = [loadChild]\n        }\n        return item\n      })\n    },\n    handleExpand(expanded, record){\n      // 判断是否是展开状态\n      if (expanded) {\n        this.expandedRowKeys.push(record.id)\n        if (record.children.length>0 && record.children[0].isLoading === true) {\n          let params = this.getQueryParams();//查询条件\n          params[this.pidField] = record.id\n          getAction(this.url.childList,params).then((res)=>{\n            if(res.success){\n              if(res.result && res.result.length>0){\n                record.children = this.getDataByResult(res.result)\n                this.dataSource = [...this.dataSource]\n              }else{\n                record.children=''\n                record.hasChildrenField='0'\n              }\n            }else{\n              this.$message.warning(res.message)\n            }\n          })\n        }\n      }else{\n        let keyIndex = this.expandedRowKeys.indexOf(record.id)\n        if(keyIndex>=0){\n          this.expandedRowKeys.splice(keyIndex, 1);\n        }\n      }\n    },\n    initDictConfig(){\n    },\n    modalFormOk(formData,arr){\n      if(!formData.id){\n        this.addOk(formData,arr)\n      }else{\n        this.editOk(formData,this.dataSource)\n        this.dataSource=[...this.dataSource]\n      }\n    },\n    editOk(formData,arr){\n      if(arr && arr.length>0){\n        for(let i=0;i<arr.length;i++){\n          if(arr[i].id==formData.id){\n            arr[i]=formData\n            break\n          }else{\n            this.editOk(formData,arr[i].children)\n          }\n        }\n      }\n    },\n    async addOk(formData,arr){\n      if(!formData[this.pidField]){\n        this.loadData()\n      }else{\n        this.expandedRowKeys=[]\n        console.log(\"22222\",arr)\n        for(let i of arr){\n          await this.expandTreeNode(i)\n        }\n      }\n    },\n    expandTreeNode(nodeId){\n      return new Promise((resolve,reject)=>{\n        this.getFormDataById(nodeId,this.dataSource)\n        let row = this.parentFormData\n        this.expandedRowKeys.push(nodeId)\n        let params = this.getQueryParams();//查询条件\n        params[this.pidField] = nodeId\n        getAction(this.url.childList,params).then((res)=>{\n          console.log(\"11111\",res)\n          if(res.success){\n            if(res.result && res.result.length>0){\n              row.children = this.getDataByResult(res.result)\n              this.dataSource = [...this.dataSource]\n              resolve()\n            }else{\n              row.children=''\n              row.hasChildrenField='0'\n              reject()\n            }\n          }else{\n            reject()\n          }\n        })\n      })\n    },\n    getFormDataById(id,arr){\n      if(arr && arr.length>0){\n        for(let i=0;i<arr.length;i++){\n          if(arr[i].id==id){\n            this.parentFormData = arr[i]\n          }else{\n            this.getFormDataById(id,arr[i].children)\n          }\n        }\n      }\n    },\n    handleAddSub(record){\n      this.subExpandedKeys = [];\n      this.getExpandKeysByPid(record.id,this.dataSource,this.dataSource)\n      this.$refs.modalForm.subExpandedKeys = this.subExpandedKeys;\n      this.$refs.modalForm.title = \"添加子分类\";\n      this.$refs.modalForm.edit({'pid':record.id});\n      this.$refs.modalForm.disableSubmit = false;\n    },\n    handleDelete: function (record) {\n      let that = this;\n      deleteAction(that.url.delete, {id: record.id}).then((res) => {\n        if (res.success) {\n          if (record.pid && record.pid!='0') {\n            let formData = {pid: record.pid};\n            that.$message.success(res.message);\n            that.subExpandedKeys = [];\n            that.getExpandKeysByPid(record.pid, this.dataSource, this.dataSource)\n            that.addOk(formData, this.subExpandedKeys.reverse())\n          } else {\n            that.loadData();\n          }\n        } else {\n          that.$message.warning(res.message);\n        }\n      });\n    },\n    // 添加子分类时获取所有父级id\n    getExpandKeysByPid(pid,arr,all){\n      if(pid && arr && arr.length>0){\n        for(let i=0;i<arr.length;i++){\n          if(arr[i].id==pid){\n            this.subExpandedKeys.push(arr[i].id)\n            this.getExpandKeysByPid(arr[i]['pid'],all,all)\n          }else{\n            this.getExpandKeysByPid(pid,arr[i].children,all)\n          }\n        }\n      }\n    },\n    \n     \n  }\n}\n",null]}