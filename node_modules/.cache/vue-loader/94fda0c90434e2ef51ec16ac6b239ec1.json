{"remainingRequest":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ideaworkspace\\jxc-front-end\\src\\views\\erp\\stock\\modules\\StkInventoryModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ideaworkspace\\jxc-front-end\\src\\views\\erp\\stock\\modules\\StkInventoryModal.vue","mtime":1648374777648},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1648365139913},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1648365068269},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":1648364957239}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport { getAction, httpAction } from '@/api/manage'\nimport pick from 'lodash.pick'\nimport { validateDuplicateValue } from '@/utils/util'\nimport JDate from '@/components/jeecg/JDate'\nimport JDictSelectTag from \"@/components/dict/JDictSelectTag\"\n\nexport default {\n  name: \"StkInventoryModal\",\n  components: {\n    JDate,\n    JDictSelectTag,\n  },\n  data () {\n    return {\n      action: \"\",\n      isSingleSupplier: false,\n\n      form: this.$form.createForm(this),\n      title:\"操作\",\n      width:600,\n      visible: false,\n      model: {},\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 6 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 17 },\n      },\n      confirmLoading: false,\n      validatorRules: {\n        batchNo: {rules: [\n            {required: true, message: '请输入批号!'},\n          ]},\n        materialId: {rules: [\n          {required: true, message: '请选择物料!'},\n        ]},\n        warehouseId: {rules: [\n            {required: true, message: '请选择仓库!'},\n          ]},\n        unitId: {rules: [\n            {required: true, message: '请选择计量单位!'},\n        ]},\n        qty: {rules: [\n          {required: true, message: '请输入数量!'},\n        ]},\n        cost: {rules: [\n          {required: true, message: '请输入成本!'},\n        ]},\n        isSingleSupplier: {rules: [\n            {required: true, message: '请选择是否单供应商!'},\n          ]},\n        supplierId: {rules: [\n        ]},\n        isClosed: {rules: [\n          {required: true, message: '请输入是否关闭!'},\n        ]},\n        sysOrgCode: {rules: []},\n        createBy: {rules: []},\n        createTime: {rules: []},\n        updateBy: {rules: []},\n        updateTime: {rules: []},\n      },\n      url: {\n        add: \"/stock/stkInventory/add\",\n        edit: \"/stock/stkInventory/edit\",\n        getMaterial: \"/bas/basMaterial/queryById\"\n      }\n    }\n  },\n\n  computed: {\n    readOnly: function() {\n      return this.action !== \"add\" && this.action !== \"edit\"\n    }\n  },\n\n  methods: {\n    add () {\n      this.edit({qty: 0, cost: 0, isClosed:0});\n    },\n    edit (record) {\n      this.form.resetFields();\n\n      this.model = Object.assign({}, record);\n      this.visible = true;\n      this.$nextTick(() => {\n        this.form.setFieldsValue(pick(this.model,'batchNo','materialId','warehouseId','unitId','qty','cost', 'isSingleSupplier','supplierId','isClosed','sysOrgCode','createBy','createTime','updateBy','updateTime'))\n      })\n    },\n    close () {\n      this.$emit('close');\n      this.visible = false;\n    },\n    handleOk () {\n      const that = this;\n      if (this.form.getFieldValue(\"isSingleSupplier\") === \"1\" &&\n        (this.form.getFieldValue(\"supplierId\") === undefined ||\n          this.form.getFieldValue(\"supplierId\") === null ||\n          this.form.getFieldValue(\"supplierId\") === \"\")) {\n        this.$message.warning(\"需指定供应商！\");\n        return;\n      }\n      // 触发表单验证\n      this.form.validateFields((err, values) => {\n        if (!err) {\n          that.confirmLoading = true;\n          let httpurl = '';\n          let method = '';\n          if(!this.model.id){\n            httpurl+=this.url.add;\n            method = 'post';\n          }else{\n            httpurl+=this.url.edit;\n             method = 'put';\n          }\n          let formData = Object.assign(this.model, values);\n          console.log(\"表单提交数据\",formData)\n          httpAction(httpurl,formData,method).then((res)=>{\n            if(res.success){\n              that.$message.success(res.message);\n              that.$emit('ok');\n            }else{\n              that.$message.warning(res.message);\n            }\n          }).finally(() => {\n            that.confirmLoading = false;\n            that.close();\n          })\n        }\n       \n      })\n    },\n    handleCancel () {\n      this.close()\n    },\n    popupCallback(row){\n      this.form.setFieldsValue(pick(row,'batchNo','materialId','warehouseId','unitId','qty','cost', 'isSingleSupplier','supplierId','isClosed','sysOrgCode','createBy','createTime','updateBy','updateTime'))\n    },\n\n    onMaterialIdChange(v) {\n      const that = this;\n      if (v === undefined || v === null || v === \"\") {\n        that.form.setFieldsValue({\"unitId\":\"\"});\n      }\n      else {\n        getAction(this.url.getMaterial, {id:v}).then(res => {\n          if (res.success) {\n            that.$nextTick(() => {\n              var record = res.result;\n              that.form.setFieldsValue({'unitId':record.unitId});\n            })\n          }\n        })\n      }\n    }\n\n  }\n}\n",null]}