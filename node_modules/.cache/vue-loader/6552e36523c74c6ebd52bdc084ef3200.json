{"remainingRequest":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ideaworkspace\\jxc-front-end\\src\\views\\erp\\components\\OnlCgreportSelectModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ideaworkspace\\jxc-front-end\\src\\views\\erp\\components\\OnlCgreportSelectModal.vue","mtime":1648374777614},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1648365068269},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":1648364957239}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport '@/assets/less/TableExpand.less'\nimport { getAction } from '@/api/manage'\nimport { filterMultiDictText } from '@/components/dict/JDictSelectUtil'\nimport {filterObj} from '@/utils/util';\n\nexport default {\n  name: \"OnlCgreportSelectModal\",\n  mixins: [],\n  components: {\n  },\n\n  props: {\n    title: {\n      type: String,\n      default: '选择'\n    },\n    reportId: {\n      type: String,\n      required: true\n    },\n    params: {//对应sqlParams\n      type: Object,\n      default:() => ({}) //函数体需带括号\n      },\n    multiSelectable: {\n      type: Boolean,\n      default: false\n    },\n    width: {\n      type: Number,\n      default: 1000\n    },\n    fullscreen: {\n      type: Boolean,\n      default: false\n    },\n    switchFullscreen: {\n      type: Boolean,\n      default: true\n    },\n  },\n\n  data() {\n    return {\n      visible: false,\n      //报表定义中的查询字段\n      queryFields: [],\n      //查询参数，多个页面的查询参数用 ReportId 作为键来区分\n      queryParamsMap: {},\n      //报表定义SQL中嵌入的参数\n      sqlParams:{},\n      sorter: {\n        column: '',\n        order: 'desc',\n      },\n      dictOptions: {},\n      toggleSearchStatus: false, //搜索 展开/关闭\n      description: '',\n      url: {\n        getColumnsAndData: '/online/cgreport/api/getColumnsAndData/',\n        getqueryFields: '/online/cgreport/api/getQueryInfo/',\n        getSqlParams:'/online/cgreport/api/getParamsInfo/'\n      },\n      table: {\n        loading: true,\n        // 表头\n        columns: [],\n        //数据集\n        dataSource: [],\n        // 选择器\n        selectedRowKeys: [],\n        selectionRows: [],\n        scroll: { x: true },\n        // 分页参数\n        pagination: {\n          current: 1,\n          pageSize: 10,\n          pageSizeOptions: ['10', '20', '30'],\n          showTotal: (total, range) => {\n            return range[0] + '-' + range[1] + ' 共' + total + '条'\n          },\n          showQuickJumper: true,\n          showSizeChanger: true,\n          total: 0\n        }\n      },\n      cgreportHeadName:\"\"\n    }\n  },\n\n  mounted() {\n    this.initSqlParams();\n    this.initQueryFields();\n  },\n\n  computed: {\n    queryParams: {\n      get() {\n        return this.queryParamsMap[this.reportId]\n      },\n      set(newVal) {\n        this.$set(this.queryParamsMap, this.reportId, newVal)\n      }\n    }\n  },\n  methods: {\n    //报表定义SQL中嵌入的参数\n    initSqlParams(){\n      this.sqlParams={}\n      getAction(`${this.url.getSqlParams}${this.reportId}`).then((res) => {\n        if (res.success) {\n          if(res.result && res.result.length>0){\n            for(let i of res.result){\n              //参数来自引用本Modal时设置的属性\n              this.sqlParams['self_'+i.paramName] = (!this.params[i.paramName]) ? \"\" : this.params[i.paramName];\n            }\n          }\n        } else {\n          this.$message.warning(res.message)\n        }\n        // this.loadData()\n      })\n    },\n\n    //报表的动态查询参数\n    initQueryFields() {\n      getAction(`${this.url.getqueryFields}${this.reportId}`).then((res) => {\n        if (res.success) {\n          this.queryFields = res.result\n        } else {\n          this.$message.warning(res.message)\n        }\n        this.loadData()\n      })\n    },\n\n    //显示本Modal前，调用本函数传递引用页面form或table值作为查询条件参数；\n    //readonly为true，表示传入的有值参数不能修改。\n    initQueryParams(queryParams, readOnly = true) {\n      let queryFields = [];\n      for(let item of this.queryFields) {\n        item.readOnly = false;\n        if (readOnly){\n          for(let x in queryParams){\n            if (item.field === x) {\n              if (queryParams[x]) item.readOnly = queryParams[x]!=='';\n              break;\n            }\n          }\n        }\n        queryFields.push(item);\n      }\n      this.queryFields = queryFields;\n      this.queryParams = queryParams;\n      this.loadData();\n    },\n\n    loadData(arg) {\n      if (arg === 1) {\n        this.table.pagination.current = 1\n      }\n      let params = this.getQueryParams();//查询条件\n      this.table.loading = true\n\n      getAction(`${this.url.getColumnsAndData}${this.reportId}`, params).then(res => {\n        if (res.success) {\n          let { data, columns, cgreportHeadName, dictOptions, fieldHrefSlots } = res.result\n\n          this.dictOptions = dictOptions\n          for(let a=0;a<columns.length;a++){\n            if(columns[a].customRender){\n              let field_name = columns[a].customRender;\n              columns[a].customRender = (t => t ? filterMultiDictText(this.dictOptions[field_name], t + '') : t)\n            }\n          }\n          this.table.columns = [...columns]\n          this.cgreportHeadName = cgreportHeadName\n          this.fieldHrefSlots = fieldHrefSlots\n          if (data) {\n            this.table.pagination.total = Number(data.total)\n            this.table.dataSource = data.records\n          } else {\n            this.table.pagination.total = 0\n            this.table.dataSource = []\n          }\n\n        }else{\n          this.$message.warn('查询失败：'+res.message)\n        }\n\n      }).catch((e) => {\n        console.error(e)\n        this.$message.error('查询失败')\n      }).finally(() => {\n        this.table.loading = false\n      })\n    },\n    getQueryParams() {\n      let param = Object.assign({}, this.queryParams, this.sorter,this.sqlParams);\n      param.pageNo = this.table.pagination.current;\n      param.pageSize = this.table.pagination.pageSize;\n      return filterObj(param);\n    },\n    searchByQuery() {\n      this.loadData(1);\n    },\n    searchReset() {\n      let queryParams = {};\n      for(let item of this.queryFields) {\n        if (item.readOnly)  queryParam[item.field] = this.queryParams[item.field];\n      }\n      this.queryParams = queryParams;\n      this.loadData(1);\n    },\n    handleToggleSearch() {\n      this.toggleSearchStatus = !this.toggleSearchStatus;\n    },\n    handleChangeInTableSelect(selectedRowKeys, selectionRows) {\n      this.table.selectedRowKeys = selectedRowKeys\n      this.table.selectionRows = selectionRows\n    },\n    handleChangeInTable(pagination, filters, sorter) {\n      //分页、排序、筛选变化时触发\n      if (Object.keys(sorter).length > 0) {\n        this.sorter.column = sorter.field\n        this.sorter.order = 'ascend' === sorter.order ? 'asc' : 'desc'\n      } else {\n        this.sorter.column = null\n        this.sorter.order = null\n      }\n      this.table.pagination = pagination\n      this.loadData()\n    },\n\n    handleOk(){\n      this.$emit(\"callback\", this.table.selectionRows);\n    }\n  }\n}\n",{"version":3,"sources":["OnlCgreportSelectModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqfile":"OnlCgreportSelectModal.vue","sourceRoot":"src/views/erp/components","sourcesContent":["<template>\r\n  <j-modal\r\n    :visible.sync=\"visible\"\r\n    :width=\"width\"\r\n    :title=\"title\"\r\n    :fullscreen.sync=\"fullscreen\"\r\n    :switchFullscreen=\"switchFullscreen\"\r\n    @ok=\"handleOk\">\r\n`\r\n    <div class=\"table-page-search-wrapper\">\r\n      <a-form layout=\"inline\">\r\n        <a-row :gutter=\"24\" v-if=\"queryFields && queryFields.length>0\">\r\n          <template v-for=\"(item,index) in queryFields\">\r\n            <template v-if=\"!item.readOnly\">\r\n              <a-col v-if=\"item.view.indexOf('Date')>=0\" :md=\"12\" :sm=\"16\" :key=\" 'query'+index \" v-show=\"index<3 || toggleSearchStatus\">\r\n                <onl-cgreport-query-form-item :queryParam=\"queryParams\" :item=\"item\" :dictOptions=\"dictOptions\"></onl-cgreport-query-form-item>\r\n              </a-col>\r\n              <a-col v-else  :md=\"6\" :sm=\"8\" :key=\" 'query'+index \" v-show=\"index<3 || toggleSearchStatus\">\r\n                <onl-cgreport-query-form-item :queryParam=\"queryParams\" :item=\"item\" :dictOptions=\"dictOptions\"></onl-cgreport-query-form-item>\r\n              </a-col>\r\n            </template>\r\n            <template v-else>\r\n              <a-col :md=\"6\" :sm=\"8\" v-show=\"index<3 || toggleSearchStatus\">\r\n                <a-form-item :label=\"item.label\">\r\n                  <a-input disabled v-model=\"queryParams[item.field]\"></a-input>\r\n                </a-form-item>\r\n              </a-col>\r\n            </template>\r\n          </template>\r\n\r\n          <a-col :md=\"6\" :sm=\"8\">\r\n            <span style=\"float: left;overflow: hidden;\" class=\"table-page-search-submitButtons\">\r\n              <a-button type=\"primary\" @click=\"searchByQuery\" icon=\"search\">查询</a-button>\r\n              <a-button @click=\"searchReset\" icon=\"reload\" style=\"margin-left: 8px\">重置</a-button>\r\n              <a @click=\"handleToggleSearch\" style=\"margin-left: 8px\" v-if=\"queryFields.length>3\">\r\n                {{ toggleSearchStatus ? '收起' : '展开' }}\r\n                <a-icon :type=\"toggleSearchStatus ? 'up' : 'down'\"/>\r\n              </a>\r\n            </span>\r\n          </a-col>\r\n        </a-row>\r\n      </a-form>\r\n    </div>\r\n\r\n    <a-table\r\n      ref=\"table\"\r\n      size=\"small\"\r\n      bordered\r\n      rowKey=\"id\"\r\n      :columns=\"table.columns\"\r\n      :dataSource=\"table.dataSource\"\r\n      :pagination=\"table.pagination\"\r\n      :loading=\"table.loading\"\r\n      :scroll=\"table.scroll\"\r\n      :rowSelection=\"{\r\n        fixed: true,\r\n        columnWidth: 40,\r\n        type: multiSelectable ? 'checkbox':'radio',\r\n        selectedRowKeys: table.selectedRowKeys,\r\n        onChange: handleChangeInTableSelect}\"\r\n      @change=\"handleChangeInTable\"\r\n      style=\"min-height: 300px\"\r\n      class=\"j-table-force-nowrap\">\r\n    </a-table>\r\n\r\n  </j-modal>\r\n</template>\r\n\r\n<script>\r\n  import '@/assets/less/TableExpand.less'\r\n  import { getAction } from '@/api/manage'\r\n  import { filterMultiDictText } from '@/components/dict/JDictSelectUtil'\r\n  import {filterObj} from '@/utils/util';\r\n\r\n  export default {\r\n    name: \"OnlCgreportSelectModal\",\r\n    mixins: [],\r\n    components: {\r\n    },\r\n\r\n    props: {\r\n      title: {\r\n        type: String,\r\n        default: '选择'\r\n      },\r\n      reportId: {\r\n        type: String,\r\n        required: true\r\n      },\r\n      params: {//对应sqlParams\r\n        type: Object,\r\n        default:() => ({}) //函数体需带括号\r\n        },\r\n      multiSelectable: {\r\n        type: Boolean,\r\n        default: false\r\n      },\r\n      width: {\r\n        type: Number,\r\n        default: 1000\r\n      },\r\n      fullscreen: {\r\n        type: Boolean,\r\n        default: false\r\n      },\r\n      switchFullscreen: {\r\n        type: Boolean,\r\n        default: true\r\n      },\r\n    },\r\n\r\n    data() {\r\n      return {\r\n        visible: false,\r\n        //报表定义中的查询字段\r\n        queryFields: [],\r\n        //查询参数，多个页面的查询参数用 ReportId 作为键来区分\r\n        queryParamsMap: {},\r\n        //报表定义SQL中嵌入的参数\r\n        sqlParams:{},\r\n        sorter: {\r\n          column: '',\r\n          order: 'desc',\r\n        },\r\n        dictOptions: {},\r\n        toggleSearchStatus: false, //搜索 展开/关闭\r\n        description: '',\r\n        url: {\r\n          getColumnsAndData: '/online/cgreport/api/getColumnsAndData/',\r\n          getqueryFields: '/online/cgreport/api/getQueryInfo/',\r\n          getSqlParams:'/online/cgreport/api/getParamsInfo/'\r\n        },\r\n        table: {\r\n          loading: true,\r\n          // 表头\r\n          columns: [],\r\n          //数据集\r\n          dataSource: [],\r\n          // 选择器\r\n          selectedRowKeys: [],\r\n          selectionRows: [],\r\n          scroll: { x: true },\r\n          // 分页参数\r\n          pagination: {\r\n            current: 1,\r\n            pageSize: 10,\r\n            pageSizeOptions: ['10', '20', '30'],\r\n            showTotal: (total, range) => {\r\n              return range[0] + '-' + range[1] + ' 共' + total + '条'\r\n            },\r\n            showQuickJumper: true,\r\n            showSizeChanger: true,\r\n            total: 0\r\n          }\r\n        },\r\n        cgreportHeadName:\"\"\r\n      }\r\n    },\r\n\r\n    mounted() {\r\n      this.initSqlParams();\r\n      this.initQueryFields();\r\n    },\r\n\r\n    computed: {\r\n      queryParams: {\r\n        get() {\r\n          return this.queryParamsMap[this.reportId]\r\n        },\r\n        set(newVal) {\r\n          this.$set(this.queryParamsMap, this.reportId, newVal)\r\n        }\r\n      }\r\n    },\r\n    methods: {\r\n      //报表定义SQL中嵌入的参数\r\n      initSqlParams(){\r\n        this.sqlParams={}\r\n        getAction(`${this.url.getSqlParams}${this.reportId}`).then((res) => {\r\n          if (res.success) {\r\n            if(res.result && res.result.length>0){\r\n              for(let i of res.result){\r\n                //参数来自引用本Modal时设置的属性\r\n                this.sqlParams['self_'+i.paramName] = (!this.params[i.paramName]) ? \"\" : this.params[i.paramName];\r\n              }\r\n            }\r\n          } else {\r\n            this.$message.warning(res.message)\r\n          }\r\n          // this.loadData()\r\n        })\r\n      },\r\n\r\n      //报表的动态查询参数\r\n      initQueryFields() {\r\n        getAction(`${this.url.getqueryFields}${this.reportId}`).then((res) => {\r\n          if (res.success) {\r\n            this.queryFields = res.result\r\n          } else {\r\n            this.$message.warning(res.message)\r\n          }\r\n          this.loadData()\r\n        })\r\n      },\r\n\r\n      //显示本Modal前，调用本函数传递引用页面form或table值作为查询条件参数；\r\n      //readonly为true，表示传入的有值参数不能修改。\r\n      initQueryParams(queryParams, readOnly = true) {\r\n        let queryFields = [];\r\n        for(let item of this.queryFields) {\r\n          item.readOnly = false;\r\n          if (readOnly){\r\n            for(let x in queryParams){\r\n              if (item.field === x) {\r\n                if (queryParams[x]) item.readOnly = queryParams[x]!=='';\r\n                break;\r\n              }\r\n            }\r\n          }\r\n          queryFields.push(item);\r\n        }\r\n        this.queryFields = queryFields;\r\n        this.queryParams = queryParams;\r\n        this.loadData();\r\n      },\r\n\r\n      loadData(arg) {\r\n        if (arg === 1) {\r\n          this.table.pagination.current = 1\r\n        }\r\n        let params = this.getQueryParams();//查询条件\r\n        this.table.loading = true\r\n\r\n        getAction(`${this.url.getColumnsAndData}${this.reportId}`, params).then(res => {\r\n          if (res.success) {\r\n            let { data, columns, cgreportHeadName, dictOptions, fieldHrefSlots } = res.result\r\n\r\n            this.dictOptions = dictOptions\r\n            for(let a=0;a<columns.length;a++){\r\n              if(columns[a].customRender){\r\n                let field_name = columns[a].customRender;\r\n                columns[a].customRender = (t => t ? filterMultiDictText(this.dictOptions[field_name], t + '') : t)\r\n              }\r\n            }\r\n            this.table.columns = [...columns]\r\n            this.cgreportHeadName = cgreportHeadName\r\n            this.fieldHrefSlots = fieldHrefSlots\r\n            if (data) {\r\n              this.table.pagination.total = Number(data.total)\r\n              this.table.dataSource = data.records\r\n            } else {\r\n              this.table.pagination.total = 0\r\n              this.table.dataSource = []\r\n            }\r\n\r\n          }else{\r\n            this.$message.warn('查询失败：'+res.message)\r\n          }\r\n\r\n        }).catch((e) => {\r\n          console.error(e)\r\n          this.$message.error('查询失败')\r\n        }).finally(() => {\r\n          this.table.loading = false\r\n        })\r\n      },\r\n      getQueryParams() {\r\n        let param = Object.assign({}, this.queryParams, this.sorter,this.sqlParams);\r\n        param.pageNo = this.table.pagination.current;\r\n        param.pageSize = this.table.pagination.pageSize;\r\n        return filterObj(param);\r\n      },\r\n      searchByQuery() {\r\n        this.loadData(1);\r\n      },\r\n      searchReset() {\r\n        let queryParams = {};\r\n        for(let item of this.queryFields) {\r\n          if (item.readOnly)  queryParam[item.field] = this.queryParams[item.field];\r\n        }\r\n        this.queryParams = queryParams;\r\n        this.loadData(1);\r\n      },\r\n      handleToggleSearch() {\r\n        this.toggleSearchStatus = !this.toggleSearchStatus;\r\n      },\r\n      handleChangeInTableSelect(selectedRowKeys, selectionRows) {\r\n        this.table.selectedRowKeys = selectedRowKeys\r\n        this.table.selectionRows = selectionRows\r\n      },\r\n      handleChangeInTable(pagination, filters, sorter) {\r\n        //分页、排序、筛选变化时触发\r\n        if (Object.keys(sorter).length > 0) {\r\n          this.sorter.column = sorter.field\r\n          this.sorter.order = 'ascend' === sorter.order ? 'asc' : 'desc'\r\n        } else {\r\n          this.sorter.column = null\r\n          this.sorter.order = null\r\n        }\r\n        this.table.pagination = pagination\r\n        this.loadData()\r\n      },\r\n\r\n      handleOk(){\r\n        this.$emit(\"callback\", this.table.selectionRows);\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n  .div {\r\n    display: flex;\r\n    align-items: center;\r\n    height: 500px\r\n  }\r\n</style>"]}]}