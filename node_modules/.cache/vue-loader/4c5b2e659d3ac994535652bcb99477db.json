{"remainingRequest":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ideaworkspace\\jxc-front-end\\src\\views\\erp\\stock\\modules\\SwellInBillModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ideaworkspace\\jxc-front-end\\src\\views\\erp\\stock\\modules\\SwellInBillModal.vue","mtime":1648374777649},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1648365139913},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1648365068269},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":1648364957239}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport pick from 'lodash.pick'\nimport { FormTypes,getRefPromise,VALIDATE_NO_PASSED, validateFormAndTables } from '@/utils/JEditableTableUtil'\nimport { JEditableTableMixin } from '@/mixins/JEditableTableMixin'\nimport JDate from '@/components/jeecg/JDate'\nimport JUpload from '@/components/jeecg/JUpload'\nimport JSelectUserByDep from '@/components/jeecgbiz/JSelectUserByDep'\nimport JDictSelectTag from \"@/components/dict/JDictSelectTag\"\nimport { putAction } from '@api/manage'\nimport { billModalMixin } from '../../mixins/billModalMixin'\nimport OnlCgreportSelectModal from '../../components/OnlCgreportSelectModal'\nimport EditableTableColumnsSetter from \"../../components/EditableTableColumnsSetter\";\nimport { getFormatDate } from '../../utils/util'\nimport { validateEntryNo } from '../../utils/editableTableValidate'\n\nexport default {\n  name: 'SwellInBillModal',\n  mixins: [JEditableTableMixin, billModalMixin],\n  components: {\n    EditableTableColumnsSetter,\n    JDate,\n    JUpload,\n    JSelectUserByDep,\n    JDictSelectTag,\n    OnlCgreportSelectModal\n  },\n  data() {\n    return {\n      width: '1200px',\n      moreStatus: false,\n\n      // 新增时子表默认添加几行空数据\n      addDefaultRowNum: 1,\n      validatorRules: {\n        stockIoType: {rules: [\n        ]},\n        billNo: {rules: [\n          {required: true, message: '请输入单据编号!'},\n        ]},\n        billDate: {rules: [\n          {required: true, message: '请输入单据日期!'},\n        ]},\n        sourceType: {rules: [\n        ]},\n        sourceId: {rules: [\n        ]},\n        sourceNo: {rules: [\n        ]},\n        clerkId: {rules: [\n        ]},\n        handlerId: {rules: [\n        ]},\n        hasRp: {rules: [\n        ]},\n        isRubric: {rules: [\n        ]},\n        isSameSettle: {rules: [\n        ]},\n        supplierId: {rules: [\n        ]},\n        customerId: {rules: [\n        ]},\n        attachment: {rules: [\n        ]},\n        remark: {rules: [\n        ]},\n        billProcStatus: {rules: [\n        ]},\n        approverId: {rules: [\n        ]},\n        flowId: {rules: [\n        ]},\n        isApproved: {rules: [\n        ]},\n        effectiveTime: {rules: [\n        ]},\n        isVoided: {rules: [\n        ]},\n        isClosed: {rules: [\n        ]},\n        sysOrgCode: {rules: [\n        ]},\n        createBy: {rules: [\n        ]},\n        createTime: {rules: [\n        ]},\n        updateBy: {rules: [\n        ]},\n        updateTime: {rules: [\n        ]},\n      },\n      refKeys: ['stkIoBillEntry', ],\n      tableKeys:['stkIoBillEntry', ],\n      activeKey: 'stkIoBillEntry',\n      // 明细\n      stkIoBillEntryTable: {\n        loading: false,\n        dataSource: [],\n        columns: [\n          {\n            title: '分录号',\n            key: 'entryNo',\n            type: FormTypes.inputNumber,\n            width:\"60px\",\n            validateRules: [\n              { required: true, message: '${title}不能为空' },\n              { pattern: /^[1-9]\\d*$/, message: '请输入零以上的正整数' },\n              { handler: validateEntryNo}],\n          },\n          { //sourceType、sourceEntryId、sourceEntryNo应一起考虑\n            title: '源单分录号',\n            key: 'sourceEntryNo',\n            type: FormTypes.input,\n            width:\"180px\",\n            defaultValue: '',\n            disabled: true,\n          },\n          {\n            title: '物料',\n            key: 'materialId',\n            type: FormTypes.sel_search,\n            dictCode:\"bas_material,name,id\",\n            width:\"200px\",\n            placeholder: '请输入${title}',\n            defaultValue: '',\n            validateRules: [{ required: true, message: '${title}不能为空' }],\n            options:[],\n          },\n          {\n            title: '仓库',\n            key: 'warehouseId',\n            type: FormTypes.select,\n            dictCode:\"bas_warehouse,name,id\",\n            width:\"150px\",\n            placeholder: '请输入${title}',\n            defaultValue: '',\n            options:[],\n            validateRules: [{ required: true, message: '${title}不能为空' }],\n          },\n          {\n            title: '批次号',\n            key: 'batchNo',\n            type: FormTypes.input,\n            width:\"200px\",\n            placeholder: '请输入${title}',\n            defaultValue: '',\n            validateRules: [{ required: true, message: '${title}不能为空' }],\n            disabled: true,\n          },\n          {\n            title: '',\n            key: 'batchNoSelectModal',\n            type: FormTypes.slot,\n            slotName: 'batchNoSelectModal',\n            orgFields: \"material_id,warehouse_id,batch_no,unit_id,supplier_id,unit_id,qty,id\",\n            destFields: \"materialId,warehouseId,batchNo,unitId,supplierId,inventoryUnitId,inventoryQty,inventoryId\",\n            width:\"45px\",\n          },\n          {\n            title: '供应商',\n            key: 'supplierId',\n            type: FormTypes.select,\n            dictCode:\"bas_supplier,name,id\",\n            width:\"180px\",\n            placeholder: '请输入${title}',\n            defaultValue: '',\n            options:[],\n            disabled: true,\n          },\n          {\n            title: '库存单位',\n            key: 'inventoryUnitId',\n            type: FormTypes.select,\n            dictCode:\"bas_measure_unit,name,id\",\n            width:\"100px\",\n            disabled:true,\n          },\n          {\n            title: '库存数量',\n            key: 'inventoryQty',\n            type: FormTypes.input,\n            statistics: \"true\",\n            width:\"100px\",\n            disabled:true,\n          },\n          {\n            title: '涨库单位',\n            key: 'unitId',\n            type: FormTypes.select,\n            dictCode:\"bas_measure_unit,name,id\",\n            width:\"100px\",\n            placeholder: '请输入${title}',\n            defaultValue: '',\n            validateRules: [{ required: true, message: '${title}不能为空' }],\n            options:[],\n          },\n          {\n            title: '涨库数量',\n            key: 'qty',\n            type: FormTypes.inputNumber,\n            statistics: \"true\",\n            width:\"100px\",\n            placeholder: '请输入${title}',\n            defaultValue: '',\n            validateRules:[\n              { required: true, message: '${title}不能为空' },\n              { handler: this.validateQty}\n            ]\n          },\n          {\n            title: '库存批次id',\n            key: 'inventoryId',\n            type: FormTypes.hidden,\n            width:\"10px\",\n            disabled:true,\n          },\n          {\n            title: '备注',\n            key: 'remark',\n            type: FormTypes.input,\n            width:\"200px\",\n            placeholder: '请输入${title}',\n            defaultValue: '',\n          },\n          {\n            title: '备注2',\n            key: 'remark2',\n            type: FormTypes.input,\n            width:\"200px\",\n            placeholder: '请输入${title}',\n            defaultValue: '',\n          },\n          {\n            title: '备注3',\n            key: 'remark3',\n            type: FormTypes.input,\n            width:\"200px\",\n            placeholder: '请输入${title}',\n            defaultValue: '',\n          },\n        ],\n      },\n      url: {\n        add: \"/stock/stkIoBill/add\",\n        edit: \"/stock/stkIoBill/edit\",\n        approve: \"/stock/stkIoBill/approve\",\n        stkIoBillEntry: {\n          list: '/stock/stkIoBill/queryEntryByMainId',\n          editingList: '/stock/stkIoBill/queryEditingEntryByMainId'\n        },\n      }\n    }\n  },\n\n  methods: {\n    getAllTable() {\n      let values = this.tableKeys.map(key => getRefPromise(this, key))\n      return Promise.all(values)\n    },\n\n    addInit() {\n      //销售出库\n      this.model.stockIoType = '191'\n      this.model.isAuto = 0\n      this.model.isRubric = 0\n      //是否有往来\n      this.model.hasRp = 0\n      //结算是否同出库（或取自系统参数）\n      this.model.isSameSettle = 0\n      //处理状态：编辑中\n      this.model.billProcStatus = '12'\n\n      // 请求后台的填值规则接口地址\n      const url = '/sys/fillRule/executeRuleByCode/'\n      const ruleCode = 'stock_io_bill_no'\n      const that = this\n      putAction(url + ruleCode, {}).then(res => {\n        // 执行成功，获取返回的值，并赋到页面上\n        if (res.success) {\n          that.model.billNo = res.result;\n          that.$nextTick(() => {\n            that.form.setFieldsValue({'billNo':res.result, 'billDate':getFormatDate()})\n          })\n        }\n      })\n    },\n    /** 调用完edit()方法之后会自动调用此方法 */\n    editAfter() {\n      if (this.action === 'add') {\n          this.addInit()\n      }\n\n      let fieldval = pick(this.model,'billNo','billDate','sourceType','sourceId','sourceNo','clerkId','isRubric','attachment','remark','billProcStatus','approverId','flowId','isApproved','effectiveTime','isVoided','isClosed','sysOrgCode','createBy','createTime','updateBy','updateTime')\n      this.$nextTick( ()=>this.form.setFieldsValue(fieldval) );\n      // 加载子表数据\n      if (this.model.id) {\n        let params = { id: this.model.id }\n        let url = this.readOnly ? this.url.stkIoBillEntry.list : this.url.stkIoBillEntry.editingList;\n        this.requestSubTableData(url, params, this.stkIoBillEntryTable);\n      }\n    },\n    /** 整理成formData */\n    classifyIntoFormData(allValues) {\n      let main = Object.assign(this.model, allValues.formValue)\n\n      return {\n        ...main, // 展开\n        stkIoBillEntryList: allValues.tablesValue[0].values,\n      }\n    },\n    validateError(msg){\n      this.$message.error(msg)\n    },\n    popupCallback(row){\n      this.form.setFieldsValue(pick(row,'billNo','billDate','sourceType','sourceId','sourceNo','clerkId','isRubric','attachment','remark','billProcStatus','approverId','flowId','isApproved','effectiveTime','isVoided','isClosed','sysOrgCode','createBy','createTime','updateBy','updateTime'))\n    },\n\n    //单元值改变一个字符就触发一次\n    onValueChange(event) {\n      const { type, row, column, value, target } = event\n\n    },\n\n    handleBatchNoSelect(props){\n      let row = props.getValue();\n      let orgFields = props.column.orgFields.split(',');\n      let destFields = props.column.destFields.split(',');\n      let queryParams = {};\n      for(let i = 0; i < orgFields.length; i++) {\n        queryParams[orgFields[i]] = row[destFields[i]];\n      }\n      this.$refs.selectModal.initQueryParams(queryParams);\n      this.$refs.selectModal.visible = true;\n    },\n\n    handleBatchNoSelectCallback(props, selectedRows){\n      let { rowId, target } = props;\n      let orgFields = props.column.orgFields.split(',');\n      let destFields = props.column.destFields.split(',');\n      for(let i = 0; i < selectedRows.length; i++) {\n        let values = {};\n        for(let j = 0; j < orgFields.length; j++) {\n          values[destFields[j]] = selectedRows[i][orgFields[j]];\n        }\n\n        if (i===0) {\n          target.setValues([{rowKey: rowId, values: values}]);\n        } else {\n          target.add();\n          let rowId2 = target.rows[target.rows.length - 1].id;\n          target.setValues([{rowKey: rowId2, values: values}]);\n        }\n      }\n    },\n\n    validateQty(type, value, row, column, callback, target) {\n      if (type !== 'blur') {\n        callback();\n        return;\n      }\n\n      let { values } = target.getValuesSync({ validate: false, rowIds: [row.id]});\n      let inventoryQty = Number(values[0].inventoryQty);\n      let qty = Number(value);\n      if (isNaN(qty) || isNaN(inventoryQty)) {\n        callback();\n        return;\n      }\n      if (qty + inventoryQty < 0) {\n        callback(false, '涨库后不能负库存数量！');\n        return;\n      }\n\n      let inventoryId = values[0].inventoryId;\n      if (!inventoryId) {\n        callback();\n        return;\n      }\n      let totalQty = 0;\n      let obj = target.getValuesSync({ validate: false});\n      values = obj.values;\n      for(let v of values) {\n        qty = Number(v.qty);\n        if (!isNaN(qty)) totalQty += qty;\n      }\n      if (totalQty + inventoryQty < 0) {\n        callback(false, '该库存批次在各分录涨库后不能负库存数量！');\n      } else {\n        callback(true);\n      }\n    },\n  },\n\n}\n",null]}