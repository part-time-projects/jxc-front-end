{"remainingRequest":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ideaworkspace\\jxc-front-end\\src\\views\\system\\modules\\DepartAuthModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ideaworkspace\\jxc-front-end\\src\\views\\system\\modules\\DepartAuthModal.vue","mtime":1648374778148},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1648365068269},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":1648364957239}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {queryTreeListForRole,queryDepartPermission,saveDepartPermission} from '@/api/api'\nimport DepartDataruleModal from './DepartDataruleModal'\n\nexport default {\n  name: 'DepartAuthModal',\n  components: { DepartDataruleModal },\n  data(){\n    return {\n      departId:\"\",\n      treeData: [],\n      defaultCheckedKeys:[],\n      checkedKeys:[],\n      halfCheckedKeys:[],\n      expandedKeysss:[],\n      allTreeKeys:[],\n      autoExpandParent: true,\n      checkStrictly: false,\n      title:\"部门权限配置\",\n      visible: false,\n      loading: false,\n      selectedKeys:[]\n    }\n  },\n  methods: {\n    onTreeNodeSelect(id){\n      if(id && id.length>0){\n        this.selectedKeys = id\n      }\n      this.$refs.datarule.show(this.selectedKeys[0],this.departId)\n    },\n    onCheck (checkedKeys, { halfCheckedKeys }) {\n      // 保存选中的和半选中的，后面保存的时候合并提交\n      this.checkedKeys = checkedKeys\n      this.halfCheckedKeys = halfCheckedKeys\n    },\n    show(departId){\n      this.departId=departId\n      this.loadData();\n    },\n    close () {\n      this.reset()\n      this.$emit('close');\n      this.visible = false;\n    },\n    onExpand(expandedKeys){\n      this.expandedKeysss = expandedKeys;\n      this.autoExpandParent = false\n    },\n    reset () {\n      this.expandedKeysss = []\n      this.checkedKeys = []\n      this.defaultCheckedKeys = []\n      this.loading = false\n    },\n    expandAll () {\n      this.expandedKeysss = this.allTreeKeys\n    },\n    closeAll () {\n      this.expandedKeysss = []\n    },\n    checkALL () {\n      this.checkedKeys = this.allTreeKeys\n    },\n    cancelCheckALL () {\n      this.checkedKeys = []\n    },\n    handleCancel () {\n      this.close()\n    },\n    handleSubmit() {\n      let that = this;\n      if(!that.departId){\n        this.$message.warning('请点击选择一个部门!')\n      }\n      let checkedKeys = [...that.checkedKeys, ...that.halfCheckedKeys]\n      const permissionIds = checkedKeys.join(\",\")\n      let params =  {\n        departId:that.departId,\n        permissionIds,\n        lastpermissionIds:that.defaultCheckedKeys.join(\",\"),\n      };\n      that.loading = true;\n      saveDepartPermission(params).then((res)=>{\n        if(res.success){\n          that.$message.success(res.message);\n          that.loading = false;\n          that.loadData();\n        }else {\n          that.$message.error(res.message);\n          that.loading = false;\n        }\n      })\n    },\n    convertTreeListToKeyLeafPairs(treeList, keyLeafPair = []) {\n      for(const {key, isLeaf, children} of treeList) {\n        keyLeafPair.push({key, isLeaf})\n        if(children && children.length > 0) {\n          this.convertTreeListToKeyLeafPairs(children, keyLeafPair)\n        }\n      }\n      return keyLeafPair;\n    },\n    emptyCurrForm() {\n      this.form.resetFields()\n    },\n    loadData(){\n      queryTreeListForRole().then((res) => {\n        this.treeData = res.result.treeList\n        this.allTreeKeys = res.result.ids\n        const keyLeafPairs = this.convertTreeListToKeyLeafPairs(this.treeData)\n        queryDepartPermission({departId:this.departId}).then((res)=>{\n          // 过滤出 leaf node 即可，即选中的\n          // Tree组件中checkStrictly默认为false的时候，选中子节点，父节点会自动设置选中或半选中\n          // 保存 checkedKeys 以及 halfCheckedKeys 以便于未做任何操作时提交表单数据\n          const checkedKeys = [...res.result].filter(key => {\n            const keyLeafPair = keyLeafPairs.filter(item => item.key === key)[0]\n            return keyLeafPair && keyLeafPair.isLeaf\n          })\n          const halfCheckedKeys = [...res.result].filter(key => {\n            const keyLeafPair = keyLeafPairs.filter(item => item.key === key)[0]\n            return keyLeafPair && !keyLeafPair.isLeaf\n          })\n          this.checkedKeys = [...checkedKeys];\n          this.halfCheckedKeys = [...halfCheckedKeys]\n          this.defaultCheckedKeys = [...halfCheckedKeys, ...checkedKeys];\n          this.expandedKeysss = this.allTreeKeys;\n        })\n      })\n    }\n  },\n}\n",null]}