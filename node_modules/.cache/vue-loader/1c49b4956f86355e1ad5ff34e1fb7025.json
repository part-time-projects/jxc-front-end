{"remainingRequest":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ideaworkspace\\jxc-front-end\\src\\components\\menu\\Contextmenu.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ideaworkspace\\jxc-front-end\\src\\components\\menu\\Contextmenu.vue","mtime":1648374777557},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1648365068269},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":1648364957239}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n\r\nexport default {\r\n  name: 'Contextmenu',\r\n  props: {\r\n    visible: {\r\n      type: Boolean,\r\n      required: false,\r\n      default: false\r\n    },\r\n    itemList: {\r\n      type: Array,\r\n      required: true,\r\n      default: () => []\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      left: 0,\r\n      top: 0,\r\n      target: null,\r\n      selectedKeys: []\r\n    }\r\n  },\r\n  computed: {\r\n    style () {\r\n      return {\r\n        left: this.left + 'px',\r\n        top: this.top + 'px'\r\n      }\r\n    }\r\n  },\r\n  created () {\r\n    window.addEventListener('mousedown', e => this.closeMenu(e))\r\n    window.addEventListener('contextmenu', e => this.setPosition(e))\r\n  },\r\n  methods: {\r\n    closeMenu (e) {\r\n      if (this.visible === true && ['menuitemicon', 'menuitem'].indexOf(e.target.getAttribute('role')) < 0) {\r\n        this.$emit('update:visible', false)\r\n      }\r\n    },\r\n    setPosition (e) {\r\n      this.left = e.clientX\r\n      this.top = e.clientY\r\n      this.target = e.target\r\n    },\r\n    handleClick ({key}) {\r\n      this.$emit('select', key, this.target)\r\n      this.$emit('update:visible', false)\r\n    }\r\n  }\r\n}\r\n",null]}