{"remainingRequest":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ideaworkspace\\jxc-front-end\\src\\views\\erp\\stock\\modules\\OtherOutBillModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ideaworkspace\\jxc-front-end\\src\\views\\erp\\stock\\modules\\OtherOutBillModal.vue","mtime":1648374777646},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1648365068269},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":1648364957239}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport pick from 'lodash.pick'\nimport { FormTypes,getRefPromise,VALIDATE_NO_PASSED, validateFormAndTables } from '@/utils/JEditableTableUtil'\nimport { JEditableTableMixin } from '@/mixins/JEditableTableMixin'\nimport JDate from '@/components/jeecg/JDate'\nimport JUpload from '@/components/jeecg/JUpload'\nimport JSelectUserByDep from '@/components/jeecgbiz/JSelectUserByDep'\nimport JDictSelectTag from \"@/components/dict/JDictSelectTag\"\nimport { getAction, putAction } from '@api/manage'\nimport {getFormatDate} from '../../utils/util'\nimport Vue from \"vue\";\nimport OnlCgreportSelectModal from '../../components/OnlCgreportSelectModal'\n\nexport default {\n  name: 'OtherOutBillModal',\n  mixins: [JEditableTableMixin],\n  components: {\n    JDate,\n    JUpload,\n    JSelectUserByDep,\n    JDictSelectTag,\n    OnlCgreportSelectModal\n  },\n  data() {\n    return {\n      action: '',\n      moreStatus: false,\n      width: '1200px',\n      spans: {\n        labelCol1: { span: 2 },\n        wrapperCol1: { span: 22 },\n        labelCol2: { span: 4 },\n        wrapperCol2: { span: 20 },\n        labelCol3: { span: 6 },\n        wrapperCol3: { span: 18 },\n        labelCol6: { span: 12 },\n        wrapperCol6: { span: 12 }\n       },\n\n      // 新增时子表默认添加几行空数据\n      addDefaultRowNum: 1,\n      validatorRules: {\n        stockIoType: {rules: [\n        ]},\n        billNo: {rules: [\n          {required: true, message: '请输入单据编号!'},\n        ]},\n        billDate: {rules: [\n          {required: true, message: '请输入单据日期!'},\n        ]},\n        sourceType: {rules: [\n        ]},\n        sourceId: {rules: [\n        ]},\n        sourceNo: {rules: [\n        ]},\n        clerkId: {rules: [\n        ]},\n        handlerId: {rules: [\n        ]},\n        hasRp: {rules: [\n        ]},\n        isRubric: {rules: [\n        ]},\n        isSameSettle: {rules: [\n        ]},\n        supplierId: {rules: [\n        ]},\n        customerId: {rules: [\n        ]},\n        attachment: {rules: [\n        ]},\n        remark: {rules: [\n        ]},\n        billProcStatus: {rules: [\n        ]},\n        approverId: {rules: [\n        ]},\n        flowId: {rules: [\n        ]},\n        isApproved: {rules: [\n        ]},\n        effectiveTime: {rules: [\n        ]},\n        isVoided: {rules: [\n        ]},\n        isClosed: {rules: [\n        ]},\n        sysOrgCode: {rules: [\n        ]},\n        createBy: {rules: [\n        ]},\n        createTime: {rules: [\n        ]},\n        updateBy: {rules: [\n        ]},\n        updateTime: {rules: [\n        ]},\n      },\n      refKeys: ['stkIoBillEntry', ],\n      tableKeys:['stkIoBillEntry', ],\n      activeKey: 'stkIoBillEntry',\n      // 明细\n      stkIoBillEntryTable: {\n        loading: false,\n        dataSource: [],\n        columns: [\n          {\n            title: '分录号',\n            key: 'entryNo',\n            type: FormTypes.inputNumber,\n            width:\"60px\",\n            validateRules: [\n              { required: true, message: '${title}不能为空' },\n              { pattern: /^[1-9]\\d*$/, message: '请输入零以上的正整数' },\n              { handler: this.validateEntryNoHandler}],\n          },\n          { //sourceType、sourceEntryId、sourceEntryNo应一起考虑\n            title: '源单分录号',\n            key: 'sourceEntryNo',\n            type: FormTypes.input,\n            width:\"180px\",\n            defaultValue: '',\n            disabled: true,\n          },\n          {\n            title: '物料',\n            key: 'materialId',\n            type: FormTypes.sel_search,\n            dictCode:\"bas_material,name,id\",\n            width:\"200px\",\n            placeholder: '请输入${title}',\n            defaultValue: '',\n            validateRules: [{ required: true, message: '${title}不能为空' }],\n            options:[],\n          },\n          {\n            title: '仓库',\n            key: 'warehouseId',\n            type: FormTypes.select,\n            dictCode:\"bas_warehouse,name,id\",\n            width:\"150px\",\n            placeholder: '请输入${title}',\n            defaultValue: '',\n            options:[],\n            validateRules: [{ required: true, message: '${title}不能为空' }],\n          },\n          {\n            title: '批次号',\n            key: 'batchNo',\n            type: FormTypes.input,\n            width:\"200px\",\n            placeholder: '请输入${title}',\n            defaultValue: '',\n            validateRules: [{ required: true, message: '${title}不能为空' }],\n          },\n          {\n            title: '',\n            key: 'batchNoSelectModal',\n            type: FormTypes.slot,\n            slotName: 'batchNoSelectModal',\n            orgFields: \"material_id,warehouse_id,batch_no,unit_id,unit_id,qty,cost,id\",\n            destFields: \"materialId,warehouseId,batchNo,unitId,inventoryUnitId,inventoryQty,inventoryCost,inventoryId\",\n            width:\"45px\",\n          },\n          {\n            title: '库存单位',\n            key: 'inventoryUnitId',\n            type: FormTypes.select,\n            dictCode:\"bas_measure_unit,name,id\",\n            width:\"100px\",\n            disabled:true,\n          },\n          {\n            title: '库存数量',\n            key: 'inventoryQty',\n            type: FormTypes.input,\n            statistics: \"true\",\n            width:\"100px\",\n            disabled:true,\n          },\n          {\n            title: '出库单位',\n            key: 'unitId',\n            type: FormTypes.select,\n            dictCode:\"bas_measure_unit,name,id\",\n            width:\"100px\",\n            placeholder: '请输入${title}',\n            defaultValue: '',\n            validateRules: [{ required: true, message: '${title}不能为空' }],\n            options:[],\n          },\n          {\n            title: '出库数量',\n            key: 'qty',\n            type: FormTypes.inputNumber,\n            statistics: \"true\",\n            width:\"100px\",\n            placeholder: '请输入${title}',\n            defaultValue: '',\n            validateRules:[\n              { required: true, message: '${title}不能为空' },\n              { handler: this.validateQtyHandler}]\n          },\n          {\n            title: '出库成本',\n            key: 'cost',\n            type: FormTypes.inputNumber,\n            statistics: \"true\",\n            width:\"100px\",\n            placeholder: '请输入${title}',\n            defaultValue: '',\n            disabled: true,\n          },\n          {\n            title: '库存批次id',\n            key: 'inventoryId',\n            type: FormTypes.hidden,\n            width:\"10px\",\n            disabled:true,\n          },\n          {\n            title: '库存成本',\n            key: 'inventoryCost',\n            type: FormTypes.input,\n            statistics: \"true\",\n            width:\"100px\",\n            disabled:true,\n          },\n          {\n            title: '备注',\n            key: 'remark',\n            type: FormTypes.input,\n            width:\"200px\",\n            placeholder: '请输入${title}',\n            defaultValue: '',\n          },\n          {\n            title: '备注2',\n            key: 'remark2',\n            type: FormTypes.input,\n            width:\"200px\",\n            placeholder: '请输入${title}',\n            defaultValue: '',\n          },\n          {\n            title: '备注3',\n            key: 'remark3',\n            type: FormTypes.input,\n            width:\"200px\",\n            placeholder: '请输入${title}',\n            defaultValue: '',\n          },\n        ],\n        settingColumns: []\n      },\n      url: {\n        add: \"/stock/stkIoBill/add\",\n        edit: \"/stock/stkIoBill/edit\",\n        approve: \"/stock/stkIoBill/approve\",\n        stkIoBillEntry: {\n          list: '/stock/stkIoBill/queryEntryByMainId',\n          editingList: '/stock/stkIoBill/queryEditingEntryByMainId'\n        },\n      }\n    }\n  },\n\n  computed: {\n    readOnly: function() {\n      return this.action !== \"add\" && this.action !== \"edit\";\n    }\n  },\n\n  methods: {\n    getAllTable() {\n      let values = this.tableKeys.map(key => getRefPromise(this, key))\n      return Promise.all(values)\n    },\n\n    addInit() {\n      //销售出库\n      this.model.stockIoType = '299'\n      this.model.isRubric = 0\n      //是否有往来\n      this.model.hasRp = 0\n      //结算是否同出库（或取自系统参数）\n      this.model.isSameSettle = 0\n      //处理状态：编辑中\n      this.model.billProcStatus = '12'\n\n      // 请求后台的填值规则接口地址\n      const url = '/sys/fillRule/executeRuleByCode/'\n      const ruleCode = 'stock_io_bill_no'\n      const that = this\n      putAction(url + ruleCode, {}).then(res => {\n        // 执行成功，获取返回的值，并赋到页面上\n        if (res.success) {\n          that.model.billNo = res.result;\n          that.$nextTick(() => {\n            that.form.setFieldsValue({'billNo':res.result, 'billDate':getFormatDate()})\n          })\n        }\n      })\n    },\n    /** 调用完edit()方法之后会自动调用此方法 */\n    editAfter() {\n      if (this.action === 'add') {\n          this.addInit()\n      }\n\n      let fieldval = pick(this.model,'billNo','billDate','sourceType','sourceId','sourceNo','clerkId','handlerId','isRubric','supplierId','customerId','attachment','remark','billProcStatus','approverId','flowId','isApproved','effectiveTime','isVoided','isClosed','sysOrgCode','createBy','createTime','updateBy','updateTime')\n      this.$nextTick( ()=>this.form.setFieldsValue(fieldval) );\n      // 加载子表数据\n      if (this.model.id) {\n        let params = { id: this.model.id }\n        let url = this.readOnly ? this.url.stkIoBillEntry.list : this.url.stkIoBillEntry.editingList;\n        this.requestSubTableData(url, params, this.stkIoBillEntryTable);\n      }\n    },\n    /** 整理成formData */\n    classifyIntoFormData(allValues) {\n      let main = Object.assign(this.model, allValues.formValue)\n\n      return {\n        ...main, // 展开\n        stkIoBillEntryList: allValues.tablesValue[0].values,\n      }\n    },\n    validateError(msg){\n      this.$message.error(msg)\n    },\n    popupCallback(row){\n      this.form.setFieldsValue(pick(row,'billNo','billDate','sourceType','sourceId','sourceNo','clerkId','handlerId','isRubric','supplierId','customerId','attachment','remark','billProcStatus','approverId','flowId','isApproved','effectiveTime','isVoided','isClosed','sysOrgCode','createBy','createTime','updateBy','updateTime'))\n    },\n\n    handleSave() {\n      this.handleOk()\n    },\n    handleSubmit() {\n      //处理状态=编辑完成\n      this.form.setFieldsValue({billProcStatus:'13'})\n\n      /** 触发表单验证 */\n      this.getAllTable().then(tables => {\n        /** 一次性验证主表和所有的次表 */\n        return validateFormAndTables(this.form, tables)\n      }).then(allValues => {\n        if (typeof this.classifyIntoFormData !== 'function') {\n          throw this.throwNotFunction('classifyIntoFormData')\n        }\n        let formData = this.classifyIntoFormData(allValues)\n        // 发起请求\n        return this.request(formData)\n      }).catch(e => {\n        //处理状态=编辑中\n        this.form.setFieldsValue({billProcStatus:'12'})\n\n        if (e.error === VALIDATE_NO_PASSED) {\n          // 如果有未通过表单验证的子表，就自动跳转到它所在的tab\n          this.activeKey = e.index == null ? this.activeKey : this.refKeys[e.index]\n        } else {\n          console.error(e)\n        }\n      })\n    },\n\n    handleApproved() {\n      const that = this;\n      putAction(that.url.approve, {id: that.model.id}).then((res) => {\n        if (res.success) {\n          that.$message.success(res.message);\n          that.$emit('ok')\n          that.close()\n        } else {\n          that.$message.warning(res.message);\n        }\n      })\n    },\n\n    handleToggleMore() {\n      this.moreStatus = !this.moreStatus\n    },\n\n    //列设置更改事件\n    onColSettingsChange (checkedValues) {\n      let key = this.$route.name+\"/stkIoBillEntryTable:colsettings\";\n      Vue.ls.set(key, checkedValues, 7*24*60*60*1000)\n      this.stkIoBillEntryTable.settingColumns = checkedValues;\n      this.stkIoBillEntryTable.columns.forEach (function (item,i,array ) {\n        if (checkedValues.includes(item.key)) {\n          if (item.typeDef !== undefined && item.typeDef !== null\n            && item.typeDef !== \"\" && item.typeDef !== FormTypes.hidden) {\n            item.type = item.typeDef;\n          }\n        } else if (item.type !== FormTypes.hidden) {\n          item.typeDef = item.type;\n          item.type = FormTypes.hidden;\n        }\n      });\n    },\n\n    initColumns(){\n      //权限过滤（列权限控制时打开，修改第二个参数为授权码前缀）\n      //this.defColumns = colAuthFilter(this.defColumns,'testdemo:');\n\n      const key = this.$route.name+\"/stkIoBillEntryTable:colsettings\";\n      let colSettings = Vue.ls.get(key);\n      let that = this;\n      if (colSettings == null) {\n        this.stkIoBillEntryTable.columns.forEach(function (item,i,array ) {\n          that.stkIoBillEntryTable.settingColumns.push(item.key);\n        })\n      }else{\n        this.stkIoBillEntryTable.settingColumns = colSettings;\n        this.stkIoBillEntryTable.columns.forEach(function (item,i,array ) {\n          if (colSettings.includes(item.key)) {\n            if (item.typeDef !== undefined && item.typeDef !== null\n              && item.typeDef !== \"\" && item.typeDef !== FormTypes.hidden) {\n              item.type = item.typeDef;\n            }\n          } else {\n            item.typeDef = item.type;\n            item.type = FormTypes.hidden;\n          }\n        });\n      }\n    },\n\n    onOutEntryAdded(event){\n      const { row, target } = event\n      let { values } = target.getValuesSync({ validate: false });\n      let maxEntryNo = 0;\n      for (let val of values) {\n        let entryNo = Number(val['entryNo']);\n        if (!isNaN(entryNo) && entryNo > maxEntryNo) maxEntryNo = entryNo;\n      }\n      maxEntryNo += 10;\n      target.setValues([{rowKey: row.id, values: {entryNo: maxEntryNo}}]);\n    },\n\n    //单元值改变一个字符就触发一次\n    onValueChange(event) {\n      const { type, row, column, value, target } = event\n\n      //触发：物料ID、仓库id、批次号、出库数量触发，前三者引起库存数量、库存成本等变化，\n      //      这都需要重新计算，所以：简化为每次change都计算。\n      //联动：出库成本\n      let qty = Number(value),\n          inventoryQty = Number(row.inventoryQty),\n          inventoryConst = Number(row.inventoryCost);\n      if (!isNaN(qty) && !isNaN(inventoryQty) && !isNaN(inventoryConst) && inventoryQty>0 &&\n          row.unitId && row.unitId!==\"\" && row.inventoryUnitId && row.inventoryUnitId!==\"\") {\n        const key = row.unitId + \"/\" + row.inventoryUnitId;\n        let rate = row.unitId===row.inventoryUnitId ? 1 : Vue.ls.get(key);\n        if (rate==null) {\n          const url = '/bas/basMeasureUnit/getRate';\n          const params = {toId: row.unitId, fromId: row.inventoryUnitId};\n          getAction(url, params).then(res => {\n            if (res.success) {\n              rate = res.result;\n              Vue.ls.set(key, rate, 7*24*60*60*1000)\n\n              let cost = inventoryConst * qty / (inventoryQty * rate);\n              cost = cost.toFixed(2)\n              target.setValues([{rowKey: row.id, values: {cost: cost}}]);\n            }\n          });\n        }\n        else {\n          let cost = inventoryConst * qty / (inventoryQty * rate);\n          cost = cost.toFixed(2);\n          target.setValues([{rowKey: row.id, values: {cost: cost}}]);\n        }\n      }\n    },\n\n    handleBatchNoSelect(props){\n      let row = props.getValue();\n      let orgFields = props.column.orgFields.split(',');\n      let destFields = props.column.destFields.split(',');\n      let queryParams = {};\n      for(let i = 0; i < orgFields.length; i++) {\n        queryParams[orgFields[i]] = row[destFields[i]];\n      }\n      this.$refs.selectModal.initQueryParams(queryParams);\n      this.$refs.selectModal.visible = true;\n    },\n\n    handleBatchNoSelectCallback(props, selectedRows){\n      let { rowId, target } = props;\n      let orgFields = props.column.orgFields.split(',');\n      let destFields = props.column.destFields.split(',');\n      for(let i = 0; i < selectedRows.length; i++) {\n        let values = {};\n        for(let j = 0; j < orgFields.length; j++) {\n          values[destFields[j]] = selectedRows[i][orgFields[j]];\n        }\n\n        if (i===0) {\n          target.setValues([{rowKey: rowId, values: values}]);\n        } else {\n          target.add();\n          let rowId2 = target.rows[target.rows.length - 1].id;\n          target.setValues([{rowKey: rowId2, values: values}]);\n        }\n      }\n    },\n\n    validateEntryNoHandler(type, value, row, column, callback, target) {\n      if (type !== 'blur') {\n        callback();//无参或者null：不做操作\n        return;\n      }\n\n      let { values } = target.getValuesSync({ validate: false });\n      let count = 0;\n      for (let val of values) {\n        if (Number(val['entryNo']) === Number(value)) {\n          if (++count >= 2) {\n            callback(false, '${title}不能重复');\n            return;\n          }\n        }\n      }\n      callback(true); //true：通过验证\n    },\n\n    validateQtyHandler(type, value, row, column, callback, target) {\n      if (type !== 'blur') {\n        callback();\n        return;\n      }\n\n      let { values } = target.getValuesSync({ validate: false, rowIds: [row.id]});\n      let inventoryQty = Number(values[0].inventoryQty);\n      let qty = Number(value);\n      if (isNaN(qty) || isNaN(inventoryQty)) {\n        callback();\n        return;\n      }\n      if (qty > inventoryQty) {\n        callback(false, '不能大于库存数量！');\n        return;\n      }\n\n      let inventoryId = values[0].inventoryId;\n      if (!inventoryId) {\n        callback();\n        return;\n      }\n      let totalQty = 0;\n      let obj = target.getValuesSync({ validate: false});\n      values = obj.values;\n      for(let v of values) {\n        qty = Number(v.qty);\n        if (!isNaN(qty)) totalQty += qty;\n      }\n      if (totalQty > inventoryQty) {\n        callback(false, '该库存批次的出库数量合计不能大于库存数量！');\n      } else {\n        callback(true);\n      }\n    },\n  },\n\n  created() {\n    this.initColumns();\n  },\n}\n",{"version":3,"sources":["OtherOutBillModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"OtherOutBillModal.vue","sourceRoot":"src/views/erp/stock/modules","sourcesContent":["<template>\r\n  <j-modal\r\n    :title=\"'其他出库 - ' + title\"\r\n    :width=\"width\"\r\n    :visible=\"visible\"\r\n    :confirmLoading=\"confirmLoading\"\r\n    :maskClosable=\"false\"\r\n    :keyboard=\"false\"\r\n    :forceRender=\"true\"\r\n    switchFullscreen\r\n    @cancel=\"handleCancel\">\r\n\r\n    <template slot=\"footer\">\r\n      <a-button v-if=\"action!=='detail'\" key=\"cancel\" @click=\"handleCancel\">取消</a-button>\r\n      <a-button v-if=\"!readOnly\" key=\"save\"   @click=\"handleSave\" type=\"primary\" :loading=\"confirmLoading\">保存</a-button>\r\n      <a-button v-if=\"!readOnly\" key=\"submit\" @click=\"handleSubmit\" type=\"primary\" :loading=\"confirmLoading\">提交</a-button>\r\n      <a-button v-if=\"action==='detail'\"  key=\"close\"  @click=\"handleCancel\" type=\"primary\">关闭</a-button>\r\n      <a-button v-if=\"action==='approve'\"  key=\"approved\"  @click=\"handleApproved\" type=\"primary\">审核通过</a-button>\r\n    </template>\r\n\r\n    <a-spin :spinning=\"confirmLoading\">\r\n      <!-- 主表单区域 -->\r\n      <a-form :form=\"form\">\r\n        <a-row>\r\n          <a-col :span=\"8\">\r\n            <a-form-item label=\"处理状态\" :labelCol=\"spans.labelCol3\" :wrapperCol=\"spans.wrapperCol3\">\r\n              <j-dict-select-tag disabled type=\"list\" v-decorator=\"['billProcStatus', validatorRules.billProcStatus]\" :trigger-change=\"true\" dictCode=\"x_bill_proc_status\"/>\r\n            </a-form-item>\r\n          </a-col>\r\n          <a-col :span=\"4\">\r\n            <a-form-item label=\"是否通过\" :labelCol=\"spans.labelCol6\" :wrapperCol=\"spans.wrapperCol6\">\r\n              <j-dict-select-tag disabled type=\"list\" v-decorator=\"['isApproved', validatorRules.isApproved]\" :trigger-change=\"true\" dictCode=\"yn\" />\r\n            </a-form-item>\r\n          </a-col>\r\n          <a-col :span=\"4\">\r\n            <a-form-item label=\"是否关闭\" :labelCol=\"spans.labelCol6\" :wrapperCol=\"spans.wrapperCol6\">\r\n              <j-dict-select-tag disabled type=\"list\" v-decorator=\"['isClosed', validatorRules.isClosed]\" :trigger-change=\"true\" dictCode=\"yn\" />\r\n            </a-form-item>\r\n          </a-col>\r\n          <a-col :span=\"4\">\r\n            <a-form-item label=\"是否作废\" :labelCol=\"spans.labelCol6\" :wrapperCol=\"spans.wrapperCol6\">\r\n              <j-dict-select-tag disabled type=\"list\" v-decorator=\"['isVoided', validatorRules.isVoided]\" :trigger-change=\"true\" dictCode=\"yn\"/>\r\n            </a-form-item>\r\n          </a-col>\r\n          <a-col :span=\"4\">\r\n            <a @click=\"handleToggleMore\" style=\"float: right; margin-top: 10px\">\r\n              {{ moreStatus ? '收起' : '展开' }}\r\n              <a-icon :type=\"moreStatus ? 'up' : 'down'\"/>\r\n            </a>\r\n          </a-col>\r\n        </a-row>\r\n        <a-row v-show=\"moreStatus\">\r\n          <a-col :span=\"8\">\r\n            <a-form-item label=\"创建时间\" :labelCol=\"spans.labelCol3\" :wrapperCol=\"spans.wrapperCol3\">\r\n              <j-date :readOnly=\"true\" v-decorator=\"[ 'createTime', validatorRules.createTime]\" :trigger-change=\"true\" style=\"width: 100%\"/>\r\n            </a-form-item>\r\n          </a-col>\r\n          <a-col :span=\"8\">\r\n            <a-form-item label=\"创建人\" :labelCol=\"spans.labelCol3\" :wrapperCol=\"spans.wrapperCol3\">\r\n              <j-dict-select-tag disabled type=\"list\" v-decorator=\"['createBy', validatorRules.createBy]\" :trigger-change=\"true\" dictCode=\"sys_user,realname,username\" />\r\n            </a-form-item>\r\n          </a-col>\r\n          <a-col :span=\"8\">\r\n            <a-form-item label=\"创建部门\" :labelCol=\"spans.labelCol3\" :wrapperCol=\"spans.wrapperCol3\">\r\n              <j-dict-select-tag disabled type=\"list\" v-decorator=\"['sysOrgCode', validatorRules.sysOrgCode]\" :trigger-change=\"true\" dictCode=\"sys_depart,depart_name,org_code\" />\r\n            </a-form-item>\r\n          </a-col>\r\n          <a-col :span=\"8\">\r\n            <a-form-item label=\"生效时间\" :labelCol=\"spans.labelCol3\" :wrapperCol=\"spans.wrapperCol3\">\r\n              <j-date :readOnly=\"true\" v-decorator=\"[ 'effectiveTime', validatorRules.effectiveTime]\" :showTime=\"true\" :trigger-change=\"true\" style=\"width: 100%\"/>\r\n            </a-form-item>\r\n          </a-col>\r\n          <a-col :span=\"8\">\r\n            <a-form-item label=\"审核人\" :labelCol=\"spans.labelCol3\" :wrapperCol=\"spans.wrapperCol3\">\r\n              <j-dict-select-tag disabled type=\"list\" v-decorator=\"['approverId', validatorRules.approverId]\" :trigger-change=\"true\" dictCode=\"sys_user,realname,username\" />\r\n            </a-form-item>\r\n          </a-col>\r\n          <a-col :span=\"8\">\r\n            <a-form-item label=\"流程\" :labelCol=\"spans.labelCol3\" :wrapperCol=\"spans.wrapperCol3\">\r\n              <a-input :readOnly=\"true\" v-decorator=\"[ 'flowId', validatorRules.flowId]\" ></a-input>\r\n            </a-form-item>\r\n          </a-col>\r\n          <a-col :span=\"8\">\r\n            <a-form-item label=\"修改时间\" :labelCol=\"spans.labelCol3\" :wrapperCol=\"spans.wrapperCol3\">\r\n              <j-date :readOnly=\"true\" v-decorator=\"[ 'updateTime', validatorRules.updateTime]\" :trigger-change=\"true\" style=\"width: 100%\"/>\r\n            </a-form-item>\r\n          </a-col>\r\n          <a-col :span=\"8\">\r\n            <a-form-item label=\"修改人\" :labelCol=\"spans.labelCol3\" :wrapperCol=\"spans.wrapperCol3\">\r\n              <j-dict-select-tag disabled type=\"list\" v-decorator=\"['updateBy', validatorRules.updateBy]\" :trigger-change=\"true\" dictCode=\"sys_user,realname,username\" />\r\n            </a-form-item>\r\n          </a-col>\r\n          <a-col :span=\"8\">\r\n            <a-form-item label=\"是否红字\" :labelCol=\"spans.labelCol3\" :wrapperCol=\"spans.wrapperCol3\">\r\n              <j-dict-select-tag type=\"list\" v-decorator=\"['isRubric', validatorRules.isRubric]\" :trigger-change=\"true\" dictCode=\"yn\" />\r\n            </a-form-item>\r\n          </a-col>\r\n        </a-row>\r\n        <a-row>\r\n          <a-col :span=\"8\">\r\n            <a-form-item label=\"单据编号\" :labelCol=\"spans.labelCol3\" :wrapperCol=\"spans.wrapperCol3\">\r\n              <a-input :readOnly=\"true\" v-decorator=\"[ 'billNo', validatorRules.billNo]\" ></a-input>\r\n            </a-form-item>\r\n          </a-col>\r\n          <a-col :span=\"8\">\r\n            <a-form-item label=\"单据日期\" :labelCol=\"spans.labelCol3\" :wrapperCol=\"spans.wrapperCol3\">\r\n              <j-date :readOnly=\"readOnly\" placeholder=\"请选择单据日期\" v-decorator=\"[ 'billDate', validatorRules.billDate]\" :trigger-change=\"true\" style=\"width: 100%\"/>\r\n            </a-form-item>\r\n          </a-col>\r\n          <a-col :span=\"8\">\r\n            <a-form-item  label=\"制单人\" :labelCol=\"spans.labelCol3\" :wrapperCol=\"spans.wrapperCol3\">\r\n              <j-dict-select-tag disabled  type=\"list\" v-decorator=\"['createBy', validatorRules.createBy]\" :trigger-change=\"true\" dictCode=\"sys_user,realname,username\" />\r\n            </a-form-item>\r\n          </a-col>\r\n          <a-col :span=\"8\">\r\n            <a-form-item label=\"源单类型\" :labelCol=\"spans.labelCol3\" :wrapperCol=\"spans.wrapperCol3\">\r\n              <j-dict-select-tag :disabled=\"readOnly\" type=\"list\" v-decorator=\"['sourceType', validatorRules.sourceType]\" :trigger-change=\"true\" dictCode=\"x_bill_type\" placeholder=\"请选择源单类型\"/>\r\n            </a-form-item>\r\n          </a-col>\r\n          <a-col :span=\"8\">\r\n            <!--sourceType、sourceId、sourceNo应一起考虑-->\r\n            <a-form-item label=\"源单号\" :labelCol=\"spans.labelCol3\" :wrapperCol=\"spans.wrapperCol3\">\r\n              <a-input :readOnly=\"readOnly\" v-decorator=\"[ 'sourceNo', validatorRules.sourceNo]\" placeholder=\"请输入源单号\"></a-input>\r\n            </a-form-item>\r\n          </a-col>\r\n          <a-col :span=\"8\">\r\n            <a-form-item label=\"业务员\" :labelCol=\"spans.labelCol3\" :wrapperCol=\"spans.wrapperCol3\">\r\n              <j-select-user-by-dep :disabled=\"readOnly\" v-decorator=\"['clerkId', validatorRules.clerkId]\" :trigger-change=\"true\"/>\r\n            </a-form-item>\r\n          </a-col>\r\n          <a-col :span=\"8\">\r\n            <a-form-item label=\"出库经办\" :labelCol=\"spans.labelCol3\" :wrapperCol=\"spans.wrapperCol3\">\r\n              <j-select-user-by-dep :disabled=\"readOnly\" v-decorator=\"['handlerId', validatorRules.handlerId]\" :trigger-change=\"true\"/>\r\n            </a-form-item>\r\n          </a-col>\r\n          <a-col :span=\"8\">\r\n            <a-form-item label=\"客户\" :labelCol=\"spans.labelCol3\" :wrapperCol=\"spans.wrapperCol3\">\r\n              <j-dict-select-tag :disabled=\"readOnly\" type=\"list\" v-decorator=\"['supplierId', validatorRules.customerId]\" :trigger-change=\"true\" dictCode=\"bas_customer,name,id\" placeholder=\"请选择客户\"/>\r\n            </a-form-item>\r\n          </a-col>\r\n        </a-row>\r\n        <a-row>\r\n          <a-col :span=\"24\">\r\n            <a-form-item label=\"备注\" :labelCol=\"spans.labelCol1\" :wrapperCol=\"spans.wrapperCol1\">\r\n              <a-textarea :readOnly=\"readOnly\" v-decorator=\"[ 'remark', validatorRules.remark]\"  rows=\"1\" autoSize></a-textarea>\r\n            </a-form-item>\r\n          </a-col>\r\n          <a-col :span=\"24\">\r\n            <a-form-item label=\"附件\" :labelCol=\"spans.labelCol1\" :wrapperCol=\"spans.wrapperCol1\">\r\n              <j-upload :disabled=\"readOnly\" v-decorator=\"['attachment', validatorRules.attachment]\" :trigger-change=\"true\"></j-upload>\r\n            </a-form-item>\r\n          </a-col>\r\n        </a-row>\r\n      </a-form>\r\n\r\n      <!-- 子表单区域 -->\r\n      <a-tabs v-model=\"activeKey\" @change=\"handleChangeTabs\">\r\n        <a-tab-pane tab=\"明细\" :key=\"refKeys[0]\" :forceRender=\"true\">\r\n          <j-editable-table\r\n            :disabled=\"readOnly\"\r\n            :ref=\"refKeys[0]\"\r\n            :loading=\"stkIoBillEntryTable.loading\"\r\n            :columns=\"stkIoBillEntryTable.columns\"\r\n            :dataSource=\"stkIoBillEntryTable.dataSource\"\r\n            :maxHeight=\"300\"\r\n            :rowNumber=\"false\"\r\n            :rowSelection=\"true\"\r\n            :actionButton=\"!readOnly\"\r\n            @valueChange=\"onValueChange\"\r\n            @added=\"onOutEntryAdded\">\r\n\r\n            <template v-slot:batchNoSelectModal=\"props\" style=\"padding-left: 0\">\r\n              <a-button @click=\"handleBatchNoSelect(props)\" icon=\"ellipsis\"></a-button>\r\n              <onl-cgreport-select-modal\r\n                ref=\"selectModal\"\r\n                title=\"选择库存批次\"\r\n                reportId=\"49d9b3c81f5647dea5b4d1f431613920\"\r\n                :width=\"1100\"\r\n                :multiSelectable=\"true\"\r\n                @callback=\"(selectedRows)=>handleBatchNoSelectCallback(props,selectedRows)\"/>\r\n            </template>\r\n\r\n          </j-editable-table>\r\n        </a-tab-pane>\r\n\r\n        <template slot=\"tabBarExtraContent\">\r\n          <a-popover title=\"自定义列\" trigger=\"click\" placement=\"topRight\">\r\n            <template slot=\"content\">\r\n              <a-checkbox-group @change=\"onColSettingsChange\" :defaultValue=\"stkIoBillEntryTable.settingColumns\" style=\"width: 400px;\">\r\n                <a-row>\r\n                  <template v-for=\"(item,index) in stkIoBillEntryTable.columns\">\r\n                    <template v-if=\"item.key!=='rowIndex'&& item.key!=='action' && item.key!=='flag'\">\r\n                      <a-col :span=\"12\"><a-checkbox :value=\"item.key\">{{ item.title }}</a-checkbox></a-col>\r\n                    </template>\r\n                  </template>\r\n                </a-row>\r\n              </a-checkbox-group>\r\n            </template>\r\n            <a-button type=\"link\" icon=\"setting\">自定义列</a-button>\r\n          </a-popover>\r\n        </template>\r\n      </a-tabs>\r\n    </a-spin>\r\n  </j-modal>\r\n</template>\r\n\r\n<script>\r\n\r\n  import pick from 'lodash.pick'\r\n  import { FormTypes,getRefPromise,VALIDATE_NO_PASSED, validateFormAndTables } from '@/utils/JEditableTableUtil'\r\n  import { JEditableTableMixin } from '@/mixins/JEditableTableMixin'\r\n  import JDate from '@/components/jeecg/JDate'\r\n  import JUpload from '@/components/jeecg/JUpload'\r\n  import JSelectUserByDep from '@/components/jeecgbiz/JSelectUserByDep'\r\n  import JDictSelectTag from \"@/components/dict/JDictSelectTag\"\r\n  import { getAction, putAction } from '@api/manage'\r\n  import {getFormatDate} from '../../utils/util'\r\n  import Vue from \"vue\";\r\n  import OnlCgreportSelectModal from '../../components/OnlCgreportSelectModal'\r\n\r\n  export default {\r\n    name: 'OtherOutBillModal',\r\n    mixins: [JEditableTableMixin],\r\n    components: {\r\n      JDate,\r\n      JUpload,\r\n      JSelectUserByDep,\r\n      JDictSelectTag,\r\n      OnlCgreportSelectModal\r\n    },\r\n    data() {\r\n      return {\r\n        action: '',\r\n        moreStatus: false,\r\n        width: '1200px',\r\n        spans: {\r\n          labelCol1: { span: 2 },\r\n          wrapperCol1: { span: 22 },\r\n          labelCol2: { span: 4 },\r\n          wrapperCol2: { span: 20 },\r\n          labelCol3: { span: 6 },\r\n          wrapperCol3: { span: 18 },\r\n          labelCol6: { span: 12 },\r\n          wrapperCol6: { span: 12 }\r\n         },\r\n\r\n        // 新增时子表默认添加几行空数据\r\n        addDefaultRowNum: 1,\r\n        validatorRules: {\r\n          stockIoType: {rules: [\r\n          ]},\r\n          billNo: {rules: [\r\n            {required: true, message: '请输入单据编号!'},\r\n          ]},\r\n          billDate: {rules: [\r\n            {required: true, message: '请输入单据日期!'},\r\n          ]},\r\n          sourceType: {rules: [\r\n          ]},\r\n          sourceId: {rules: [\r\n          ]},\r\n          sourceNo: {rules: [\r\n          ]},\r\n          clerkId: {rules: [\r\n          ]},\r\n          handlerId: {rules: [\r\n          ]},\r\n          hasRp: {rules: [\r\n          ]},\r\n          isRubric: {rules: [\r\n          ]},\r\n          isSameSettle: {rules: [\r\n          ]},\r\n          supplierId: {rules: [\r\n          ]},\r\n          customerId: {rules: [\r\n          ]},\r\n          attachment: {rules: [\r\n          ]},\r\n          remark: {rules: [\r\n          ]},\r\n          billProcStatus: {rules: [\r\n          ]},\r\n          approverId: {rules: [\r\n          ]},\r\n          flowId: {rules: [\r\n          ]},\r\n          isApproved: {rules: [\r\n          ]},\r\n          effectiveTime: {rules: [\r\n          ]},\r\n          isVoided: {rules: [\r\n          ]},\r\n          isClosed: {rules: [\r\n          ]},\r\n          sysOrgCode: {rules: [\r\n          ]},\r\n          createBy: {rules: [\r\n          ]},\r\n          createTime: {rules: [\r\n          ]},\r\n          updateBy: {rules: [\r\n          ]},\r\n          updateTime: {rules: [\r\n          ]},\r\n        },\r\n        refKeys: ['stkIoBillEntry', ],\r\n        tableKeys:['stkIoBillEntry', ],\r\n        activeKey: 'stkIoBillEntry',\r\n        // 明细\r\n        stkIoBillEntryTable: {\r\n          loading: false,\r\n          dataSource: [],\r\n          columns: [\r\n            {\r\n              title: '分录号',\r\n              key: 'entryNo',\r\n              type: FormTypes.inputNumber,\r\n              width:\"60px\",\r\n              validateRules: [\r\n                { required: true, message: '${title}不能为空' },\r\n                { pattern: /^[1-9]\\d*$/, message: '请输入零以上的正整数' },\r\n                { handler: this.validateEntryNoHandler}],\r\n            },\r\n            { //sourceType、sourceEntryId、sourceEntryNo应一起考虑\r\n              title: '源单分录号',\r\n              key: 'sourceEntryNo',\r\n              type: FormTypes.input,\r\n              width:\"180px\",\r\n              defaultValue: '',\r\n              disabled: true,\r\n            },\r\n            {\r\n              title: '物料',\r\n              key: 'materialId',\r\n              type: FormTypes.sel_search,\r\n              dictCode:\"bas_material,name,id\",\r\n              width:\"200px\",\r\n              placeholder: '请输入${title}',\r\n              defaultValue: '',\r\n              validateRules: [{ required: true, message: '${title}不能为空' }],\r\n              options:[],\r\n            },\r\n            {\r\n              title: '仓库',\r\n              key: 'warehouseId',\r\n              type: FormTypes.select,\r\n              dictCode:\"bas_warehouse,name,id\",\r\n              width:\"150px\",\r\n              placeholder: '请输入${title}',\r\n              defaultValue: '',\r\n              options:[],\r\n              validateRules: [{ required: true, message: '${title}不能为空' }],\r\n            },\r\n            {\r\n              title: '批次号',\r\n              key: 'batchNo',\r\n              type: FormTypes.input,\r\n              width:\"200px\",\r\n              placeholder: '请输入${title}',\r\n              defaultValue: '',\r\n              validateRules: [{ required: true, message: '${title}不能为空' }],\r\n            },\r\n            {\r\n              title: '',\r\n              key: 'batchNoSelectModal',\r\n              type: FormTypes.slot,\r\n              slotName: 'batchNoSelectModal',\r\n              orgFields: \"material_id,warehouse_id,batch_no,unit_id,unit_id,qty,cost,id\",\r\n              destFields: \"materialId,warehouseId,batchNo,unitId,inventoryUnitId,inventoryQty,inventoryCost,inventoryId\",\r\n              width:\"45px\",\r\n            },\r\n            {\r\n              title: '库存单位',\r\n              key: 'inventoryUnitId',\r\n              type: FormTypes.select,\r\n              dictCode:\"bas_measure_unit,name,id\",\r\n              width:\"100px\",\r\n              disabled:true,\r\n            },\r\n            {\r\n              title: '库存数量',\r\n              key: 'inventoryQty',\r\n              type: FormTypes.input,\r\n              statistics: \"true\",\r\n              width:\"100px\",\r\n              disabled:true,\r\n            },\r\n            {\r\n              title: '出库单位',\r\n              key: 'unitId',\r\n              type: FormTypes.select,\r\n              dictCode:\"bas_measure_unit,name,id\",\r\n              width:\"100px\",\r\n              placeholder: '请输入${title}',\r\n              defaultValue: '',\r\n              validateRules: [{ required: true, message: '${title}不能为空' }],\r\n              options:[],\r\n            },\r\n            {\r\n              title: '出库数量',\r\n              key: 'qty',\r\n              type: FormTypes.inputNumber,\r\n              statistics: \"true\",\r\n              width:\"100px\",\r\n              placeholder: '请输入${title}',\r\n              defaultValue: '',\r\n              validateRules:[\r\n                { required: true, message: '${title}不能为空' },\r\n                { handler: this.validateQtyHandler}]\r\n            },\r\n            {\r\n              title: '出库成本',\r\n              key: 'cost',\r\n              type: FormTypes.inputNumber,\r\n              statistics: \"true\",\r\n              width:\"100px\",\r\n              placeholder: '请输入${title}',\r\n              defaultValue: '',\r\n              disabled: true,\r\n            },\r\n            {\r\n              title: '库存批次id',\r\n              key: 'inventoryId',\r\n              type: FormTypes.hidden,\r\n              width:\"10px\",\r\n              disabled:true,\r\n            },\r\n            {\r\n              title: '库存成本',\r\n              key: 'inventoryCost',\r\n              type: FormTypes.input,\r\n              statistics: \"true\",\r\n              width:\"100px\",\r\n              disabled:true,\r\n            },\r\n            {\r\n              title: '备注',\r\n              key: 'remark',\r\n              type: FormTypes.input,\r\n              width:\"200px\",\r\n              placeholder: '请输入${title}',\r\n              defaultValue: '',\r\n            },\r\n            {\r\n              title: '备注2',\r\n              key: 'remark2',\r\n              type: FormTypes.input,\r\n              width:\"200px\",\r\n              placeholder: '请输入${title}',\r\n              defaultValue: '',\r\n            },\r\n            {\r\n              title: '备注3',\r\n              key: 'remark3',\r\n              type: FormTypes.input,\r\n              width:\"200px\",\r\n              placeholder: '请输入${title}',\r\n              defaultValue: '',\r\n            },\r\n          ],\r\n          settingColumns: []\r\n        },\r\n        url: {\r\n          add: \"/stock/stkIoBill/add\",\r\n          edit: \"/stock/stkIoBill/edit\",\r\n          approve: \"/stock/stkIoBill/approve\",\r\n          stkIoBillEntry: {\r\n            list: '/stock/stkIoBill/queryEntryByMainId',\r\n            editingList: '/stock/stkIoBill/queryEditingEntryByMainId'\r\n          },\r\n        }\r\n      }\r\n    },\r\n\r\n    computed: {\r\n      readOnly: function() {\r\n        return this.action !== \"add\" && this.action !== \"edit\";\r\n      }\r\n    },\r\n\r\n    methods: {\r\n      getAllTable() {\r\n        let values = this.tableKeys.map(key => getRefPromise(this, key))\r\n        return Promise.all(values)\r\n      },\r\n\r\n      addInit() {\r\n        //销售出库\r\n        this.model.stockIoType = '299'\r\n        this.model.isRubric = 0\r\n        //是否有往来\r\n        this.model.hasRp = 0\r\n        //结算是否同出库（或取自系统参数）\r\n        this.model.isSameSettle = 0\r\n        //处理状态：编辑中\r\n        this.model.billProcStatus = '12'\r\n\r\n        // 请求后台的填值规则接口地址\r\n        const url = '/sys/fillRule/executeRuleByCode/'\r\n        const ruleCode = 'stock_io_bill_no'\r\n        const that = this\r\n        putAction(url + ruleCode, {}).then(res => {\r\n          // 执行成功，获取返回的值，并赋到页面上\r\n          if (res.success) {\r\n            that.model.billNo = res.result;\r\n            that.$nextTick(() => {\r\n              that.form.setFieldsValue({'billNo':res.result, 'billDate':getFormatDate()})\r\n            })\r\n          }\r\n        })\r\n      },\r\n      /** 调用完edit()方法之后会自动调用此方法 */\r\n      editAfter() {\r\n        if (this.action === 'add') {\r\n            this.addInit()\r\n        }\r\n\r\n        let fieldval = pick(this.model,'billNo','billDate','sourceType','sourceId','sourceNo','clerkId','handlerId','isRubric','supplierId','customerId','attachment','remark','billProcStatus','approverId','flowId','isApproved','effectiveTime','isVoided','isClosed','sysOrgCode','createBy','createTime','updateBy','updateTime')\r\n        this.$nextTick( ()=>this.form.setFieldsValue(fieldval) );\r\n        // 加载子表数据\r\n        if (this.model.id) {\r\n          let params = { id: this.model.id }\r\n          let url = this.readOnly ? this.url.stkIoBillEntry.list : this.url.stkIoBillEntry.editingList;\r\n          this.requestSubTableData(url, params, this.stkIoBillEntryTable);\r\n        }\r\n      },\r\n      /** 整理成formData */\r\n      classifyIntoFormData(allValues) {\r\n        let main = Object.assign(this.model, allValues.formValue)\r\n\r\n        return {\r\n          ...main, // 展开\r\n          stkIoBillEntryList: allValues.tablesValue[0].values,\r\n        }\r\n      },\r\n      validateError(msg){\r\n        this.$message.error(msg)\r\n      },\r\n      popupCallback(row){\r\n        this.form.setFieldsValue(pick(row,'billNo','billDate','sourceType','sourceId','sourceNo','clerkId','handlerId','isRubric','supplierId','customerId','attachment','remark','billProcStatus','approverId','flowId','isApproved','effectiveTime','isVoided','isClosed','sysOrgCode','createBy','createTime','updateBy','updateTime'))\r\n      },\r\n\r\n      handleSave() {\r\n        this.handleOk()\r\n      },\r\n      handleSubmit() {\r\n        //处理状态=编辑完成\r\n        this.form.setFieldsValue({billProcStatus:'13'})\r\n\r\n        /** 触发表单验证 */\r\n        this.getAllTable().then(tables => {\r\n          /** 一次性验证主表和所有的次表 */\r\n          return validateFormAndTables(this.form, tables)\r\n        }).then(allValues => {\r\n          if (typeof this.classifyIntoFormData !== 'function') {\r\n            throw this.throwNotFunction('classifyIntoFormData')\r\n          }\r\n          let formData = this.classifyIntoFormData(allValues)\r\n          // 发起请求\r\n          return this.request(formData)\r\n        }).catch(e => {\r\n          //处理状态=编辑中\r\n          this.form.setFieldsValue({billProcStatus:'12'})\r\n\r\n          if (e.error === VALIDATE_NO_PASSED) {\r\n            // 如果有未通过表单验证的子表，就自动跳转到它所在的tab\r\n            this.activeKey = e.index == null ? this.activeKey : this.refKeys[e.index]\r\n          } else {\r\n            console.error(e)\r\n          }\r\n        })\r\n      },\r\n\r\n      handleApproved() {\r\n        const that = this;\r\n        putAction(that.url.approve, {id: that.model.id}).then((res) => {\r\n          if (res.success) {\r\n            that.$message.success(res.message);\r\n            that.$emit('ok')\r\n            that.close()\r\n          } else {\r\n            that.$message.warning(res.message);\r\n          }\r\n        })\r\n      },\r\n\r\n      handleToggleMore() {\r\n        this.moreStatus = !this.moreStatus\r\n      },\r\n\r\n      //列设置更改事件\r\n      onColSettingsChange (checkedValues) {\r\n        let key = this.$route.name+\"/stkIoBillEntryTable:colsettings\";\r\n        Vue.ls.set(key, checkedValues, 7*24*60*60*1000)\r\n        this.stkIoBillEntryTable.settingColumns = checkedValues;\r\n        this.stkIoBillEntryTable.columns.forEach (function (item,i,array ) {\r\n          if (checkedValues.includes(item.key)) {\r\n            if (item.typeDef !== undefined && item.typeDef !== null\r\n              && item.typeDef !== \"\" && item.typeDef !== FormTypes.hidden) {\r\n              item.type = item.typeDef;\r\n            }\r\n          } else if (item.type !== FormTypes.hidden) {\r\n            item.typeDef = item.type;\r\n            item.type = FormTypes.hidden;\r\n          }\r\n        });\r\n      },\r\n\r\n      initColumns(){\r\n        //权限过滤（列权限控制时打开，修改第二个参数为授权码前缀）\r\n        //this.defColumns = colAuthFilter(this.defColumns,'testdemo:');\r\n\r\n        const key = this.$route.name+\"/stkIoBillEntryTable:colsettings\";\r\n        let colSettings = Vue.ls.get(key);\r\n        let that = this;\r\n        if (colSettings == null) {\r\n          this.stkIoBillEntryTable.columns.forEach(function (item,i,array ) {\r\n            that.stkIoBillEntryTable.settingColumns.push(item.key);\r\n          })\r\n        }else{\r\n          this.stkIoBillEntryTable.settingColumns = colSettings;\r\n          this.stkIoBillEntryTable.columns.forEach(function (item,i,array ) {\r\n            if (colSettings.includes(item.key)) {\r\n              if (item.typeDef !== undefined && item.typeDef !== null\r\n                && item.typeDef !== \"\" && item.typeDef !== FormTypes.hidden) {\r\n                item.type = item.typeDef;\r\n              }\r\n            } else {\r\n              item.typeDef = item.type;\r\n              item.type = FormTypes.hidden;\r\n            }\r\n          });\r\n        }\r\n      },\r\n\r\n      onOutEntryAdded(event){\r\n        const { row, target } = event\r\n        let { values } = target.getValuesSync({ validate: false });\r\n        let maxEntryNo = 0;\r\n        for (let val of values) {\r\n          let entryNo = Number(val['entryNo']);\r\n          if (!isNaN(entryNo) && entryNo > maxEntryNo) maxEntryNo = entryNo;\r\n        }\r\n        maxEntryNo += 10;\r\n        target.setValues([{rowKey: row.id, values: {entryNo: maxEntryNo}}]);\r\n      },\r\n\r\n      //单元值改变一个字符就触发一次\r\n      onValueChange(event) {\r\n        const { type, row, column, value, target } = event\r\n\r\n        //触发：物料ID、仓库id、批次号、出库数量触发，前三者引起库存数量、库存成本等变化，\r\n        //      这都需要重新计算，所以：简化为每次change都计算。\r\n        //联动：出库成本\r\n        let qty = Number(value),\r\n            inventoryQty = Number(row.inventoryQty),\r\n            inventoryConst = Number(row.inventoryCost);\r\n        if (!isNaN(qty) && !isNaN(inventoryQty) && !isNaN(inventoryConst) && inventoryQty>0 &&\r\n            row.unitId && row.unitId!==\"\" && row.inventoryUnitId && row.inventoryUnitId!==\"\") {\r\n          const key = row.unitId + \"/\" + row.inventoryUnitId;\r\n          let rate = row.unitId===row.inventoryUnitId ? 1 : Vue.ls.get(key);\r\n          if (rate==null) {\r\n            const url = '/bas/basMeasureUnit/getRate';\r\n            const params = {toId: row.unitId, fromId: row.inventoryUnitId};\r\n            getAction(url, params).then(res => {\r\n              if (res.success) {\r\n                rate = res.result;\r\n                Vue.ls.set(key, rate, 7*24*60*60*1000)\r\n\r\n                let cost = inventoryConst * qty / (inventoryQty * rate);\r\n                cost = cost.toFixed(2)\r\n                target.setValues([{rowKey: row.id, values: {cost: cost}}]);\r\n              }\r\n            });\r\n          }\r\n          else {\r\n            let cost = inventoryConst * qty / (inventoryQty * rate);\r\n            cost = cost.toFixed(2);\r\n            target.setValues([{rowKey: row.id, values: {cost: cost}}]);\r\n          }\r\n        }\r\n      },\r\n\r\n      handleBatchNoSelect(props){\r\n        let row = props.getValue();\r\n        let orgFields = props.column.orgFields.split(',');\r\n        let destFields = props.column.destFields.split(',');\r\n        let queryParams = {};\r\n        for(let i = 0; i < orgFields.length; i++) {\r\n          queryParams[orgFields[i]] = row[destFields[i]];\r\n        }\r\n        this.$refs.selectModal.initQueryParams(queryParams);\r\n        this.$refs.selectModal.visible = true;\r\n      },\r\n\r\n      handleBatchNoSelectCallback(props, selectedRows){\r\n        let { rowId, target } = props;\r\n        let orgFields = props.column.orgFields.split(',');\r\n        let destFields = props.column.destFields.split(',');\r\n        for(let i = 0; i < selectedRows.length; i++) {\r\n          let values = {};\r\n          for(let j = 0; j < orgFields.length; j++) {\r\n            values[destFields[j]] = selectedRows[i][orgFields[j]];\r\n          }\r\n\r\n          if (i===0) {\r\n            target.setValues([{rowKey: rowId, values: values}]);\r\n          } else {\r\n            target.add();\r\n            let rowId2 = target.rows[target.rows.length - 1].id;\r\n            target.setValues([{rowKey: rowId2, values: values}]);\r\n          }\r\n        }\r\n      },\r\n\r\n      validateEntryNoHandler(type, value, row, column, callback, target) {\r\n        if (type !== 'blur') {\r\n          callback();//无参或者null：不做操作\r\n          return;\r\n        }\r\n\r\n        let { values } = target.getValuesSync({ validate: false });\r\n        let count = 0;\r\n        for (let val of values) {\r\n          if (Number(val['entryNo']) === Number(value)) {\r\n            if (++count >= 2) {\r\n              callback(false, '${title}不能重复');\r\n              return;\r\n            }\r\n          }\r\n        }\r\n        callback(true); //true：通过验证\r\n      },\r\n\r\n      validateQtyHandler(type, value, row, column, callback, target) {\r\n        if (type !== 'blur') {\r\n          callback();\r\n          return;\r\n        }\r\n\r\n        let { values } = target.getValuesSync({ validate: false, rowIds: [row.id]});\r\n        let inventoryQty = Number(values[0].inventoryQty);\r\n        let qty = Number(value);\r\n        if (isNaN(qty) || isNaN(inventoryQty)) {\r\n          callback();\r\n          return;\r\n        }\r\n        if (qty > inventoryQty) {\r\n          callback(false, '不能大于库存数量！');\r\n          return;\r\n        }\r\n\r\n        let inventoryId = values[0].inventoryId;\r\n        if (!inventoryId) {\r\n          callback();\r\n          return;\r\n        }\r\n        let totalQty = 0;\r\n        let obj = target.getValuesSync({ validate: false});\r\n        values = obj.values;\r\n        for(let v of values) {\r\n          qty = Number(v.qty);\r\n          if (!isNaN(qty)) totalQty += qty;\r\n        }\r\n        if (totalQty > inventoryQty) {\r\n          callback(false, '该库存批次的出库数量合计不能大于库存数量！');\r\n        } else {\r\n          callback(true);\r\n        }\r\n      },\r\n    },\r\n\r\n    created() {\r\n      this.initColumns();\r\n    },\r\n  }\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n  .ant-row.ant-form-item {\r\n    margin-bottom: 12px;\r\n  }\r\n</style>\r\n"]}]}