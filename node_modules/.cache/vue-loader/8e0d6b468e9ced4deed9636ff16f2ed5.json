{"remainingRequest":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ideaworkspace\\jxc-front-end\\src\\views\\erp\\stock\\modules\\RubricSalOutBillModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ideaworkspace\\jxc-front-end\\src\\views\\erp\\stock\\modules\\RubricSalOutBillModal.vue","mtime":1648374777648},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1648365139913},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1648365068269},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":1648364957239}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport pick from 'lodash.pick'\nimport { FormTypes,getRefPromise,VALIDATE_NO_PASSED, validateFormAndTables } from '@/utils/JEditableTableUtil'\nimport { JEditableTableMixin } from '@/mixins/JEditableTableMixin'\nimport JDate from '@/components/jeecg/JDate'\nimport JUpload from '@/components/jeecg/JUpload'\nimport JSelectUserByDep from '@/components/jeecgbiz/JSelectUserByDep'\nimport JDictSelectTag from \"@/components/dict/JDictSelectTag\"\nimport { putAction } from '@api/manage'\nimport { billModalMixin } from '../../mixins/billModalMixin'\nimport OnlCgreportSelectModal from '../../components/OnlCgreportSelectModal'\nimport EditableTableColumnsSetter from \"../../components/EditableTableColumnsSetter\";\nimport { getFormatDate } from '../../utils/util'\nimport { validateEntryNo } from '../../utils/editableTableValidate'\n\nexport default {\n  name: 'RubricSalOutBillModal',\n  mixins: [JEditableTableMixin, billModalMixin],\n  components: {\n    EditableTableColumnsSetter,\n    JDate,\n    JUpload,\n    JSelectUserByDep,\n    JDictSelectTag,\n    OnlCgreportSelectModal\n  },\n  data() {\n    return {\n      width: '1200px',\n      moreStatus: false,\n\n      // 新增时子表默认添加几行空数据\n      addDefaultRowNum: 0,\n      refKeys: ['stkIoBillEntry', 'sourceStkIoBillEntry', ],\n      tableKeys:['stkIoBillEntry', ],\n      activeKey: 'stkIoBillEntry',\n\n      // 销售退货入库明细\n      stkIoBillEntryTable: {\n        loading: false,\n        dataSource: [],\n        selectedRowCount: 0,\n        settingColumns: [], //显示列设置\n        columns: [\n          {\n            title: '分录号',\n            key: 'entryNo',\n            type: FormTypes.inputNumber,\n            width:\"60px\",\n            disabled: true,\n          },\n          {\n            title: '源单类型',\n            key: 'sourceType',\n            type: FormTypes.hidden,\n            width:\"1px\",\n            disabled: true,\n          },\n          {\n            title: '源单分录id',\n            key: 'sourceEntryId',\n            type: FormTypes.hidden,\n            width:\"1px\",\n            disabled: true,\n          },\n          {\n            title: '蓝单分录',\n            key: 'sourceEntryNo',\n            type: FormTypes.hidden,\n            width:\"210px\",\n            disabled: true,\n          },\n          {\n            title: '物料',\n            key: 'materialId',\n            type: FormTypes.sel_search,\n            dictCode:\"bas_material,name,id\",\n            width:\"200px\",\n            options:[],\n            disabled: true,\n          },\n          {\n            title: '计量单位',\n            key: 'unitId',\n            type: FormTypes.select,\n            dictCode:\"bas_measure_unit,name,id\",\n            width:\"100px\",\n            options:[],\n            disabled: true,\n          },\n          {\n            title: '出库数量',\n            key: 'qty',\n            type: FormTypes.inputNumber,\n            statistics: \"true\",\n            width:\"100px\",\n            placeholder: '请输入${title}',\n            defaultValue: '',\n            validateRules: [\n              { required: true, message: '${title}不能为空' },\n              { pattern: /^((-\\d+(\\.\\d+)?)|(0+(\\.0+)?))$/, message: '请输入0或负数!' },\n              { handler: this.validateRubric},\n            ],\n          },\n          {\n            title: '出库成本',\n            key: 'cost',\n            type: FormTypes.inputNumber,\n            statistics: \"true\",\n            width:\"100px\",\n            placeholder: '请输入${title}',\n            defaultValue: '',\n            validateRules: [\n              { required: true, message: '${title}不能为空' },\n              { pattern: /^((-\\d+(\\.\\d+)?)|(0+(\\.0+)?))$/, message: '请输入0或负数!' },\n              { handler: this.validateRubric},\n            ],\n          },\n          {\n            title: '成本含税',\n            key: 'isInclTax',\n            type: FormTypes.select,\n            dictCode:\"yn\",\n            width:\"80px\",\n            options:[],\n            disabled: true,\n          },\n          {\n            title: '仓库',\n            key: 'warehouseId',\n            type: FormTypes.select,\n            dictCode:\"bas_warehouse,name,id\",\n            width:\"150px\",\n            options:[],\n            disabled: true,\n          },\n          {\n            title: '批次号',\n            key: 'batchNo',\n            type: FormTypes.input,\n            width:\"200px\",\n            disabled: true,\n          },\n          {\n            title: '结算数量',\n            key: 'settleQty',\n            type: FormTypes.inputNumber,\n            statistics: \"true\",\n            width:\"100px\",\n            placeholder: '请输入${title}',\n            defaultValue: '',\n            validateRules: [\n              { required: true, message: '${title}不能为空' },\n              { pattern: /^((-\\d+(\\.\\d+)?)|(0+(\\.0+)?))$/, message: '请输入0或负数!' },\n              { handler: this.validateRubric},\n            ],\n          },\n          {\n            title: '含税单价',\n            key: 'settlePrice',\n            type: FormTypes.inputNumber,\n            width:\"100px\",\n            placeholder: '请输入${title}',\n            defaultValue: '',\n          },\n          {\n            title: '税率%',\n            key: 'taxRate',\n            type: FormTypes.inputNumber,\n            width:\"100px\",\n            placeholder: '请输入${title}',\n            defaultValue: '',\n          },\n          {\n            title: '税额',\n            key: 'tax',\n            type: FormTypes.inputNumber,\n            statistics: \"true\",\n            width:\"100px\",\n            placeholder: '请输入${title}',\n            defaultValue: '',\n            validateRules: [\n              { pattern: /^((-\\d+(\\.\\d+)?)|(0+(\\.0+)?))$/, message: '请输入0或负数!' },\n              { handler: this.validateRubric},\n            ],\n          },\n          {\n            title: '折让金额',\n            key: 'discountAmt',\n            type: FormTypes.inputNumber,\n            statistics: \"true\",\n            width:\"100px\",\n            placeholder: '请输入${title}',\n            defaultValue: '',\n            validateRules: [\n              { pattern: /^((-\\d+(\\.\\d+)?)|(0+(\\.0+)?))$/, message: '请输入0或负数!' },\n              { handler: this.validateRubric},\n            ],\n          },\n          {\n            title: '折让税额',\n            key: 'discountTax',\n            type: FormTypes.inputNumber,\n            width:\"100px\",\n            placeholder: '请输入${title}',\n            defaultValue: '',\n            validateRules: [\n              { pattern: /^((-\\d+(\\.\\d+)?)|(0+(\\.0+)?))$/, message: '请输入0或负数!' },\n              { handler: this.validateRubric},\n            ],\n          },\n          {\n            title: '结算金额',\n            key: 'settleAmt',\n            type: FormTypes.inputNumber,\n            statistics: \"true\",\n            width:\"120px\",\n            placeholder: '请输入${title}',\n            defaultValue: '',\n            validateRules: [\n              { required: true, message: '${title}不能为空' },\n              { pattern: /^((-\\d+(\\.\\d+)?)|(0+(\\.0+)?))$/, message: '请输入0或负数!' },\n              { handler: this.validateRubric},\n            ],\n          },\n          {\n            title: '已开票数量',\n            key: 'invoicedQty',\n            type: FormTypes.input,\n            statistics: \"true\",\n            width:\"120px\",\n            defaultValue: '',\n            disabled:true,\n          },\n          {\n            title: '已开票金额',\n            key: 'invoicedAmt',\n            type: FormTypes.input,\n            statistics: \"true\",\n            width:\"120px\",\n            defaultValue: '',\n            disabled:true,\n          },\n          {\n            title: '备注',\n            key: 'remark',\n            type: FormTypes.input,\n            width:\"200px\",\n            placeholder: '请输入${title}',\n            defaultValue: '',\n          },\n          {\n            title: '备注2',\n            key: 'remark2',\n            type: FormTypes.input,\n            width:\"200px\",\n            placeholder: '请输入${title}',\n            defaultValue: '',\n          },\n          {\n            title: '备注3',\n            key: 'remark3',\n            type: FormTypes.input,\n            width:\"200px\",\n            placeholder: '请输入${title}',\n            defaultValue: '',\n          },\n          {\n            title: '',\n            key: 'flag',\n            type: FormTypes.hidden,\n            width:\"1px\",\n            placeholder: '',\n            defaultValue: '',\n          },\n        ],\n      },\n\n      //原销售出库单明细\n      sourceStkIoBillEntryTable: {\n        loading: false,\n        dataSource: [],\n        selectedRowCount: 0,\n        disabledRows:{},\n      },\n      validatorRules: {\n        stockIoType: {rules: [\n          ]},\n        billNo: {rules: [\n            {required: true, message: '请输入单据编号!'},\n          ]},\n        billDate: {rules: [\n            {required: true, message: '请输入单据日期!'},\n          ]},\n        sourceType: {rules: [\n          ]},\n        sourceNo: {rules: [\n            {required: true, message: '请选择销售出库单!'},]},\n        clerkId: {rules: [\n          ]},\n        handlerId: {rules: [\n          ]},\n        hasRp: {rules: [\n          ]},\n        isRubric: {rules: [\n          ]},\n        isSameSettle: {rules: [\n          ]},\n        supplierId: {rules: [\n          ]},\n        customerId: {rules: [\n          ]},\n        attachment: {rules: [\n          ]},\n        remark: {rules: [\n          ]},\n        billProcStatus: {rules: [\n          ]},\n        approverId: {rules: [\n          ]},\n        flowId: {rules: [\n          ]},\n        isApproved: {rules: [\n          ]},\n        effectiveTime: {rules: [\n          ]},\n        isVoided: {rules: [\n          ]},\n        isClosed: {rules: [\n          ]},\n        sysOrgCode: {rules: [\n          ]},\n        createBy: {rules: [\n          ]},\n        createTime: {rules: [\n          ]},\n        updateBy: {rules: [\n          ]},\n        updateTime: {rules: [\n          ]},\n      },\n\n      url: {\n        add: \"/stock/stkIoBill/add\",\n        edit: \"/stock/stkIoBill/edit\",\n        approve: \"/stock/stkIoBill/approve\",\n        stkIoBillEntry: {\n          list: '/stock/stkIoBill/queryEntryByMainId'\n        },\n      }\n    }\n  },\n\n  methods: {\n    getAllTable() {\n      let values = this.tableKeys.map(key => getRefPromise(this, key))\n      return Promise.all(values)\n    },\n\n    addInit() {\n      //销售出库（红字）\n      this.model.stockIoType = '2011'\n      this.model.isRubric = 1\n      //是否有往来\n      this.model.hasRp = 1\n      //结算是否同入库（或取自系统参数）\n      this.model.isSameSettle = 0\n      //源单类型：销售出库\n      this.model.sourceType = 'stk_io_bill..201'\n      //处理状态：编辑中\n      this.model.billProcStatus = '12'\n\n      // 请求后台的填值规则接口地址\n      const url = '/sys/fillRule/executeRuleByCode/'\n      const ruleCode = 'stock_io_bill_no'\n      const that = this\n      putAction(url + ruleCode, {}).then(res => {\n        // 执行成功，获取返回的值，并赋到页面上\n        if (res.success) {\n          that.model.billNo = res.result;\n          that.$nextTick( ()=>that.form.setFieldsValue({'billNo':res.result, 'billDate':getFormatDate()}) )\n        }\n      })\n    },\n\n    /** 调用完edit()方法之后会自动调用此方法 */\n    editAfter() {\n      const that = this;\n      //sourceStkIoBillEntry未在tableKeys中\n      this.$nextTick( ()=>that.$refs.sourceStkIoBillEntry.initialize() );\n\n      if (this.action === 'add') {\n        this.addInit();\n        this.activeKey = 'sourceStkIoBillEntry';\n      } else {\n        this.activeKey = 'stkIoBillEntry';\n      }\n\n      let fieldval = pick(this.model,'billNo','billDate','sourceType','sourceNo','clerkId','handlerId',\n        'isRubric','isSameSettle','customerId','attachment','remark',\n        'billProcStatus','approverId','flowId', 'isApproved','effectiveTime','isVoided','isClosed',\n        'sysOrgCode','createBy','createTime','updateBy','updateTime')\n      this.$nextTick(() => {\n        that.form.setFieldsValue(fieldval)\n        that.onIsSameSettleChange(this.model.isSameSettle.toString())\n      })\n      // 加载子表数据\n      if (this.model.id) {\n        let params = { id: this.model.id }\n        this.requestSubTableData(this.url.stkIoBillEntry.list, params, this.stkIoBillEntryTable,\n          loadSecondSubTableData);\n\n        function loadSecondSubTableData(){\n          let params = { id: that.model.sourceId }\n          that.requestSubTableData(that.url.stkIoBillEntry.list, params, that.sourceStkIoBillEntryTable, that.refreshDisabledRows);\n        }\n      }\n    },\n\n    /** 整理成formData */\n    classifyIntoFormData(allValues) {\n      let main = Object.assign(this.model, allValues.formValue)\n\n      return {\n        ...main, // 展开source.dataSource =\n        stkIoBillEntryList: allValues.tablesValue[0].values,\n      }\n    },\n\n    validateError(msg){\n      this.$message.error(msg)\n    },\n\n    popupCallback(row){\n      this.form.setFieldsValue(pick(row,'billNo','billDate','sourceType','sourceNo','clerkId','handlerId',\n        'isRubric','isSameSettle','customerId','attachment','remark',\n        'billProcStatus','approverId','flowId','isApproved','effectiveTime','isVoided','isClosed',\n        'sysOrgCode','createBy','createTime','updateBy','updateTime'))\n    },\n\n    onIsSameSettleChange(val) {\n      this.$refs.stkIoBillEntry.columns.forEach(function (item, i, array ) {\n        if (item.key === \"settleQty\" || item.key === \"settleAmt\") {\n          item.disabled = (val === '1');\n        }\n      });\n\n      if (val === '1') {\n        let { error, values } = this.$refs.stkIoBillEntry.getValuesSync({ validate: false})\n        for (let v of values) {\n          this.$refs.stkIoBillEntry.setValues([{rowKey: v.id, values: {settleQty: v.qty, settleAmt:v.cost}}]);\n        }\n      }\n    },\n\n    //单元值改变一个字符就触发一次\n    onValueChange(event) {\n      const { type, row, column, value, target } = event\n\n      //联动\n      //触发：入库数量, 联动列结算数量\n      if (column.key === 'qty') {\n        if (this.form.getFieldValue(\"isSameSettle\") === '1') {\n          target.setValues([{rowKey: row.id, values: {settleQty: value}}]);\n        }\n      }\n      //触发：入库成本, 联动：结算金额\n      else if (column.key === 'cost') {\n        if (this.form.getFieldValue(\"isSameSettle\") === '1') {\n          target.setValues([{rowKey: row.id, values: {settleAmt: value}}]);\n        }\n      }\n    },\n\n    handleSourceSelect() {\n      let queryParams = {};\n      queryParams['customer_id'] = this.form.getFieldValue('customerId');\n      this.$refs.selectModal.initQueryParams(queryParams);\n      this.$refs.selectModal.visible = true;\n    },\n    handleSourceSelectCallback(selectedRows){\n      if ( this.model.sourceId === selectedRows[0]['id']) return;\n\n      this.model.sourceId = selectedRows[0]['id'];\n      this.form.setFieldsValue({sourceNo: selectedRows[0]['bill_no'],\n        customerId: selectedRows[0]['customer_id']});\n\n      // 加载子表数据\n      let params = { id: this.model.sourceId }\n      this.requestSubTableData(this.url.stkIoBillEntry.list, params, this.sourceStkIoBillEntryTable, this.refreshDisabledRows);\n    },\n\n    handleAddEntry(){\n      let source = this.$refs.sourceStkIoBillEntry,\n          target = this.$refs.stkIoBillEntry;\n\n      let { values } = source.getValuesSync({ validate: false, rowIds: source.selectedRowIds});\n      for(let v of values) {\n        let row = pick(v, 'entryNo','materialId','unitId','isInclTax','warehouseId','batchNo','settlePrice','taxRate');\n        row.sourceType = 'stk_io_bill.stk_io_bill_entry.201';\n        row.sourceEntryId = v.id;\n        row.sourceEntryNo = this.form.getFieldValue(\"sourceNo\") + '.' + v.entryNo;\n        row.qty = -v.qty;\n        row.cost = -v.cost;\n        row.settleQty = -v.settleQty;\n        row.tax = -v.tax;\n        row.discountAmt = -v.discountAmt;\n        row.discountTax = -v.discountTax;\n        row.settleAmt = -v.settleAmt;\n        target.add();\n        let rowId = target.rows[target.rows.length - 1].id;\n        target.setValues([{rowKey: rowId, values: row}]);\n      }\n      this.refreshDisabledRows();\n    },\n\n    handleRemoveEntry(){\n      this.$refs.stkIoBillEntry.removeSelectedRows();\n      this.refreshDisabledRows();\n    },\n\n    refreshDisabledRows(){\n      let that = this;\n      let entryNos = [];\n      let { values } = that.$refs.stkIoBillEntry.getValuesSync({ validate: false});\n      for(let v of values) {\n        entryNos.push(Number(v.entryNo));\n      }\n      that.sourceStkIoBillEntryTable.disabledRows = entryNos.length===0 ? {} : {entryNo:entryNos};\n      //disabledRowIds不初始会保留前面的数据，导致与disabledRows不一致！\n      that.$refs.sourceStkIoBillEntry.disabledRowIds = [];\n      //使新的disabledRows生效\n      let dataSource = [...that.sourceStkIoBillEntryTable.dataSource];\n      that.sourceStkIoBillEntryTable.dataSource = dataSource;\n    },\n\n    validateRubric(type, value, row, column, callback, target) {\n      if (type !== 'blur') {\n        callback();\n        return;\n      }\n\n      let { values } = target.getValuesSync({ validate: false, rowIds: [row.id]});\n      let rubric = Number(values[0][column.key]);\n      if (isNaN(rubric)) {\n        callback();\n        return;\n      }\n\n      let sourceEntryId = values[0].sourceEntryId;\n      let rows = this.sourceStkIoBillEntryTable.dataSource.filter(row => row.id === sourceEntryId);\n      let blue = rows[0][column.key]\n      if (isNaN(blue)) {\n        callback();\n        return;\n      }\n\n      if (-rubric > blue) {\n        callback(false, '不能超过出库！');\n        return;\n      }\n\n      callback(true); //true：通过验证\n    },\n\n  },\n\n}\n",null]}