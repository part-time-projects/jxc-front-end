{"remainingRequest":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ideaworkspace\\jxc-front-end\\src\\views\\erp\\bas\\BasMaterialCategoryList.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ideaworkspace\\jxc-front-end\\src\\views\\erp\\bas\\BasMaterialCategoryList.vue","mtime":1648374777605},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1648365068269},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":1648364957239}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport { getAction, deleteAction } from '@/api/manage'\nimport { JeecgListMixin } from '@/mixins/JeecgListMixin'\nimport BasMaterialCategoryModal from './modules/BasMaterialCategoryModal'\nimport {filterMultiDictText} from '@/components/dict/JDictSelectUtil'\n\nexport default {\n  name: \"BasMaterialCategoryList\",\n  mixins:[JeecgListMixin],\n  components: {\n    BasMaterialCategoryModal\n  },\n  data () {\n    return {\n      description: '物料分类管理',\n      // 表头\n      columns: [\n        {\n          title:'名称',\n          fixed: 'left',\n          width:300,\n          align:\"left\",\n          dataIndex: 'name'\n        },\n        {\n          title:'编码',\n          fixed: 'left',\n          width:200,\n          align:\"left\",\n          dataIndex: 'code',\n          scopedSlots: { customRender: 'code' }\n        },\n        {\n          title:'全名',\n          align:\"left\",\n          dataIndex: 'fullname'\n        },\n        {\n          title:'是否启用',\n          width:75,\n          align:\"center\",\n          dataIndex: 'isEnabled_dictText'\n        },\n        {\n          title: '操作',\n          dataIndex: 'action',\n          fixed:'right',\n          width:120,\n          align:\"center\",\n          scopedSlots: { customRender: 'action' },\n        }\n      ],\n      url: {\n        list: \"/bas/basMaterialCategory/rootList\",\n        childList: \"/bas/basMaterialCategory/childList\",\n        delete: \"/bas/basMaterialCategory/delete\",\n        deleteBatch: \"/bas/basMaterialCategory/deleteBatch\",\n        exportXlsUrl: \"/bas/basMaterialCategory/exportXls\",\n        importExcelUrl: \"bas/basMaterialCategory/importExcel\",\n      },\n      expandedRowKeys:[],\n      hasChildrenField:\"hasChild\",\n      pidField:\"pid\",\n      dictOptions: {},\n      loadParent: false\n    }\n  },\n  computed: {\n    importExcelUrl(){\n      return `${window._CONFIG['domianURL']}/${this.url.importExcelUrl}`;\n    },\n    tableProps() {\n      let _this = this\n      return {\n        // 列表项是否可选择\n        rowSelection: {\n          selectedRowKeys: _this.selectedRowKeys,\n          onChange: (selectedRowKeys) => _this.selectedRowKeys = selectedRowKeys\n        }\n      }\n    }\n  },\n\n  methods: {\n    initDictConfig(){\n    },\n\n    loadData(arg){\n      if(arg==1){\n        this.ipagination.current=1\n      }\n      this.loading = true\n      this.expandedRowKeys = []\n      let params = this.getQueryParams()\n      return new Promise((resolve) => {\n        getAction(this.url.list,params).then(res=>{\n          if(res.success){\n            let result = res.result\n            if(Number(result.total)>0){\n              this.ipagination.total = Number(result.total)\n              this.dataSource = this.getDataByResult(res.result.records)\n              resolve()\n            }else{\n              this.ipagination.total=0\n              this.dataSource=[]\n            }\n          }else{\n            this.$message.warning(res.message)\n          }\n          this.loading = false\n        })\n      })\n    },\n    getDataByResult(result){\n      return result.map(item=>{\n        //判断是否标记了带有子节点\n        if(item[this.hasChildrenField]=='1'){\n          let loadChild = { id: item.id+'_loadChild', name: 'loading...', isLoading: true }\n          item.children = [loadChild]\n        }\n        return item\n      })\n    },\n    handleExpand(expanded, record){\n      // 判断是否是展开状态\n      if (expanded) {\n        this.expandedRowKeys.push(record.id)\n        if (record.children.length>0 && record.children[0].isLoading === true) {\n          let params = this.getQueryParams();//查询条件\n          params[this.pidField] = record.id\n          getAction(this.url.childList,params).then((res)=>{\n            if(res.success){\n              if(res.result && res.result.length>0){\n                record.children = this.getDataByResult(res.result)\n                this.dataSource = [...this.dataSource]\n              }else{\n                record.children=''\n                record.hasChildrenField='0'\n              }\n            }else{\n              this.$message.warning(res.message)\n            }\n          })\n        }\n      }else{\n        let keyIndex = this.expandedRowKeys.indexOf(record.id)\n        if(keyIndex>=0){\n          this.expandedRowKeys.splice(keyIndex, 1);\n        }\n      }\n    },\n\n    modalFormOk(formData,arr){\n      if(!formData.id){\n        this.addOk(formData,arr)\n      }else{\n        if(!arr){\n          this.loadData()\n        }else{\n          this.editOk(formData,this.dataSource)\n          this.dataSource=[...this.dataSource]\n        }\n      }\n    },\n    editOk(formData,arr){\n      if(arr && arr.length>0){\n        for(let i=0;i<arr.length;i++){\n          if(arr[i].id==formData.id){\n            arr[i]=formData\n            break\n          }else{\n            this.editOk(formData,arr[i].children)\n          }\n        }\n      }\n    },\n    async addOk(formData,arr){\n      if(!formData[this.pidField]){\n        this.loadData()\n      }else{\n        if(this.loadParent===true){\n          this.expandTreeNode(formData[this.pidField])\n          this.loadParent = false\n        }else{\n          this.expandedRowKeys=[]\n          for(let i of arr){\n            await this.expandTreeNode(i)\n          }\n        }\n      }\n    },\n    expandTreeNode(nodeId){\n      return new Promise((resolve,reject)=>{\n        this.getFormDataById(nodeId,this.dataSource)\n        let row = this.parentFormData\n        this.expandedRowKeys.push(nodeId)\n        let params = this.getQueryParams();//查询条件\n        params[this.pidField] = nodeId\n        getAction(this.url.childList,params).then((res)=>{\n          if(res.success){\n            if(res.result && res.result.length>0){\n              row.children = this.getDataByResult(res.result)\n            }else{\n              row.children=''\n            }\n            this.dataSource = [...this.dataSource]\n            resolve()\n          }else{\n            reject()\n          }\n        })\n      })\n    },\n    getFormDataById(id,arr){\n      if(arr && arr.length>0){\n        for(let i=0;i<arr.length;i++){\n          if(arr[i].id==id){\n            this.parentFormData = arr[i]\n          }else{\n            this.getFormDataById(id,arr[i].children)\n          }\n        }\n      }\n    },\n    handleAddChild(record){\n      this.loadParent = true\n      let obj = {}\n      obj[this.pidField] = record['id']\n      this.$refs.modalForm.add(obj);\n    },\n    handleDeleteNode(record) {\n      if(!this.url.delete){\n        this.$message.error(\"请设置url.delete属性!\")\n        return\n      }\n      var that = this;\n      deleteAction(that.url.delete, {id: record.id}).then((res) => {\n        if (res.success) {\n          if(!record[this.pidField] || record[this.pidField] =='0' || record[this.pidField].length==0){\n            that.loadData(1)\n          }else{\n            that.$message.success(res.message);\n            that.expandTreeNode(record[this.pidField]);\n          }\n        } else {\n          that.$message.warning(res.message);\n        }\n      });\n    },\n\n    myHandleAdd(){\n      this.$refs.modalForm.action = \"add\";\n      this.handleAdd();\n    },\n    myHandleEdit(record){\n      record.billProcStatus = '12';\n      this.$refs.modalForm.action = \"edit\";\n      this.handleEdit(record);\n    },\n    myHandleDetail(record){\n      this.$refs.modalForm.action = \"detail\";\n      this.handleDetail(record);\n    },\n\n  }\n}\n",{"version":3,"sources":["BasMaterialCategoryList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyfile":"BasMaterialCategoryList.vue","sourceRoot":"src/views/erp/bas","sourcesContent":["<template>\r\n  <a-card :bordered=\"false\">\r\n\r\n    <!-- 操作按钮区域 -->\r\n    <div class=\"table-operator\">\r\n      <a-button type=\"link\" @click=\"myHandleAdd\" icon=\"plus\">新增</a-button>\r\n      <!--      <a-button type=\"link\" icon=\"download\" @click=\"handleExportXls('物料分类')\">导出</a-button>\r\n      <a-upload name=\"file\" :showUploadList=\"false\" :multiple=\"false\" :headers=\"tokenHeader\" :action=\"importExcelUrl\" @change=\"handleImportExcel\">\r\n        <a-button type=\"link\" icon=\"import\">导入</a-button>\r\n      </a-upload>-->\r\n    </div>\r\n\r\n    <!-- table区域-begin -->\r\n      <a-table\r\n        ref=\"table\"\r\n        size=\"middle\"\r\n        rowKey=\"id\"\r\n        :scroll=\"{ x: 1500}\"\r\n        class=\"j-table-force-nowrap\"\r\n        :columns=\"columns\"\r\n        :dataSource=\"dataSource\"\r\n        :pagination=\"ipagination\"\r\n        :loading=\"loading\"\r\n        :expandedRowKeys=\"expandedRowKeys\"\r\n        @change=\"handleTableChange\"\r\n        @expand=\"handleExpand\"\r\n        v-bind=\"tableProps\">\r\n\r\n        <a slot=\"code\" @click=\"myHandleDetail(record)\" slot-scope=\"text, record\">{{text}}</a>\r\n\r\n        <span slot=\"action\" slot-scope=\"text, record\">\r\n          <a @click=\"myHandleEdit(record)\">编辑</a>\r\n          <a-divider type=\"vertical\" />\r\n          <a-dropdown>\r\n            <a class=\"ant-dropdown-link\">更多 <a-icon type=\"down\" /></a>\r\n            <a-menu slot=\"overlay\">\r\n              <a-menu-item>\r\n                <a @click=\"handleAddChild(record)\">添加下级</a>\r\n              </a-menu-item>\r\n              <a-menu-item>\r\n                <a-popconfirm title=\"确定删除吗?\" @confirm=\"() => handleDeleteNode(record)\">\r\n                  <a>删除</a>\r\n                </a-popconfirm>\r\n              </a-menu-item>\r\n            </a-menu>\r\n          </a-dropdown>\r\n        </span>\r\n\r\n      </a-table>\r\n    </div>\r\n\r\n    <basMaterialCategory-modal ref=\"modalForm\" @ok=\"modalFormOk\"></basMaterialCategory-modal>\r\n  </a-card>\r\n</template>\r\n\r\n<script>\r\n\r\n  import { getAction, deleteAction } from '@/api/manage'\r\n  import { JeecgListMixin } from '@/mixins/JeecgListMixin'\r\n  import BasMaterialCategoryModal from './modules/BasMaterialCategoryModal'\r\n  import {filterMultiDictText} from '@/components/dict/JDictSelectUtil'\r\n\r\n  export default {\r\n    name: \"BasMaterialCategoryList\",\r\n    mixins:[JeecgListMixin],\r\n    components: {\r\n      BasMaterialCategoryModal\r\n    },\r\n    data () {\r\n      return {\r\n        description: '物料分类管理',\r\n        // 表头\r\n        columns: [\r\n          {\r\n            title:'名称',\r\n            fixed: 'left',\r\n            width:300,\r\n            align:\"left\",\r\n            dataIndex: 'name'\r\n          },\r\n          {\r\n            title:'编码',\r\n            fixed: 'left',\r\n            width:200,\r\n            align:\"left\",\r\n            dataIndex: 'code',\r\n            scopedSlots: { customRender: 'code' }\r\n          },\r\n          {\r\n            title:'全名',\r\n            align:\"left\",\r\n            dataIndex: 'fullname'\r\n          },\r\n          {\r\n            title:'是否启用',\r\n            width:75,\r\n            align:\"center\",\r\n            dataIndex: 'isEnabled_dictText'\r\n          },\r\n          {\r\n            title: '操作',\r\n            dataIndex: 'action',\r\n            fixed:'right',\r\n            width:120,\r\n            align:\"center\",\r\n            scopedSlots: { customRender: 'action' },\r\n          }\r\n        ],\r\n        url: {\r\n          list: \"/bas/basMaterialCategory/rootList\",\r\n          childList: \"/bas/basMaterialCategory/childList\",\r\n          delete: \"/bas/basMaterialCategory/delete\",\r\n          deleteBatch: \"/bas/basMaterialCategory/deleteBatch\",\r\n          exportXlsUrl: \"/bas/basMaterialCategory/exportXls\",\r\n          importExcelUrl: \"bas/basMaterialCategory/importExcel\",\r\n        },\r\n        expandedRowKeys:[],\r\n        hasChildrenField:\"hasChild\",\r\n        pidField:\"pid\",\r\n        dictOptions: {},\r\n        loadParent: false\r\n      }\r\n    },\r\n    computed: {\r\n      importExcelUrl(){\r\n        return `${window._CONFIG['domianURL']}/${this.url.importExcelUrl}`;\r\n      },\r\n      tableProps() {\r\n        let _this = this\r\n        return {\r\n          // 列表项是否可选择\r\n          rowSelection: {\r\n            selectedRowKeys: _this.selectedRowKeys,\r\n            onChange: (selectedRowKeys) => _this.selectedRowKeys = selectedRowKeys\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    methods: {\r\n      initDictConfig(){\r\n      },\r\n\r\n      loadData(arg){\r\n        if(arg==1){\r\n          this.ipagination.current=1\r\n        }\r\n        this.loading = true\r\n        this.expandedRowKeys = []\r\n        let params = this.getQueryParams()\r\n        return new Promise((resolve) => {\r\n          getAction(this.url.list,params).then(res=>{\r\n            if(res.success){\r\n              let result = res.result\r\n              if(Number(result.total)>0){\r\n                this.ipagination.total = Number(result.total)\r\n                this.dataSource = this.getDataByResult(res.result.records)\r\n                resolve()\r\n              }else{\r\n                this.ipagination.total=0\r\n                this.dataSource=[]\r\n              }\r\n            }else{\r\n              this.$message.warning(res.message)\r\n            }\r\n            this.loading = false\r\n          })\r\n        })\r\n      },\r\n      getDataByResult(result){\r\n        return result.map(item=>{\r\n          //判断是否标记了带有子节点\r\n          if(item[this.hasChildrenField]=='1'){\r\n            let loadChild = { id: item.id+'_loadChild', name: 'loading...', isLoading: true }\r\n            item.children = [loadChild]\r\n          }\r\n          return item\r\n        })\r\n      },\r\n      handleExpand(expanded, record){\r\n        // 判断是否是展开状态\r\n        if (expanded) {\r\n          this.expandedRowKeys.push(record.id)\r\n          if (record.children.length>0 && record.children[0].isLoading === true) {\r\n            let params = this.getQueryParams();//查询条件\r\n            params[this.pidField] = record.id\r\n            getAction(this.url.childList,params).then((res)=>{\r\n              if(res.success){\r\n                if(res.result && res.result.length>0){\r\n                  record.children = this.getDataByResult(res.result)\r\n                  this.dataSource = [...this.dataSource]\r\n                }else{\r\n                  record.children=''\r\n                  record.hasChildrenField='0'\r\n                }\r\n              }else{\r\n                this.$message.warning(res.message)\r\n              }\r\n            })\r\n          }\r\n        }else{\r\n          let keyIndex = this.expandedRowKeys.indexOf(record.id)\r\n          if(keyIndex>=0){\r\n            this.expandedRowKeys.splice(keyIndex, 1);\r\n          }\r\n        }\r\n      },\r\n\r\n      modalFormOk(formData,arr){\r\n        if(!formData.id){\r\n          this.addOk(formData,arr)\r\n        }else{\r\n          if(!arr){\r\n            this.loadData()\r\n          }else{\r\n            this.editOk(formData,this.dataSource)\r\n            this.dataSource=[...this.dataSource]\r\n          }\r\n        }\r\n      },\r\n      editOk(formData,arr){\r\n        if(arr && arr.length>0){\r\n          for(let i=0;i<arr.length;i++){\r\n            if(arr[i].id==formData.id){\r\n              arr[i]=formData\r\n              break\r\n            }else{\r\n              this.editOk(formData,arr[i].children)\r\n            }\r\n          }\r\n        }\r\n      },\r\n      async addOk(formData,arr){\r\n        if(!formData[this.pidField]){\r\n          this.loadData()\r\n        }else{\r\n          if(this.loadParent===true){\r\n            this.expandTreeNode(formData[this.pidField])\r\n            this.loadParent = false\r\n          }else{\r\n            this.expandedRowKeys=[]\r\n            for(let i of arr){\r\n              await this.expandTreeNode(i)\r\n            }\r\n          }\r\n        }\r\n      },\r\n      expandTreeNode(nodeId){\r\n        return new Promise((resolve,reject)=>{\r\n          this.getFormDataById(nodeId,this.dataSource)\r\n          let row = this.parentFormData\r\n          this.expandedRowKeys.push(nodeId)\r\n          let params = this.getQueryParams();//查询条件\r\n          params[this.pidField] = nodeId\r\n          getAction(this.url.childList,params).then((res)=>{\r\n            if(res.success){\r\n              if(res.result && res.result.length>0){\r\n                row.children = this.getDataByResult(res.result)\r\n              }else{\r\n                row.children=''\r\n              }\r\n              this.dataSource = [...this.dataSource]\r\n              resolve()\r\n            }else{\r\n              reject()\r\n            }\r\n          })\r\n        })\r\n      },\r\n      getFormDataById(id,arr){\r\n        if(arr && arr.length>0){\r\n          for(let i=0;i<arr.length;i++){\r\n            if(arr[i].id==id){\r\n              this.parentFormData = arr[i]\r\n            }else{\r\n              this.getFormDataById(id,arr[i].children)\r\n            }\r\n          }\r\n        }\r\n      },\r\n      handleAddChild(record){\r\n        this.loadParent = true\r\n        let obj = {}\r\n        obj[this.pidField] = record['id']\r\n        this.$refs.modalForm.add(obj);\r\n      },\r\n      handleDeleteNode(record) {\r\n        if(!this.url.delete){\r\n          this.$message.error(\"请设置url.delete属性!\")\r\n          return\r\n        }\r\n        var that = this;\r\n        deleteAction(that.url.delete, {id: record.id}).then((res) => {\r\n          if (res.success) {\r\n            if(!record[this.pidField] || record[this.pidField] =='0' || record[this.pidField].length==0){\r\n              that.loadData(1)\r\n            }else{\r\n              that.$message.success(res.message);\r\n              that.expandTreeNode(record[this.pidField]);\r\n            }\r\n          } else {\r\n            that.$message.warning(res.message);\r\n          }\r\n        });\r\n      },\r\n\r\n      myHandleAdd(){\r\n        this.$refs.modalForm.action = \"add\";\r\n        this.handleAdd();\r\n      },\r\n      myHandleEdit(record){\r\n        record.billProcStatus = '12';\r\n        this.$refs.modalForm.action = \"edit\";\r\n        this.handleEdit(record);\r\n      },\r\n      myHandleDetail(record){\r\n        this.$refs.modalForm.action = \"detail\";\r\n        this.handleDetail(record);\r\n      },\r\n\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n  @import '~@assets/less/common.less';\r\n\r\n  .table-page-search-wrapper {\r\n    margin-bottom: 8px;\r\n  }\r\n\r\n  .table-page-search-wrapper .ant-form-item,\r\n  .table-page-search-wrapper .table-page-search-submitButtons {\r\n    margin-top: 12px;\r\n    margin-bottom: 12px;\r\n  }\r\n</style>\r\n"]}]}