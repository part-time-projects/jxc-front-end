{"remainingRequest":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ideaworkspace\\jxc-front-end\\src\\views\\erp\\finance\\modules\\RubricSalInvoiceModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ideaworkspace\\jxc-front-end\\src\\views\\erp\\finance\\modules\\RubricSalInvoiceModal.vue","mtime":1648374777632},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1648365139913},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1648365068269},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648365135345},{"path":"D:\\ideaworkspace\\jxc-front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":1648364957239}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport pick from 'lodash.pick'\nimport { FormTypes, getRefPromise, VALIDATE_NO_PASSED, validateFormAndTables } from '@/utils/JEditableTableUtil'\nimport { JEditableTableMixin } from '@/mixins/JEditableTableMixin'\nimport JDate from '@/components/jeecg/JDate'\nimport JUpload from '@/components/jeecg/JUpload'\nimport JDictSelectTag from \"@/components/dict/JDictSelectTag\"\nimport JSelectUserByDep from '@/components/jeecgbiz/JSelectUserByDep'\nimport { putAction } from '@api/manage'\nimport { billModalMixin } from '../../mixins/billModalMixin'\nimport EditableTableColumnsSetter from \"../../components/EditableTableColumnsSetter\";\nimport OnlCgreportSelectModal from '../../components/OnlCgreportSelectModal'\nimport { getFormatDate } from '../../utils/util'\nimport { validateEntryNo } from '../../utils/editableTableValidate'\n\nexport default {\n  name: 'RubricSalInvoiceModal',\n  mixins: [JEditableTableMixin, billModalMixin],\n  components: {\n    EditableTableColumnsSetter,\n    JDate,\n    JUpload,\n    JSelectUserByDep,\n    JDictSelectTag,\n    OnlCgreportSelectModal\n  },\n\n  data() {\n    return {\n      width: '1200px',\n      moreStatus: false,\n\n      // 新增时子表默认添加几行空数据\n      addDefaultRowNum: 0,\n      validatorRules: {\n        billDate: {\n          rules: [\n            { required: true, message: '请输入单据日期!'},\n          ]\n        },\n        customerId: {\n          rules: [\n            { required: true, message: '请输入客户!'},\n          ]\n        },\n        sourceNo: {\n          rules: [\n            { required: true, message: '请输入销售发票!'},\n          ]\n        },\n      },\n      refKeys: ['finSalInvoiceEntry', 'sourceFinSalInvoiceEntry',],\n      tableKeys:['finSalInvoiceEntry', ],\n      activeKey: 'finSalInvoiceEntry',\n\n      // 红单明细\n      finSalInvoiceEntryTable: {\n        loading: false,\n        dataSource: [],\n        selectedRowCount: 0,\n        settingColumns: [], //显示列设置\n        columns: [\n          {\n            title: '分录号',\n            key: 'entryNo',\n            type: FormTypes.inputNumber,\n            width:\"60px\",\n            disabled: true,\n          },\n          {\n            title: '源单类型',\n            key: 'sourceType',\n            type: FormTypes.hidden,\n            width:\"1px\",\n            disabled: true,\n          },\n          {\n            title: '源单分录ID',\n            key: 'sourceEntryId',\n            type: FormTypes.hidden,\n            width:\"1px\",\n            disabled: true,\n          },\n          {\n            title: '源单分录号',\n            key: 'sourceEntryNo',\n            type: FormTypes.hidden,\n            width:\"1px\",\n            disabled: true,\n          },\n          {\n            title: '物料',\n            key: 'materialId',\n            type: FormTypes.sel_search,\n            dictCode:\"bas_material,name,id\",\n            width:\"160px\",\n            defaultValue: '',\n            options:[],\n            disabled: true,\n          },\n          {\n            title: '仓库',\n            key: 'warehouseId',\n            type: FormTypes.select,\n            dictCode:\"bas_warehouse,name,id\",\n            width:\"150px\",\n            defaultValue: '',\n            options:[],\n            disabled: true,\n          },\n          {\n            title: '批次号',\n            key: 'batchNo',\n            type: FormTypes.input,\n            width:\"200px\",\n            defaultValue: '',\n            disabled: true,\n          },\n          {\n            title: '结算数量',\n            key: 'settleQty',\n            type: FormTypes.input,\n            width:\"100px\",\n            defaultValue: '',\n            disabled: true,\n          },\n          {\n            title: '结算金额',\n            key: 'settleAmt',\n            type: FormTypes.input,\n            width:\"100px\",\n            defaultValue: '',\n            disabled: true,\n          },\n          {\n            title: '税率',\n            key: 'taxRate',\n            type: FormTypes.input,\n            width:\"80px\",\n            defaultValue: '',\n          },\n          {\n            title: '发票号',\n            key: 'invoiceNo',\n            type: FormTypes.input,\n            width:\"240px\",\n            placeholder: '请输入${title}',\n            defaultValue: '',\n            validateRules: [{ required: true, message: '${title}不能为空' }],\n          },\n          {\n            title: '开票日期',\n            key: 'invoiceDate',\n            type: FormTypes.date,\n            width:\"120px\",\n            placeholder: '请输入${title}',\n            defaultValue: '',\n          },\n          {\n            title: '开票数量',\n            key: 'invoiceQty',\n            type: FormTypes.inputNumber,\n            width:\"100px\",\n            placeholder: '请输入${title}',\n            defaultValue: '',\n            validateRules: [\n              { required: true, message: '${title}不能为空' },\n              { pattern: /^((-\\d+(\\.\\d+)?)|(0+(\\.0+)?))$/, message: '请输入0或负数!' },\n              { handler: this.validateRubric}\n            ],\n          },\n          {\n            title: '开票金额',\n            key: 'invoiceAmt',\n            type: FormTypes.inputNumber,\n            width: \"100px\",\n            placeholder: '请输入${title}',\n            defaultValue: '',\n            validateRules: [\n              {required: true, message: '${title}不能为空'},\n              { pattern: /^((-\\d+(\\.\\d+)?)|(0+(\\.0+)?))$/, message: '请输入0或负数!' },\n              {handler: this.validateRubric},\n            ],\n          },\n          {\n            title: '备注',\n            key: 'remark',\n            type: FormTypes.input,\n            width:\"200px\",\n            placeholder: '请输入${title}',\n            defaultValue: '',\n          },\n          {\n            title: '备注2',\n            key: 'remark2',\n            type: FormTypes.input,\n            width:\"200px\",\n            placeholder: '请输入${title}',\n            defaultValue: '',\n          },\n          {\n            title: '备注3',\n            key: 'remark3',\n            type: FormTypes.input,\n            width:\"200px\",\n            placeholder: '请输入${title}',\n            defaultValue: '',\n          },\n        ]\n      },\n\n      //蓝字明细\n      sourceFinSalInvoiceEntryTable: {\n        loading: false,\n        dataSource: [],\n        selectedRowCount: 0,\n        disabledRows:{},\n      },\n\n      url: {\n        add: \"/finance/finSalInvoice/add\",\n        edit: \"/finance/finSalInvoice/edit\",\n        approve: \"/finance/finSalInvoice/approve\",\n        finSalInvoiceEntry: {\n          list: '/finance/finSalInvoice/queryFinSalInvoiceEntryByMainId'\n        },\n      }\n    }\n  },\n\n  methods: {\n    getAllTable() {\n      let values = this.tableKeys.map(key => getRefPromise(this, key))\n      return Promise.all(values)\n    },\n\n    addInit() {\n      this.model.isAuto = 0\n      this.model.isRubric = 1\n      this.model.sourceType = 'fin_sal_invoice'\n      //处理状态：编辑中\n      this.model.billProcStatus = '12'\n\n      // 请求后台的填值规则接口地址\n      const url = '/sys/fillRule/executeRuleByCode/'\n      const ruleCode = 'sal_invoice_bill_no'\n      const that = this\n      putAction(url + ruleCode, {}).then(res => {\n        // 执行成功，获取返回的值，并赋到页面上\n        if (res.success) {\n          that.model.billNo = res.result;\n          that.$nextTick(() => {\n            that.form.setFieldsValue({'billNo':res.result, 'billDate':getFormatDate()});\n          })\n        }\n      })\n    },\n\n    /** 调用完edit()方法之后会自动调用此方法 */\n    editAfter() {\n      const that = this;\n      //sourceFinSalInvoiceEntry未在tableKeys中\n      this.$nextTick( ()=>that.$refs.sourceFinSalInvoiceEntry.initialize() );\n\n      if (this.action === 'add') {\n        this.addInit();\n        this.activeKey = 'sourceFinSalInvoiceEntry';\n      } else {\n        this.activeKey = 'finSalInvoiceEntry';\n      }\n\n      let fieldval = pick(this.model,'billNo','billDate','isAuto','invoiceType','isRubric',\n        'sourceType','sourceNo','clerkId','customerId','attachment','remark',\n        'billProcStatus','approverId','flowId','isApproved','effectiveTime','isVoided','isClosed',\n        'sysOrgCode','createBy','createTime','updateBy','updateTime')\n      this.$nextTick(() => {\n        this.form.setFieldsValue(fieldval)\n      })\n      // 加载子表数据\n      if (this.model.id) {\n        let params = { id: this.model.id }\n        this.requestSubTableData(this.url.finSalInvoiceEntry.list, params, this.finSalInvoiceEntryTable,\n          loadSecondSubTableData);\n\n        function loadSecondSubTableData(){\n          let params = { id: that.model.sourceId }\n          that.requestSubTableData(that.url.finSalInvoiceEntry.list, params, that.sourceFinSalInvoiceEntryTable,\n            that.refreshDisabledRows);\n        }\n      }\n    },\n\n    /** 整理成formData */\n    classifyIntoFormData(allValues) {\n      let main = Object.assign(this.model, allValues.formValue)\n      return {\n        ...main, // 展开\n        finSalInvoiceEntryList: allValues.tablesValue[0].values,\n      }\n    },\n\n    validateError(msg){\n      this.$message.error(msg)\n    },\n\n    popupCallback(row){\n      this.form.setFieldsValue(pick(row,'billNo','billDate','isAuto','invoiceType','isRubric',\n        'sourceType','sourceNo','clerkId','customerId','attachment','remark',\n        'billProcStatus','approverId','flowId','isApproved','effectiveTime','isVoided','isClosed',\n        'sysOrgCode','createBy','createTime','updateBy','updateTime'))\n    },\n\n    handleSourceSelect() {\n      let queryParams = {};\n      queryParams['customer_id'] = this.form.getFieldValue('customerId');\n      this.$refs.selectModal.initQueryParams(queryParams);\n      this.$refs.selectModal.visible = true;\n    },\n\n    handleSourceSelectCallback(selectedRows){\n      if ( this.model.sourceId === selectedRows[0]['id']) return;\n\n      this.model.sourceId = selectedRows[0]['id'];\n      this.form.setFieldsValue({sourceNo: selectedRows[0]['bill_no'],\n        customerId: selectedRows[0]['customer_id']});\n\n      // 加载子表数据\n      let params = { id: this.model.sourceId }\n      this.requestSubTableData(this.url.finSalInvoiceEntry.list, params, this.sourceFinSalInvoiceEntryTable,\n        this.refreshDisabledRows);\n    },\n\n    handleAddEntry(){\n      let source = this.$refs.sourceFinSalInvoiceEntry,\n          target = this.$refs.finSalInvoiceEntry;\n\n      let { values } = source.getValuesSync({ validate: false, rowIds: source.selectedRowIds});\n      for(let v of values) {\n        let row = pick(v, 'entryNo','materialId','warehouseId','batchNo','settleQty','settleAmt','taxRate');\n        row.sourceType = 'fin_sal_invoice.fin_sal_invoice_entry';\n        row.sourceEntryId = v.id;\n        row.sourceEntryNo = this.form.getFieldValue(\"sourceNo\") + '.' + v.entryNo;\n        row.invoiceQty = -v.invoiceQty;\n        row.invoiceAmt = -v.invoiceAmt;\n        target.add();\n        let rowId = target.rows[target.rows.length - 1].id;\n        target.setValues([{rowKey: rowId, values: row}]);\n      }\n      this.refreshDisabledRows();\n    },\n\n    handleRemoveEntry(){\n      this.$refs.finSalInvoiceEntry.removeSelectedRows();\n      this.refreshDisabledRows();\n    },\n\n    refreshDisabledRows(){\n      let entryNos = [];\n      let { values } = this.$refs.finSalInvoiceEntry.getValuesSync({ validate: false});\n      for(let v of values) {\n        entryNos.push(Number(v.entryNo));\n      }\n      this.sourceFinSalInvoiceEntryTable.disabledRows = entryNos.length===0 ? {} : {entryNo:entryNos};\n      //disabledRowIds不初始会保留前面的数据，导致与disabledRows不一致！\n      this.$refs.sourceFinSalInvoiceEntry.disabledRowIds = [];\n      //使新的disabledRows生效\n      let dataSource = [...this.sourceFinSalInvoiceEntryTable.dataSource];\n      this.sourceFinSalInvoiceEntryTable.dataSource = dataSource;\n    },\n\n    validateRubric(type, value, row, column, callback, target) {\n      if (type !== 'blur') {\n        callback();\n        return;\n      }\n\n      let { values } = target.getValuesSync({ validate: false, rowIds: [row.id]});\n      let rubric = Number(values[0][column.key]);\n      if (isNaN(rubric)) {\n        callback();\n        return;\n      }\n\n      let sourceEntryId = values[0].sourceEntryId;\n      let rows = this.sourceFinSalInvoiceEntryTable.dataSource.filter(row => row.id === sourceEntryId);\n      let blue = rows[0][column.key]\n      if (isNaN(blue)) {\n        callback();\n        return;\n      }\n\n      if (-rubric > blue) {\n        callback(false, '不能超出蓝单！');\n        return;\n      }\n\n      callback(true); //true：通过验证\n    },\n\n  },\n\n}\n",null]}